2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	Use c++11 when we use glibmm24 version >= 2.46
	* configure.ac: If c++11 is required by the fact that we use a
	version of glibmm24 >= 2.46, then use c++11.
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.cc
	(DBGPerspectiveDefaultLayout::Priv::views): Make this be a
	map<int, Gtk::Widget*> rather than a map<int, Gtk::Widget&>, to
	keep the compiler happy.
	(DBGPerspectiveDefaultLayout::{activate,append}_view): Adjust.
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.cc
	(DBGPerspectiveTwoPaneLayout::Priv::views): Make this be a
	map<int, Gtk::Widget*> rather than a map<int, Gtk::Widget&>, to
	keep the compiler happy.
	(DBGPerspectiveTwoPaneLayout::{activate,append}_view): Adjust.
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.cc
	(DBGPerspectiveWideLayout::Priv::views): Make this be a map<int,
	Gtk::Widget*> rather than a map<int, Gtk::Widget&>, to keep the
	compiler happy.

2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	Update ChangeLog to fix some bad entries
	* ChangeLog: Update to cleanup some weirdness

2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	Tighten the output of gitlog2gnucl
	* gitlog2gnucl (Entry::first_msg_line): New data member.
	(Entry::initialize): Adjust to initialize Entry::first_msg_line.
	(Entry::keep_line): Filter out Signed-off-by: lines.
	(Entry::to_s): If there is no summary line and the entry body is
	empty, then keep the first line of the commit message as the
	summary.
	(process_git_log): Better detection of the summary line.  Also
	keep a handle on the first line of the commit message.

2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	No need to try to specify absolute paths for files in the build system
	* src/Makefile.am: Do not use absolute paths of files to build
	here.
	* src/confmgr/Makefile.am: Likewise.
	* src/dbdimpl/sqlite/Makefile.am: Likewise.
	* src/dbgengine/Makefile.am: Likewise.
	* src/langs/Makefile.am: Likewise.
	* src/persp/Makefile.am: Likewise.
	* src/persp/dbgperspective/Makefile.am: Likewise.
	* src/uicommon/Makefile.am: Likewise.
	* src/workbench/Makefile.am: Likewise.
	* tests/Makefile.am: Likewise.

2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	Add missing subdir link to the build system
	* data/icons/hicolor/Makefile.am: Add the symbolic sub-directory
	to the build system.

2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	Update NEWS file for 0.9.6 release
	* NEWS: update for 0.9.6 release.

2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	Update ChangeLog automatically
	* ChangeLog: Update.

2015-09-23  Dodji Seketeli <dodji@seketeli.org>

	Update INSTALL file
	* INSTALL: Update.

2015-09-03  Dušan Kazik <prescott66@gmail.com>

	Updated Slovak translation

2015-04-02  Jakub Steiner <jimmac@gmail.com>

	icon: provide a symbolic variant of the app icon

2015-08-26  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2015-08-26  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

	Updated Chinese (Taiwan) translation

2015-08-15  Kristjan SCHMIDT <kristjan.schmidt@googlemail.com>

	Updated Esperanto translation

2015-06-29  Pedro Albuquerque <palbuquerque73@gmail.com>

	Updated Portuguese translation

2015-03-13  Samir Ribic <samir.ribic@etf.unsa.ba>

	Added Bosnian translation

2015-03-09  Sebastian Rasmussen <sebras@gmail.com>

	Updated Swedish translation

2015-03-08  Josef Andersson <josef.andersson@gmail.com>

	Updated Swedish translation

2015-02-12  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation.

2015-02-09  Inaki Larranaga Murgoitio <dooteo@zundan.com>

	Added Basque language\nAdded 'eu' (Basque) to LINGUAS

2014-12-24  Necdet Yücel <necdetyucel@gmail.com>

	Updated Turkish translation

2014-12-08  Muhammet Kara <muhammetk@gmail.com>

	Updated Turkish translation

2014-11-27  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2014-11-03  Timo Jyrinki <timo@debian.org>

	Change Finnish translation team web page to l10n.gnome.org

2014-11-01  Dodji Seketeli <dodji@seketeli.org>

	Avoid running some tests due to a GDB bug
	* test/Makefile.am: Do not run runtestvars and
	runtestvarpathexpr.
	* tests/test-watchpoint.cc: Adjust for current GDB behaviour.

2014-09-21  Maria  Mavridou <mavridou@gmail.com>

	Updated Greek translation

2014-08-27  Nilamdyuti Goswami <ngoswami@redhat.com>

	Updated Assamese translation

2014-08-26  Nilamdyuti Goswami <ngoswami@redhat.com>

	Added Assamese translation

2014-08-17  Lasse Liehu <lasse.liehu@gmail.com>

	Finnish translation update

2014-07-31  Piotr Drąg <piotrdrag@gmail.com>

	doap: add <programming-language>

2014-07-30  Olav Vitters <olav@vitters.nl>

	doap category apps

2014-07-15  Dodji Seketeli <dodji@seketeli.org>

	Fix a typo in configure.
	* configure.ac: Change HAS_VTR_2_90 into HAS_VTE_2_90.

2014-07-14  Dodji Seketeli <dodji@seketeli.org>

	Support vte 2.90 alongside 2.91
	* configure.ac: Test the presence of vte-2.90 *and* vte-2.91, and
	configure the library accordingly.
	* src/uicommon/nmv-terminal.cc (Terminal::Priv::init_body):
	Depending on the vte version, use the correct API.

2014-07-14  Dodji Seketeli <dodji@seketeli.org>

	Make all dialogs transient on top of the workbench root window
	* src/uicommon/nmv-dialog.h (Dialog::Dialog): Add a parent window
	parameter.
	* src/uicommon/nmv-dialog.cc (Dialog::Dialog): Add a parent window
	parameter.  Add apidoc comments.
	* src/common/nmv-asm-utils.h (class Gtk::Window): Forward declare
	this here.
	(ReadLine::ReadLine): Take a Gtk::Window& as the parent window for
	the dialogs it might use.
	* src/uicommon/nmv-ui-utils.h (ask_user_to_select_file)
	(find_file_or_ask_user, find_file_and_read_line, display_info)
	(display_error, display_warning, ask_yes_no_question)
	(ask_yes_no_cancel_question): Add a parent window parameter.
	(display_error_not_transient): New function for cases where we
	cannot really pass a parent window to the dialog yet.
	(NEMIVER_CATCH, NEMIVER_CATCH_AND_RETURN): Use
	display_error_not_transient because this is used in contexts where
	we cannot yet get the parent window.  We could, but that'll
	involve even more changes.  So let's do this for now.
	* src/uicommon/nmv-ui-utils.cc (ask_user_to_select_file)
	(find_file_or_ask_user, find_file_and_read_line): Add a parent
	window parameter.  Add apidoc comments.  Adjust.
	(DontShowAgainMsgDialog::DontShowAgainMsgDialog): Likewise.
	Adjust call to Gtk::MessageDialog constructor.
	* src/persp/dbgperspective/nmv-call-function-dialog.h
	(CallFunctionDialog::CallFunctionDialog): Likewise.
	* src/persp/dbgperspective/nmv-call-function-dialog.cc
	(CallFunctionDialog::CallFunctionDialog): Likewise.  Add comment.
	* src/persp/dbgperspective/nmv-choose-overloads-dialog.h
	(ChooseOverloadsDialog::ChooseOverloadsDialog): Likewise.
	* src/persp/dbgperspective/nmv-choose-overloads-dialog.cc
	(ChooseOverloadsDialog::ChooseOverloadsDialog): Likewise.  Add
	comment.
	* src/persp/dbgperspective/nmv-expr-inspector-dialog.h
	(ExprInspectorDialog::ExprInspectorDialog): Add a new parent
	window parameter.
	* src/persp/dbgperspective/nmv-expr-inspector-dialog.cc
	(ExprInspectorDialog::ExprInspectorDialog): Add a new parent
	window parameter.
	* src/persp/dbgperspective/nmv-expr-monitor.cc
	(ExprMonitor::Priv::on_add_expression_action): Adjust call to
	ExprInspectorDialog constructor.
	* src/persp/dbgperspective/nmv-find-text-dialog.h
	(FindTextDialog::FindTextDialog): Add a parent window parameter.
	* src/persp/dbgperspective/nmv-find-text-dialog.cc
	(FindTextDialog::FindTextDialog): Add a parent window parameter.
	Add apidoc comments.
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.cc
	(GlobalVarsInspectorDialog::GlobalVarsInspectorDialog): Add a
	parent window parameter.  Add apidoc comments.
	(GlobalVarsInspectorDialog::Priv::show_variable_type_in_dialog):
	Adjust call to ui_utils::display_info.
	* src/persp/dbgperspective/nmv-load-core-dialog.h
	(LoadCoreDialog::LoadCoreDialog): Add a parent window parameter.
	* src/persp/dbgperspective/nmv-load-core-dialog.cc
	(LoadCoreDialog::LoadCoreDialog): Add a parent window parameter.
	Add apidoc comments.
	* src/persp/dbgperspective/nmv-open-file-dialog.h
	(OpenFileDialog::OpenFileDialog): Add a parent window parameter.
	* src/persp/dbgperspective/nmv-open-file-dialog.cc
	(OpenFileDialog::OpenFileDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-preferences-dialog.h
	(PreferencesDialog::PreferencesDialog): Add a parent window
	parameter.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc
	(PreferencesDialog::PreferencesDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-proc-list-dialog.h
	(ProcListDialog::ProcListDialog): Add a parent window parameter.
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc
	(ProcListDialog::ProcListDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-remote-target-dialog.h
	(RemoteTargetDialog::RemoteTargetDialog): Add a parent window
	parameter.
	* src/persp/dbgperspective/nmv-remote-target-dialog.cc
	(RemoteTargetDialog::RemoteTargetDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-run-program-dialog.h
	(RunProgramDialog::RunProgramDialog): Add a parent window
	parameter.
	* src/persp/dbgperspective/nmv-run-program-dialog.cc
	(RunProgramDialog::RunProgramDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.h
	(SavedSessionsDialog::SavedSessionsDialog): Add a parent window
	parameter.
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.cc
	(SavedSessionsDialog::SavedSessionsDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.h
	(SetBreakpointDialog::SetBreakpointDialog): Add a parent window
	parameter.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::SetBreakpointDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-set-jump-to-dialog.h
	(SetJumpToDialog::SetJumpToDialog): Add a parent window parameter.
	* src/persp/dbgperspective/nmv-set-jump-to-dialog.cc
	(SetJumpToDialog::SetJumpToDialog): Add a parent window
	parameter. Add apidoc comments.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.h
	(WatchpointDialog::WatchpointDialog): Add a parent window parameter.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc
	(WatchpointDialog::WatchpointDialog): Add a parent window
	parameter.  Add apidoc comments.
	* src/uicommon/nmv-locate-file-dialog.h
	(LocateFileDialog::LocateFileDialog): Add a parent window parameter.
	* src/uicommon/nmv-locate-file-dialog.cc
	(LocateFileDialog::LocateFileDialog): Add a parent window
	parameter. Add apidoc comments.
	Misc style fixes.
	* src/uicommon/nmv-source-editor.h (SourceEditor::{SourceEditor,
	add_asm, load_asm, load_file}): Add a parent window parameter.
	* src/uicommon/nmv-source-editor.cc (SourceEditor::Priv::Priv):
	Add a parent window parameter.
	(SourceEditor::SourceEditor): Remove the unused default
	constructor.  Add a parent window parameter to the other
	constructors and add apidoc comments there.
	(SourceEditor::{add_asm, load_asm, load_file): Add a parent window
	parameter.  Adjust.
	(SourceEditor::load_file): Likewise.  Adjust call to
	ui_utils::display_error.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::show_variable_type_in_dialog): Adjust
	call to ui_utils::display_info.
	* src/uicommon/nmv-terminal.cc (on_button_press_signal): Misc
	style fixes.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::Priv::find_file_or_ask_user): Adjust call to
	ui_utils::find_file_or_ask_user.
	(DBGPerspective::Priv::load_file): Adjust call to
	SourceEditor::load_file.
	(DBGPerspective::{on_find_text_response_signal,
	on_debugger_connected_to_remote_target_signal,
	on_program_finished_signal, on_engine_died_signal,
	on_signal_received_by_target_signal, on_debugger_error_signal,
	on_file_content_changed, restart_inferior, execute_program,
	attach_to_program, connect_to_remote_target, stop, set_breakpoint,
	agree_to_shutdown}): Adjust call to ui_utils::{display_info,
	display_warning, display_error}.
	(DBGPerspective::on_jump_to_location_action): Adjust call to
	constructor for SetJumpToDialog.
	(DBGPerspective::get_find_text_dialog): Adjust call to constructor
	for FindTextDialog.
	(DBGPerspective::create_source_editor): Adjust call to constructor
	for SourceEditor and OpenFileDialog.
	(DBGPerspective::load_asm ): Adjust.
	(DBGPerspective::execute_session): Adjust call to
	SourceEditor::load_asm.
	(DBGPerspective::execute_program): Adjust call to
	RunProgramDialog and ProcListDialog.
	(DBGPerspective::choose_a_saved_session): Adjust call to
	SavedSessionsDialog.
	(DBGPerspective::edit_preferences): Adjust call to
	PreferencesDialog.
	(DBGPerspective::load_core_file): Adjust call to LoadCoreDialog.
	(DBGPerspective::ask_user_to_select_file): Adjust call to
	ui_utils::ask_user_to_select_file.
	(DBGPerspective::choose_function_overload): Adjust call to
	ChooseOverloadsDialog.
	(DBGPerspective::set_breakpoint_using_dialog): Adjust call to
	SetBreakpointDialog.
	(DBGPerspective::set_watchpoint_using_dialog): Adjust call to
	WatchpointDialog.
	(DBGPerspective::inspect_expression): Adjust call to
	ExprInspectorDialog.
	(DBGPerspective::call_function): Adjust call to CallFunctionDialog
	constructor.

2014-07-14  Dodji Seketeli <dodji@seketeli.org>

	Misc style fixes and comments additions
	* src/common/nmv-asm-utils.h (FindFileAndReadLine, class
	ReadLine, ReadLine::operator()): Add comment.
	* src/common/nmv-asm-utils.cc (write_asm_instr, write_asm_instr):
	Add apidoc comment.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_activate_global_variables): Add ';' after
	NEMIVER_TRY, NEMIVER_CATCH.
	(DBGPerspective::connect_to_remote_target): Remove useless white
	spaces.
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.h:
	Likewise.
	* src/persp/dbgperspective/nmv-load-core-dialog.h: Likewise.
	* src/persp/dbgperspective/nmv-open-file-dialog.h: Likewise.
	* src/persp/dbgperspective/nmv-proc-list-dialog.h: Likewise.
	* src/uicommon/nmv-locate-file-dialog.cc: Likewise.

2014-07-12  Dodji Seketeli <dodji@seketeli.org>

	Update the INSTALL file
	* INSTALL: Update the text.

2014-07-08  Fabien Parent <parent.f@gmail.com>

	Use BOOSTLIBDIR instead of harcoded path to find boost
	* configure.ac: Use BOOSTLIBDIR variable to find libboost.

2014-07-08  Fabien Parent <parent.f@gmail.com>

	Import new boost M4 files from upstream
	* m4/ax_boost_base.m4: Imported from autoconf-archive-2014.02.28,
	* m4/ax_boost_test_exec_monitor.m4: Ditto,
	* m4/ax_boost_unit_test_framework.m4: Ditto.

2014-01-06  Juan R. García Blanco <juanrgar@gmail.com>

	Fix tr1 and pty.h compilation issues
	* configure.ac: Check for tr1/unordered_map, tr1/memory
	and tr1/tuple, and their boost::tr1 counterparts.
	Check for pty.h, util.h and libutil.h.
	* src/common/nmv-log-stream.cc: Replace checks on compiler
	defined macros with checks for required headers; in this
	case tr1/unordered_map and boost/tr1/unordered_map.hpp.
	* src/dbgengine/nmv-dbg-common.h: Check whether tr1/memory
	or boost/tr1/memory.hpp is available and use accordingly.
	* src/dbgengine/nmv-var-list-walker.cc (SafePtrCmp::operator()):
	Compare method const-correctness.
	* src/dbgengine/nmv-var-walker.cc (SafePtrCmp::operator()):
	Compare method const-correctness.
	* src/langs/nmv-cpp-ast.h: Replace checks on compiler
	defined macros with checks for required headers; in this
	case tr1/memory and boost/tr1/memory.hpp.
	Rearrange various class definitions to make the compiler
	aware of the class hierarchy ahead of forward-declaring
	shared_ptr typedefs.
	* src/persp/dbgperspective/nmv-find-text-dialog.h: Use
	SafePtr, ObjectRef and ObjectUnref from nemiver::common.
	* src/uicommon/nmv-terminal.cc: Check whether tr1/tuple or
	boost/tr1/tuple.hpp is available and use accordingly.
	Replace checks on platform defined macros with checks for
	required headers; in this case pty.h, util.h and libutil.h.
	* src/common/nmv-proc-utils.cc: Replace checks on
	platform defined macros with checks for required headers;
	in this case pty.h, util.h and libutil.h.

2013-12-30  Juan R. García Blanco <juanrgar@gmail.com>

	Fix compilation issue in tests/ due to wrong type
	* tests/threads.cc (thread_func): Type of unused
	variable tid changed from int to pthread_t.

2014-07-08  Dodji Seketeli <dodji@seketeli.org>

	Misc space fix in src/common/nmv-safe-ptr-utils.h
	* src/common/nmv-safe-ptr-utils.h: Remove space before the '<' of
	a template-id.

2014-05-16  Debarshi Ray <debarshir@gnome.org>

	730243 Port to vte-2.91 API
	* configure.ac: Build against vte-2.91.
	* src/uicommon/nmv-terminal (init_body): Use
	vte_terminal_set_font instead of
	vte_terminal_set_font_from_string.  Remove
	vte_terminal_set_emulation that is not present in this version of
	vte anymore.  The emulation is set to 'xterm' by default anyway.
	(init_pty): vte_terminal_set_pty expects a VtePty instead of a fd.
	Adjust according to that.  Do not forget to make the code
	exception-safe.

2014-07-07  Dodji Seketeli <dodji@seketeli.org>

	Consolidate NativeGObjectSafePtr definitions
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(RefGObjectNative, UnrefGObjectNative): Move the definition of
	these functors ...
	* src/common/nmv-safe-ptr-utils.h: ... here.

2014-05-16  Debarshi Ray <debarshir@gnome.org>

	730243 Consolidate GErrorSafePtr definitions
	* src/common/nmv-ustring.cc: Remove local copy of GErrorSafePtr.
	(wstring_to_ustring): Use GErrorSafePtr from nmv-error.h
	instead of local copy.
	(ustring_to_wstring): Likewise.
	* src/confmgr/nmv-gconf-mgr.cc: Remove local copy of
	GErrorSafePtr.
	* src/common/nmv-safe-ptr-utils.h: Move the copy of
	GErrorSafePtr definition here.

2014-07-04  Dodji Seketeli <dodji@seketeli.org>

	Add subdir-objects automake option to src/common/Makefile.am

2014-07-07  Dodji Seketeli <dodji@seketeli.org>

	Update copyright & misc formatting
	* src/common/nmv-safe-ptr-utils.h: Update copyright and re-format
	license header.

2014-07-07  Dodji Seketeli <dodji@seketeli.org>

	Update INSTALL file
	* INSTALL: Update.

2014-06-02 16:41:10 -0500  Michael Catanzaro <mcatanzaro@gnome.org>

	configure.ac: don't fail if gconf is missing

2014-04-22  Dirgita <dirgitadevina@gmail.com>

	Updated Indonesian translation

2014-04-18  marablack3 <marablack3@gmail.com>

	Updated Greek translation

2014-04-03  Akom Chotiphantawanon <knight2000@gmail.com>

	Updated Thai translation

2014-04-01  Yuri Myasoedov <ymyasoedov@yandex.ru>

	Updated Russian translation

2014-03-20  Мирослав Николић <miroslavnikolic@rocketmail.com>

	Updated Serbian translation

2014-03-19  Ask H. Larsen <asklarsen@gmail.com>

	Updated Danish translation

2014-03-19 11:54:30 -0300  Rafael Ferreira <rafael.f.f1@gmail.com>

	Updated Brazilian Portuguese translation for help files

2014-03-18  Tiagosdot <almosthumane@portugalmail.pt>

	Updated Portuguese translation

2014-03-15  Claude Paroz <claude@2xlibre.net>

	Updated French translation

2014-03-15  Seong-ho Cho <darkcircle.0426@gmail.com>

	Updated Korean translation

2014-03-09  Milo Casagrande <milo@ubuntu.com>

	[l10n] Updated Italian translation.

2014-03-09  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2014-03-07  Benjamin St <b@stbe.at>

	Updated German translation

2014-03-07  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

	Updated Latvian translation

2014-03-03  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2014-03-01  Andika Triwidada <andika@gmail.com>

	Updated Indonesian translation

2014-02-26  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2014-02-24  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2014-02-23  Balázs Úr <urbalazs@src.gnome.org>

	Updated Hungarian translation

2014-02-21  Gil Forcada <gforcada@gnome.org>

	[l10n] Update Catalan translation

2014-02-21  Rafael Ferreira <rafael.f.f1@gmail.com>

	Updated Brazilian Portuguese translation

2014-02-20  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2014-02-20  Wylmer Wang <wantinghard@gmail.com>

	Updated Chinese (China) translation

2014-02-15  Aurimas Černius <aurisc4@gmail.com>

	Updated Lithuanian translation

2014-02-15  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2014-02-14  Richard Hughes <richard@hughsie.com>

	Added translatable AppData file

2014-02-12  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation

2014-02-01  Piotr Drąg <piotrdrag@gmail.com>

	Revert "Updated FSF's address"

2014-01-23  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated FSF's address

2014-01-18  Piotr Drąg <piotrdrag@gmail.com>

	Add a trailing semicolon to keywords in Russian translation

2014-01-18  Wylmer Wang <wantinghard@gmail.com>

	Fix a mistake in Chinese simplified translation that may block compiling

2013-12-18 08:10:08 -0500  William Jon McCann <william.jon.mccann@gmail.com>

	Update project homepage url

2013-10-28  Fabien Parent <parent.f@gmail.com>

	710828 Fix a condition in UString::is_integer
	* src/common/nmv-ustring.cc (UString::is_integer): Replace a 'and' by a
	'or' in the condition checking for non-numerical characters.

2013-12-08  Dodji Seketeli <dodji@seketeli.org>

	Slight wording change in the announcement text
	* Makefile.am: Change the title of the "Changes" section.

2013-12-08  Dodji Seketeli <dodji@seketeli.org>

	Bump version number to 0.9.6 for next developments
	* configure.ac: Bump version number to 0.9.6

2013-12-08  Dodji Seketeli <dodji@seketeli.org>

	Automatic ChangeLog update for 0.9.5
	* ChangeLog: Automatic update for 0.9.5.

2013-12-08  Dodji Seketeli <dodji@seketeli.org>

	Update NEWS file for 0.9.5
	* NEWS: Update for 0.9.5

2013-12-08  Dodji Seketeli <dodji@seketeli.org>

	Update Copyright in INSTALL file.
	* NEWS: Update copyright year mention.

2013-12-07  甘露(Gan  Lu) <rhythm.gan@gmail.com>

	Update Chinese simplified translation

2013-10-27  Dodji Seketeli <dodji@seketeli.org>

	Support modified-breakpoint async output from GDB
	* src/dbgengine/nmv-dbg-common.h
	(Output::OutOfBandRecord::{m_has_modified_breakpoint,
	m_modified_breakpoint): New members.
	(Output::OutOfBandRecord::{has_modified_breakpoint,
	modified_breakpoint}): New accessors.
	(Output::OutOfBandRecord::clear): Clear m_has_modified_breakpoint
	and m_modified_breakpoint.
	(Output::OutOfBandRecords): New typedef.
	* src/dbgengine/nmv-gdbmi-parser.h
	(GDBMIParser::parse_breakpoint_modified_async_output): New
	declaration.
	* src/dbgengine/nmv-gdbmi-parser.cc (CHECK_END): Re-use
	END_OF_INPUT for this macro.
	(PARSING_ERROR_IF_END): New macro.
	(PREFIX_*, NDELETED, NUMCHILD, CHANGELIST, PATH_EXPR): Make these
	global variables static.
	(PREFIX_BREAKPOINT_MODIFIED_ASYNC_OUTPUT): New static global
	variable.
	(GDBMIParser::parse_breakpoint_modified_async_output): New function.
	(GDBMIParser::parse_out_of_band_record):  New the new function
	above.
	* src/dbgengine/nmv-i-debugger.h (OverloadsChoiceEntry): New
	typedef.
	* src/dbgengine/nmv-gdb-engine.cc
	(OnBreakpointHandler::{has_modified_breakpoint,
	notify_breakpoint_deleted_signal,
	append_bp_to_cache_and_notify_bp_set): New helper functions.
	(OnBreakpointHandler::can_handle): If the output contains an
	out-of-band-record with the modified breakpoint async output then
	the OnBreakpointHandler can handle this output.
	(OnBreakpointHandler::do_handle): New the above. Detect if a
	breakpoint was modified.  If so, delete its previous version from
	the cache, notify listeners about the deletion, add the new
	version to the cache and notify listeners about the addition.
	Also, rename the has_breaks boolean into has_breaks_set.  Remove
	some trailing white space.  Use the new
	notify_breakpoint_deleted_signal to delete some old code, making
	this a bit more maintainable.
	* tests/test-gdbmi.cc (gv_breakpoint_modified_async_output0): New
	global with a modified-breakpoint async output from GDB.
	(test_breakpoint): Add testing about parsing the
	modified-breakpoint async output from GDB above.

2013-10-26  Dodji Seketeli <dodji@seketeli.org>

	Handle deleting all sub-breakpoints at once
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::Breakpoint::parent_id): New inline method.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::delete_breakpoint):
	When passed the id of a sub-breakpoint, delete its parent
	breakpoint.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::on_debugger_breakpoint_deleted_signal):
	Delete all sub-breakpoint which parent_id equals the id of the
	deleted breakpoint.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_breakpoint_deleted_signal): Likewise.
	(DBGPerspective::record_and_save_session): Avoid recording the
	same breakpoint twice b/c we'd recorded to sub-breakpoint of the
	same parent breakpoint.
	(DBGPerspective::execute_program): Do not save/re-set a breakpoint
	twice b/c we'd have saved two sub-breakpoints with the same parent
	id.
	(DBGPerspective::delete_breakpoint): Walk all the breakpoints and
	delete all breakpoints which file location equals the ones of the
	breakpoint to delete.

2013-10-25  Dodji Seketeli <dodji@seketeli.org>

	Rename IDebugger::Breakpoint::number to IDebugger::Breakpoint::id
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Breakpoint::id):
	Rename IDebugger::Breakpoint::number into this.  What we are
	getting is a string id, not a an integer number (the id can be
	"2.3", for instance).
	(IDebugger::Breakpoint::number): New method that always return the
	sub breakpoint number.
	* src/dbgengine/nmv-gdb-engine.cc
	(OnBreakpointHandler::do_handle)
	(GDBEngine::append_breakpoint_to_cache, ): Update for the
	Breakpoint::id rename.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_result_record): Likewise.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::{breakpoint_list_has_id,
	find_breakpoint_in_model, update_breakpoint,
	on_debugger_breakpoints_list_signal}): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::{on_breakpoint_delete_action,
	on_debugger_breakpoints_list_signal,
	do_jump_and_break_to_location, re_initialize_set_breakpoints,
	append_breakpoint_to_cache, delete_breakpoint, toggle_countpoint,
	toggle_breakpoint_enabled}): Likewise.
	* tests/test-gdbmi.cc (test_breakpoint_table, test_breakpoint):
	Likewise.

2013-10-26  Dodji Seketeli <dodji@seketeli.org>

	Style, white space & other mechanical cleanups
	* src/dbgengine/nmv-dbg-common.h (class OutOfBandRecord): Fix
	comments.
	(Output::ResultRecord::has_var_changes): Remove trailing white
	space.
	* src/dbgengine/nmv-gdb-engine.h: Flag the file as being a c++ one
	for emacs.
	* src/dbgengine/nmv-gdb-engine.cc
	(OnBreakpointHandler::{has_overloads_prompt,
	extract_overloads_choice_prompt_values, has_breakpoints_set}):
	Change member function declaration style.
	(GDBEngine::disable_breakpoint): Remove unused variable.
	(GDBEngine::append_breakpoint_to_cache): Wrap too long line.
	Remove useless white space.
	(GDBEngine::append_breakpoint_to_cache): Likewise.
	* src/dbgengine/nmv-gdbmi-parser.cc (LOG_PARSING_ERROR): Remove
	this unused macro.  Rename LOG_PARSING_ERROR2 into
	LOG_PARSING_ERROR.
	(LOG_PARSING_ERROR_MSG): Remove this unused macro.  Rename
	LOG_PARSING_ERROR_MSG2 into LOG_PARSING_ERROR_MSG.
	(CHECK_END): Remove this unused macro.  Rename CHECK_END2 into
	this.
	(CHECK_END_BREAK): Remove this unused macro.
	(SKIP_WS): Remove.  Renamed SKIP_WS2 into this.
	(SKIP_BLANK): Remove.  Renamed SKIP_BLANK2 into this.
	(lots of functions): Update for the renaming above.
	(GDBMIParser::{parse_breakpoint, parse_threads_list): Remove
	trailing white space.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::should_process_now): Remove useless white
	space.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_session, DBGPerspective::get_breakpoint):
	White space fixes.

2013-10-25  Dodji Seketeli <dodji@seketeli.org>

	Re-allow the "Run" menuitem after target exited
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_actions): Move the RunMenuItemAction into
	the inferior_loaded_action_group.
	(DBGPerspective::update_action_group_sensitivity): Do not disallow
	the sensitivity of the inferior_loaded_action_group after the
	target exited.

2013-10-13  Carles Ferrando <carles.ferrando@gmail.com>

	[l10n] Updated Catalan (Valencian) translation

2013-10-13  Dodji Seketeli <dodji@seketeli.org>

	698371 Run command is available even after detaching
	* src/dbgengine/nmv-gdb-engine.h (GDBengine::reset_command_queue):
	New entry point.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::reset_command_queue): Implement this new entry point.
	(GDBEngine::load_program): Use this new reset_command_queue entry
	point.
	(GDBEngine::detach_from_target): Normally, the inferior must be
	stopped before accepting commands; soo to accept the "detach"
	command, the target must be stopped too.  Thus, if the target is
	not stopped, let's stop it first by sending it a SIGINT signal,
	end schedule the detach command to be sent to GDB right after
	that.
	(OnDetachHandler::do_handle): Reset command queue upon detach.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_actions): Remove the
	s_target_not_started_action_entries.  Move the RunMenuItemAction
	into the s_debugger_ready_action_entries object. Remove
	m_priv->target_not_started_action_group.
	(DBGPerspective::on_engine_died_signal)
	(DBGPerspective::update_action_group_sensitivity): Adjust for
	removing the target_not_started_action_group action group.
	(DBGPerspective::on_debugger_detached_from_target_signal): Closed
	opened file only upon detach from target.  Adjust for removing the
	target_not_started_action_group action group.

2013-10-13  Dodji Seketeli <dodji@seketeli.org>

	White space and style fixes
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::Priv::list_frame):
	Remove useless white spaces.
	(OnDetachHandler::do_handle): Do not name the unused "a_in" parm.
	Thus remove the dummy if().
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_inferior_re_run_signal): Remove
	useless white spaces.
	(DBGPerspective::on_debugger_detached_from_target_signal): Add a
	';' after  NEMIVER_TRY.

2013-10-09  Fabien Parent <parent.f@gmail.com>

	Remove usage of deprecated API
	* src/uicommon/nmv-terminal.cc (Terminal::Priv::init_body):
	Replace the deprecated API (vte_terminal_get_adjustment) by its
	recommanded replacement (gtk_scrollable_get_vadjustment).

2013-10-09  Dodji Seketeli <dodji@seketeli.org>

	Fix "restart loosing inferior argument" bug
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::load_program): Do
	not reset the command queue *after* launching a fresh GDB.  That
	might drop many useful commands sent to the new GDB instance and
	thus make us loose important information such as the arguments to
	the inferior.  Rather, reset the command queue before launching a
	fresh new GDB.

2013-10-08  Dodji Seketeli <dodji@seketeli.org>

	Fix menu typo
	* src/persp/dbgperspective/menus/menus.xml: Fix CopyMenutItem ->
	CopyMenuItem typo.

2013-09-23  Duarte Loreto <happyguy_pt@hotmail.com>

	Updated Portuguese translation

2013-09-18  Timo Jyrinki <timo@debian.org>

	Finnish translation update

2013-09-17 22:25:29 -0300  Enrico Nicoletto <liverig@gmail.com>

	Updated Brazilian Portuguese translation for manual

2013-09-17  Ask H. Larsen <asklarsen@gmail.com>

	Updated Danish translation

2013-09-15  Pavol Klačanský <pavol@klacansky.com>

	Updated slovak translation

2013-09-15  Seong-ho Cho <darkcircle.0426@gmail.com>

	Updated Korean translation

2013-09-12  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

	Updated Latvian translation

2013-09-09  Andika Triwidada <andika@gmail.com>

	Updated Indonesian translation

2013-09-07  Christian Kirbach <christian.kirbach@gmail.com>

	Updated German translation

2013-09-07  Yuri Myasoedov <omerta13@yandex.ru>

	Updated Russian translation

2013-09-06  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2013-09-06  Мирослав Николић <miroslavnikolic@rocketmail.com>

	Updated Serbian translation

2013-09-04  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2013-09-03  Balázs Úr <urbalazs@src.gnome.org>

	Updated Hungarian translation

2013-09-03  Alexandre Franke <alexandre.franke@gmail.com>

	Update French translation

2013-09-03  Milo Casagrande <milo@ubuntu.com>

	[l10n] Updated Italian translation.

2013-09-02  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2013-09-01  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2013-09-01  Aurimas Černius <aurisc4@gmail.com>

	Updated Lithuanian translation

2013-08-31 18:15:22 -0300  Enrico Nicoletto <liverig@gmail.com>

	Updated partial Brazilian Portuguese translation

2013-08-31  Gil Forcada <gforcada@gnome.org>

	[l10n] Update Catalan translation

2013-08-31  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2013-08-31  Dimitris Spingos <dmtrs32@gmail.com>

	Updated Greek translation

2013-08-31  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2013-08-31  Dodji Seketeli <dodji@seketeli.org>

	Fix continue action label
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_actions):  The continue action cannot be
	used to restart the inferior because it's not active when the
	target is not ready.

2013-08-31  Dodji Seketeli <dodji@seketeli.org>

	Fix some comments
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_breakpoints_set_signal): Fix
	comments.

2013-08-31  Dodji Seketeli <dodji@seketeli.org>

	Continue execution upon (re)start with breakpoints set
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): When we are (re)starting the
	inferior with breakpoints set, let's assume the user wants to
	continue the execution of the inferior upon its (re)loading; so
	let's do her that service.

2013-08-31  Dodji Seketeli <dodji@seketeli.org>

	Add more logging in the debugger perspective
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_bp_automatically_set_on_main): Add
	function enter/exit logs.
	(DBGPerspective::execute_program): Add more logging here.

2013-08-23  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation

2013-08-22  Alexandre Franke <alexandre.franke@gmail.com>

	Update French translation

2013-08-18  Dimitris Spingos <dmtrs32@gmail.com>

	Updated Greek translation

2013-08-06  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2013-07-13  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2013-07-02  Andika Triwidada <andika@gmail.com>

	Updated Indonesian translation

2013-06-16  Balázs Úr <urbalazs@src.gnome.org>

	Updated Hungarian translation

2013-06-09  Christian Kirbach <Christian.Kirbach@googlemail.com>

	Updated German translation

2013-06-02  Dodji Seketeli <dodji@seketeli.org>

	701480 Correctly flag a breakpoint pending state
	* src/dbgengine/nmv-i-debugger.h (Breakpoint::{m_is_pending,
	is_pending): New data member and accessors.
	(Breakpoint::clear): Initialize the new m_is_pending data member.
	(Breakpoint::address): When a non empty address is set, then the
	breakpoint implicitly becomes non-pending.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_breakpoint_with_one_loc): Flag the resulting
	breakpoint as pending when the 'pending' property is present.

2013-06-02  Dodji Seketeli <dodji@seketeli.org>

	Add comments and cleanup white space
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_breakpoint_with_one_loc): Cleanup white
	spaces and add comments.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::{get_source_editor_from_path,
	append_breakpoint}):  Add comments.

2013-06-02  Dodji Seketeli <dodji@seketeli.org>

	Remove useless typedef
	* nmv-i-debugger.h (BreakpointSlot): Remove this unused typedef.

2013-06-02  Dodji Seketeli <dodji@seketeli.org>

	Don't 'run' the inferior on startup when it has no 'main'
	* src/dbgengine/nmv-i-debugger.h (IDebugger::set_breakpoint):
	Declare a new overload that sets a breakpoint on a function by
	name and that takes a callback slot that is invoked whenever the
	breakpoint is set.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::set_breakpoint):
	Declare ...
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::set_breakpoint):
	... a new overload that sets a breakpoint on a function by name
	and that takes a callback slot that is invoked whenever the
	breakpoint is set.  Write the previous overload that just set a
	breakpoint on a function by name in terms of this new one.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_breakpoints_set_signal): New callback slot.
	(DBGPerspective::execute_program): It's only if the breakpoint set
	on main is actually set that the inferior should be run.

2013-06-02  Dodji Seketeli <dodji@seketeli.org>

	White space cleanups
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::{set_breakpoint,
	enable_breakpoint): Delete white space lines.

2013-03-13  Dodji Seketeli <dodji@seketeli.org>

	Don't use INCLUDE in Makefile.am anymore
	* src/Makefile.am: Replace use INCLUDE by AM_CPPFLAGS.
	* src/confmgr/Makefile.am: Likewise.
	* src/dbdimpl/sqlite/Makefile.am: Likewise.
	* src/dbgengine/Makefile.am: Likewise.
	* src/langs/Makefile.am: Likewise.
	* src/persp/dbgperspective/Makefile.am: Likewise.
	* src/uicommon/Makefile.am: Likewise.
	* src/workbench/Makefile.am: Likewise.

2013-05-27  Dodji Seketeli <dodji@seketeli.org>

	700248 Support breakpoints with multiple locations
	* src/dbgengine/nmv-i-debugger.h (Breakpoint::{m_sub_breakpoints,
	m_parent_breakpoint}): New members.
	(IDebugger::Breakpoint::number): Change the type of this into a string.  It
	can now be something like "2.1", for a sub-breakpoint of
	breakpoint "2", representing one location of the breakpoint 2 that
	has several locations.
	(IDebugger::Breakpoint::{sub_breakpoint_number, has_multiple_locations,
	append_sub_breakpoint, sub_breakpoints, parent_breakpoint_number,
	is_sub_breakpoint): New methods.
	(IDebugger::{BreakpointsSlot, breakpoints_list_signal,
	breakpoint_set_signal, stopped_signal, enable_breakpoint,
	disable_breakpoint, set_breakpoint_ignore_count,
	set_breakpoint_condition, enable_countpoint, is_countpoint,
	get_cached_breakpoints, get_breakpoint_from_cache,
	delete_breakpoint}): Adjust for use of type of the breakpoint
	number.
	* src/dbgengine/nmv-dbg-common.h
	(Output::ResultRecord::{m_breakpoint, breakpoints}): Adjust
	breakpoint map type.
	* src/dbgengine/nmv-debugger-utils.cc (null_breakpoints_slot): Likewise.
	* src/dbgengine/nmv-debugger-utils.h (null_breakpoints_slot): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::{cached_breakpoints, breakpoints_list_signal,
	breakpoints_set_signal, breakpoint_deleted_signal, stopped_signal,
	on_stopped_signal}, OnBreakpointHandler::do_handle). Likewise.
	Also adjust usage of breakpoint number type.
	(OnStoppedHandler::do_handle): Adjust usage of breakpoint number
	type.
	(OnCommandDoneHandler::{flag_breakpoint_as_countpoint,
	do_handle}): Likewise.
	(GDBEngine::{breakpoint_deleted_signal, breakpoints_list_signal,
	stopped_signal, on_stopped_signal, enable_breakpoint,
	disable_breakpoint, set_breakpoint_ignore_count,
	set_breakpoint_condition, enable_countpoint, is_countpoint,
	get_cached_breakpoints, get_breakpoint_from_cache,
	append_breakpoint_to_cache, delete_breakpoint}): Likewise.
	* src/dbgengine/nmv-gdb-engine.h
	(GDGEngine::{breakpoints_list_signal, breakpoints_set_signal,
	breakpoint_deleted_signal, stopped_signal, on_stopped_signal,
	append_breakpoint_to_cache, enable_breakpoint, disable_breakpoint,
	set_breakpoint_ignore_count, set_breakpoint_condition,
	enable_countpoint, is_countpoint, get_cached_breakpoints,
	get_breakpoint_from_cache, delete_breakpoint}):  Likewise.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::Priv::skip_blank): New.
	(SKIP_BLANK2): Make this use the new
	GDBMIParser::Priv::skip_blank.
	(GDBMIParser::parse_result_record): Adjust for the use of
	breakpoint number.
	(GDBMIParser::parse_breakpoint_with_one_loc): Renamed
	GDBMIParser::parse_breakpoint into this.  Make this support either
	parsing a sub-breakpoint or not.
	(GDBMIParser::parse_breakpoint): Write a new version of this that
	uses parse_breakpoint_with_one_loc to possibly parse a breakpoint
	with several locations.
	(GDBMIParse::parse_breakpoint_table): Adjust for use of breakpoint
	number.
	* src/dbgengine/nmv-gdbmi-parser.h
	(GDBMIParser::parse_breakpoint_with_one_loc): New entry point.
	(GDBMIParser::parse_breakpoint_table): Adjust for use of
	breakpoint number.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc (BPColumns::id):
	Change the type of the breakpoint id from int to string.
	(BreakpointsView::Priv::update_or_append_breakpoint): New.
	Actually factorized from ...
	(BreakpointsView::Priv::set_breakpoint_condition): ... here.
	Modify this to add/set the sub-breakpoints of a multiple
	breakpoint.
	(BreakpointsView::Priv::{add_breakpoints, breakpoint_list_has_id,
	erase_breakpoint, on_debugger_breakpoints_list_signal,
	on_debugger_stopped_signal, on_debugger_breakpoint_deleted_signal,
	on_debugger_breakpoints_set_signal, on_breakpoint_delete_action,
	on_breakpoint_enable_toggled, on_countpoint_toggled,
	on_breakpoint_ignore_count_edited,
	on_breakpoint_condition_edited})
	(BreakpointsView::set_breakpoints): Adjust for the type of
	breakpoint id.
	(BreakpointsView::Priv::append_breakpoint): Make this return void
	now.  Change it to append sub-breakpoints of a multiple-locations
	breakpoint.  Add comments.
	* src/persp/dbgperspective/nmv-breakpoints-view.h
	(BreakpointsView::set_breakpoints): Adjust for the type of
	breakpoint id.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::on_debugger_stopped_signal): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::{on_break_before_jump,
	on_debugger_breakpoints_set_signal,
	on_debugger_breakpoints_list_signal,
	on_debugger_breakpoint_deleted_signal, on_debugger_stopped_signal,
	jump_to_location, append_breakpoints, delete_breakpoint,
	toggle_breakpoint_enabled, delete_visual_breakpoint,
	get_frame_breakpoints_address_range, record_and_save_session,
	execute_program, re_initialize_set_breakpoints, get_breakpoint,
	delete_visual_breakpoints, apply_decorations_to_source,
	apply_decorations_to_asm} DBGPerspective::Priv::{breakpoints}):
	Likewise.
	(DBGPerspective::append_breakpoint): Append sub-breakpoints of a
	multiple-locations breakpoint.
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(DBGPerspective::{append_breakpoint, delete_breakpoint}): Adjust
	for the type of breakpoint id.
	* src/persp/dbgperspective/nmv-expr-monitor.cc
	(ExprMonitor::Priv::on_stopped_signal): Likewise.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::on_stopped_signal): Likewise.
	* src/persp/dbgperspective/nmv-memory-view.cc
	(MemoryView::Priv::on_stopped_signal): Likewise.
	* src/persp/dbgperspective/nmv-registers-view.cc
	(RegistersView::Priv::on_debugger_stopped): Likewise.
	* src/persp/dbgperspective/nmv-thread-list.cc
	(ThreadList::Priv::on_debugger_stopped_signal): Likewise.
	* tests/test-breakpoint.cc (test_main): Set a breakpoint on the
	overloaded Person::overload method, to test this new "breakpoint
	with multiple locations" feature support.
	(on_breakpoints_set_signal): Adjust for the use of breakpoint id
	type.
	(on_stopped_signal): Likewise.  Support stopping on
	'Person::overload' overloaded method, and continuing from there.
	(on_program_finished_signal): Update the number of breakpoint
	stops expected.
	* tests/test-core.cc (on_stopped_signal): Adjust for the use of
	breakpoint id type.
	* tests/test-deref.cc (on_stopped_signal): Likewise.
	* tests/test-disassemble.cc (on_stopped_signal): Likewise.
	* tests/test-gdbmi.cc (gv_breakpoint3): New breakpoint with
	multiple location MI output.
	(test_breakpoint): Test the parsing of the new gv_breakpoint3.
	(test_breakpoint_table): Adjust for the use of breakpoint id type.
	* tests/test-local-vars-list.cc (on_stopped_signal): Adjust for
	the use of breakpoint id type.
	* tests/test-pretty-print.cc (on_stopped_signal): Likewise.
	* tests/test-threads.cc (on_stopped_signal): Likewise.
	* tests/test-types.cc (on_stopped_signal): Likewise.
	* tests/test-var-list.cc (on_stopped_signal): Likewise.
	* tests/test-var-path-expr.cc (on_breakpoints_set_signal)
	(on_stopped_signal): Likewise.
	* tests/test-var-walker.cc (on_stopped_signal): Likewise.
	* tests/test-variable-format.cc (on_stopped_signal): Likewise.
	* tests/test-varobj-walker.cc (on_stopped_signal): Likewise.
	* tests/test-vars.cc (on_stopped_signal): Likewise.
	* tests/test-watchpoint.cc (on_breakpoints_set_signal)
	(on_stopped_signal): Likewise.

2013-05-26  Milo Casagrande <milo@ubuntu.com>

	[l10n] Added Italian translation.

2013-05-25  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2013-05-25  Richard Stanislavský <kenny.vv@gmail.com>

	Updated slovak translation

2013-05-24  Muhammet Kara <muhammetk@gmail.com>

	[l10n] Added Turkish translation

2013-05-20  Dodji Seketeli <dodji@seketeli.org>

	Misc fixes for autoconf 2.69 and automake 1.13.1
	* configure.ac: Replace AM_GNU_GETTEXT with AM_GLIB_GNU_GETTEXT.
	* src/Makefile.am: Replace INCLUDES with AM_CPPFLAGS.
	* src/common/Makefile.am: Likewise.
	* src/confmgr/Makefile.am: Likewise.
	* src/dbdimpl/sqlite/Makefile.am: Likewise.
	* src/dbgengine/Makefile.am: Likewise.
	* src/langs/Makefile.am: Likewise.
	* src/persp/dbgperspective/Makefile.am: Likewise.
	* src/uicommon/Makefile.am: Likewise.
	* src/workbench/Makefile.am: Likewise.

2013-05-20  Gil Forcada <gforcada@gnome.org>

	[l10n] Update Catalan translation

2013-05-19  Aurimas Černius <aurisc4@gmail.com>

	Updated Lithuanian translation

2013-05-16  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2013-05-15  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2013-05-14  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2013-05-13 21:12:28 -0300  Rafael Ferreira <rafael.f.f1@gmail.com>

	Updated Brazilian Portuguese translation

2013-05-13  Yuri Myasoedov <omerta13@yandex.ru>

	Updated Russian translation

2013-05-13  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2013-05-13  Dodji Seketeli <dodji@seketeli.org>

	561239 UI to select and copy text from source editor
	* src/persp/dbgperspective/menus/menus.xml:  Add a copy text menu
	item.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::{on_copy_action, on_popup_menu,
	update_copy_action_sensitivity, setup_and_popup_contextual_menu}):
	New methods.
	(DBGPerspective::on_run_action): Call the new
	setup_and_popup_contextual_menu to popup the context menu.
	(DBGPerspective::on_insertion_changed_signal): Update the
	sensitivity of the copy action whenever the user clicks in the
	source view.
	(s_file_opened_action_entries): Add an entry for a "copy text"
	action.
	(DBGPerspective::append_source_editor ):  Do not display the
	default context menu that comes with instances of Gtk::TextView.
	Rather, display our own.  Make sure the copy action sensitivity is
	properly set even before the user ever clicks in the source view.
	(DBGPerspective::get_contextual_menu): Add a "copy" text to the
	contextual menu.
	(DBGPerspective::popup_source_view_contextual_menu): Remove this
	as its core functionality it provided by
	SourceView::setup_and_popup_contextual_menu now.
	* src/uicommon/nmv-source-editor.h
	(SourceEditor::setup_and_popup_contextual_menu): New declaration.
	* src/uicommon/nmv-source-editor.cc
	(SourceView::setup_and_popup_contextual_menu): New.  Move the core
	of DBGPerspective::popup_source_view_contextual_menu here.
	(SourceEditor::setup_and_popup_menu): New.  Just call the new
	SourceView::setup_and_popup_contextual_menu above.

2013-05-09  Dodji Seketeli <dodji@seketeli.org>

	Style fix
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::on_gdb_stderr_has_data_signal): Re-indent.

2013-05-13  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation

2013-04-14  Dodji Seketeli <dodji@seketeli.org>

	687609 - nemiver should install a highcontrast app icon
	* configure.ac (data/icons/hicolor/*, data/icons/HighContrast/):
	Generate Makefiles from the Makefile.am of this two new sub-directories.
	(data/icons/{16x16,22x22,24x24,32x32,48x48,scalable): Do not
	generate Makefiles for these directories as they got moved under
	data/icons/hicolor.
	* data/icons/HighContrast/16x16/Makefile.am: New file.
	* data/icons/HighContrast/16x16/nemiver.png: Likewise.
	* data/icons/HighContrast/22x22/Makefile.am: Likewise.
	* data/icons/HighContrast/22x22/nemiver.png: Likewise.
	* data/icons/HighContrast/24x24/Makefile.am: Likewise.
	* data/icons/HighContrast/24x24/nemiver.png: Likewise.
	* data/icons/HighContrast/256x256/Makefile.am: Likewise.
	* data/icons/HighContrast/256x256/nemiver.png: Likewise.
	* data/icons/HighContrast/32x32/Makefile.am: Likewise.
	* data/icons/HighContrast/32x32/nemiver.png: Likewise.
	* data/icons/HighContrast/48x48/Makefile.am: Likewise.
	* data/icons/HighContrast/48x48/nemiver.png: Likewise.
	* data/icons/HighContrast/scalable/Makefile.am: Likewise.
	* data/icons/HighContrast/Makefile.am: Likewise.
	* data/icons/scalable/nemiver.svg Moved to
	data/icons/HighContrast/scalable/nemiver.svg and
	data/icons/hicolor/scalable/nemiver.svg.
	* data/icons/16x16/Makefile.am: Moved to data/icons/hicolor/16x16/Makefile.am
	* data/icons/16x16/nemiver.png: Moved to data/icons/hicolor/16x16/nemiver.png
	* data/icons/22x22/Makefile.am: Moved to data/icons/hicolor/22x22/Makefile.am
	* data/icons/22x22/nemiver.png: Moved to data/icons/hicolor/22x22/nemiver.png
	* data/icons/24x24/Makefile.am: Moved to data/icons/hicolor/24x24/Makefile.am
	* data/icons/24x24/nemiver.png: Moved to data/icons/hicolor/24x24/nemiver.png
	* data/icons/32x32/Makefile.am: Moved to data/icons/hicolor/32x32/Makefile.am
	* data/icons/32x32/nemiver.png: Moved to data/icons/hicolor/32x32/nemiver.png
	* data/icons/48x48/Makefile.am: Moved to data/icons/hicolor/48x48/Makefile.am
	* data/icons/48x48/nemiver.png: Moved to
	data/icons/hicolor/48x48/nemiver.png
	* data/icons/Makefile.am: Update to add hicolor and HighContrast
	sub-directories.  Update the cache for two themes now: hicolor and
	HighContrast.

2013-04-14  Dodji Seketeli <dodji@seketeli.org>

	Allow disassembling from address 0
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::disassemble_around_address_and_do): Allow
	Debugging at address 0 as some targets let meaningful stuff be
	placed there.  This is in response to a message started on the
	mailing list by an unnamed person which email address is
	Inductiveload <inductiveload@gmail.com>:
	https://mail.gnome.org/archives/nemiver-list/2013-March/msg00000.html.

2013-04-14  Dodji Seketeli <dodji@seketeli.org>

	697992 - fail to restart a program wrapped in libtool shell script
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::load_program):  When
	asked about a forced re-load, always launch a new GDB.  This
	allows to re-ask libtool to launch the gdb for us, on libtool
	wrapper scripts.  Add logs for this case.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::Priv::last_prog_path_requested): New data member.
	(DBGPerspective::restart_local_inferior): Re-launch a debugger
	engine upon re-starts of a libtool wrapper.  Make sure to ask the
	restart on the libtool wrapper, not on the its underlying binary
	that might have been wiped out by a re-build.
	(DBGPerspective::execute_program): Likewise, make sure to ask the
	restart on the libtool wrapper, not on the its underlying binary
	that might have been wiped out by a re-build.  Also, set the new
	DBGPerspective::Priv::last_prog_path_requested data member to the
	path to of the program which the user wants to debug.

2013-04-14  Dodji Seketeli <dodji@seketeli.org>

	Various logging and style tweaking
	* src/common/nmv-proc-utils.cc (launch_program): Use LOD_DD to log
	to the default domain.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::launch_gdb): Add
	more logs.
	(GDBEngine::load_program): Remove trailing white space and add
	mode logs.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): Simplify logic.  What was I
	thinking ...

2013-04-06  Wylmer Wang <wantinghard@gmail.com>

	update Simplified Chinese (zh_CN) translation

2013-04-03  Yuri Myasoedov <omerta13@yandex.ru>

	Updated Russian translation

2013-03-25  OKANO Takayoshi <kano@na.rim.or.jp>

	l10n: Update Japanese translation

2013-03-22  Seong-ho Cho <darkcircle.0426@gmail.com>

	Updated Korean translation

2013-03-19  Victor Ibragimov <victor.ibragimov@gmail.com>

	[l10n] Added Tadjik translation

2013-03-16  Carles Ferrando <carles.ferrando@gmail.com>

	[l10n] Updated Catalan (Valencian) translation

2013-03-16  Joan Duran <jodufi@gmail.com>

	[l10n] Updated Catalan translation

2013-03-15  Duarte Loreto <happyguy_pt@hotmail.com>

	Updated Portuguese translation and converted to New Spelling (Novo AO)

2013-03-15  Balázs Úr <urbalazs@src.gnome.org>

	Updated Hungarian translation

2013-03-12  Joe Hansen <joedalton2@yahoo.dk>

	Updated Danish translation

2013-03-11  Andika Triwidada <andika@gmail.com>

	Updated Indonesian translation

2013-03-09  Dimitris Spingos <dmtrs32@gmail.com>

	Updated Greek translation

2013-03-05  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2013-03-04 00:39:03 -0300  Enrico Nicoletto <liverig@gmail.com>

	Updated Brazilian Portuguese translation

2013-03-02  Aurimas Černius <aurisc4@gmail.com>

	Updated Lithuanian translation

2013-03-01  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2013-03-01  Мирослав Николић <miroslavnikolic@rocketmail.com>

	Updated Serbian translation

2013-02-28  Mario Blättermann <mario.blaettermann@gmail.com>

	[l10n]Updated German translation

2013-02-26  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2013-02-25  Alexandre Franke <alexandre.franke@gmail.com>

	Update French translation

2013-02-25  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2013-02-25  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2013-02-25  Gheyret Kenji <gheyret@gmail.com>

	Updated Uyghur translation

2013-02-24  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2013-02-24  Piotr Drąg <piotrdrag@gmail.com>

	Remove markup from translatable string

2013-02-24  Dodji Seketeli <dodji@seketeli.org>

	680376 - Local variables in nested scopes don't get refreshed automatically
	* data/schemas/gconf/nemiver-dbgperspective.schemas
	(/apps/nemiver/dbgperspective/update-local-vars-at-each-stop): New
	GConf key.
	* data/schemas/gsettings/org.nemiver.gschema.xml
	(update-local-vars-at-each-stop): New GSettings key.
	* src/confmgr/nmv-conf-keys.h
	(CONF_KEY_UPDATE_LOCAL_VARS_AT_EACH_STOP): Declare the variable
	for the new conf key above.
	* src/confmgr/nmv-gconf-keys-defs.cc
	(CONF_KEY_UPDATE_LOCAL_VARS_AT_EACH_STOP): Define the key above
	for the GConf backend.
	* src/confmgr/nmv-gsettings-keys-defs.cc
	(CONF_KEY_UPDATE_LOCAL_VARS_AT_EACH_STOP): Likewise for the the
	GSettings backend.
	* src/persp/dbgperspective/ui/preferencesdialog.ui: Add a new
	check button in the debugger tab to let the user choose whether
	or not to update the list of local variables at each stop in the
	function.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc
	(Priv::update_local_vars_check_button): New check button, to set
	the new conf key above.
	(Priv::{on_local_vars_list_updated_signal,update_local_var_list_keys}):
	New functions.
	(Priv::init): Initialize the new
	Priv::update_local_vars_check_button with the check button we get
	from glade.  Wire the signal_toggled signal.
	(Priv::update_widget_from_source_dirs_key): Update the new
	Priv::update_widget_from_source_dirs_key check button with the
	value of the key CONF_KEY_UPDATE_LOCAL_VARS_AT_EACH_STOP.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::list_local_variables):
	Add a new overload that takes a slot to be invoked whenever local
	variables are listed.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::list_local_variables): Re-declare the overload above
	here.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::list_local_variables):  Define the above here.
	Implement the former overload in terms of the new one.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(Priv::{append_a_local_variable_and_update_all,
	erase_variable_from_list, remove_a_local_variable,
	add_new_local_vars_and_update_olders,
	maybe_update_list_of_local_vars_and_then_update_older_ones,
	is_variable_in_list}): New functions.
	(Priv::on_local_vars_list_updated_signal): Removed.
	(finish_handling_debugger_stopped_event): Use the new
	IDebugger::list_local_variables overload that takes a signal slot
	in argument.  Use the new function
	maybe_update_list_of_local_vars_and_then_update_older_ones.
	(LocalVarsInspector::show_local_variables_of_current_function):
	Use the new overload of IDebugger::list_local_variables.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(Priv::current_thread_id): New member, initialized to zero.
	(DBGPerspective::on_thread_list_thread_selected_signal): Do not
	select the thread id if we are currently already on that same
	thread id.  prevents Nemiver from calling
	show_local_variables_of_current_function on the variable
	inspector; calling that function would be redundant with the fact
	that the variable inspector already queries the list of variables
	when the debugger stops.  So the widget would have each local
	variables twice.
	(DBGPerspective::on_debugger_stopped_signal): Set
	m_priv->current_thread_id here too, so that
	DBGPerspective::on_thread_list_thread_selected_signal can have a
	chance to know if it is being called on the same thread as the
	previous thread or not.
	* tests/locals-in-middle.cc: New program for testing.
	* tests/Makefile: Build the new tests/locals-in-middle.cc program
	for testing.

2013-02-24  Dodji Seketeli <dodji@seketeli.org>

	Use AM_CPPFLAGS instead of INCLUDE
	* tests/Makefile.am: Use AM_CPPFLAGS instead of the deprecated
	INCLUDE variable.  At least automake 1.13.1 complains for that.

2013-02-24  Dodji Seketeli <dodji@seketeli.org>

	Misc style cleanups
	* src/persp/dbgperspective/nmv-preferences-dialog.cc (lots of
	inline member functions): Make inline member functions start on
	their own line, rather than following their return type.
	(Priv::update_widget_from_source_dirs_key):  Mention 'conf keys"
	rather than 'gconf key'.  GConf is just one of the two conf
	backends we support now.
	* src/persp/dbgperspective/nmv-variables-utils.cc
	(unlink_a_variable_row): Fix comment.

2013-02-20  Yuri Myasoedov <omerta13@yandex.ru>

	Updated Russian translation

2013-02-17  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2013-02-14  Dodji Seketeli <dodji@seketeli.org>

	Fix -Wunused-local-typedefs triggered by GCC 4.8
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::append_breakpoint_to_cache): Remove unused local
	typedef ConstBpIt.
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.cc
	(GlobalVarsInspectorDialog::Priv::append_a_global_variable):
	Likewise for unused local typedef TreeStoreRefPtr.

2013-02-07  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2013-02-05  Anish A <aneesh.nl@gmail.com>

	Updated Malayalam Localization - LINGUAS

2013-02-04  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2013-02-03  Gheyret Kenji <gheyret@gmail.com>

	Updated Uyghur translation

2013-02-02  Anish A <aneesh.nl@gmail.com>

	Updated Malayalam Localization

2013-02-01  Christian Kirbach <Christian.Kirbach@googlemail.com>

	Updated German translation

2013-01-30  Aleksej Kabanov <ak099@mail.ru>

	Updated Russian translation

2013-01-26  Gheyret Kenji <gheyret@gmail.com>

	Updated Uyghur translation

2013-01-26  Gheyret Kenji <gheyret@gmail.com>

	Updated Uyghur translation

2013-01-23  Alexandre Franke <alexandre.franke@gmail.com>

	Update French translation

2013-01-21  Carles Ferrando <carles.ferrando@gmail.com>

	[l10n] Updated Catalan (Valencian) translation

2013-01-21  Gil Forcada <gforcada@gnome.org>

	[l10n] Updated Catalan translation

2013-01-20  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2013-01-19  Aurimas Černius <aurisc4@gmail.com>

	Updated Lithuanian translation

2013-01-19  Мирослав Николић <miroslavnikolic@rocketmail.com>

	Updated Serbian translation

2013-01-18 20:24:27 -0200  Rafael Ferreira <rafael.f.f1@gmail.com>

	Updated Brazilian Portuguese Translation

2013-01-16  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2013-01-15  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2013-01-15  Daniel Mustieles <daniel.mustieles@gmail.com>

	Fixed syntax in .desktop file

2013-01-14  Aurimas Černius <aurisc4@gmail.com>

	Updated Lithuanian translation

2013-01-14  Dodji Seketeli <dodji@seketeli.org>

	Update announcement text
	* Makefile.am (target cat-announcement): Update the announcement
	text for better text filling and also to reflect that we ship
	tarballs in xz format only.  No more bz2.

2013-01-14  Dodji Seketeli <dodji@seketeli.org>

	Bump version to 0.9.5
	* configure.ac: Bump version to 0.9.5.

2013-01-13  Dodji Seketeli <dodji@seketeli.org>

	Automatic update of ChangeLog
	* ChangeLog: Updated automatically with make update-changelog

2013-01-13  Dodji Seketeli <dodji@seketeli.org>

	Update NEWS file for 0.9.4
	* NEWS: Update for 0.9.4

2013-01-13  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2013-01-13  Dodji Seketeli <dodji@seketeli.org>

	689575 - Freeze when local variable values are refreshed
	* src/dbgengine/nmv-gdb-engine.cc
	(OnListChangedVariableHandler::do_handle): Avoid quadratic
	updating of the changed sub-variables of a given variable by
	giving VarChange::apply_to_variable a last argument that is always
	an empty list.

2013-01-13  Dodji Seketeli <dodji@seketeli.org>

	Misc white space cleanups
	* src/dbgengine/nmv-gdb-engine.cc
	(OnListChangedVariableHandler::do_handle): Some obvious white
	space nitpicking.

2013-01-13  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2013-01-05  Daniel Mustieles <daniel.mustieles@gmail.com>

	Added search keywords to .desktop file
	* data/nemiver.desktop.in: Added keywords
	gdb;disassembler;debugger;c;c++ for search.

2013-01-13  lainme <lainme993@gmail.com>

	update Simplified Chinese (zh_CN) translation

2012-12-06  Dodji Seketeli <dodji@seketeli.org>

	Ensure workbench body is shown
	* src/workbench/nmv-workbench.cc (Workbench::add_perspective_body)
	(Workbench::on_perspective_layout_changed_signal): Ensure that
	widgets added to the perspective body Notebook are shown.

2012-12-06  Dodji Seketeli <dodji@seketeli.org>

	Indentation fixes in nmv-workbench.cc
	* src/workbench/nmv-workbench.cc (Workbench::init_builder)
	(Workbench::init_toolbar, init_body): Fix indentation.

2012-12-04  Dodji Seketeli <dodji@seketeli.org>

	670439 - Nemiver doesn't handle well multi-threaded apps
	* src/dbgengine/nmv-dbg-common.h
	(OutOfBandRecord::m_thread_selected): New attribute.
	(OutOfBandRecord::thread_selected): New accessor.
	(OutOfBandRecord::clear): Clear the new m_thread_selected
	attribute.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_out_of_band_record): Make the thread as
	selected when we get an async 'thread-selected' output.
	(OnThreadSelectedHandler::can_handle): Use the new
	OutOfBandRecord::thread_selected to detect that we have an out of
	band record (async) that says a new thread has been selected and
	thus notify the world that we have a new 'current thread id' that
	is set.
	* tests/test-threads.cc: New test file, using the existing
	threads.cc as a program to debug and inspect.
	* tests/Makefile.am: Integrate test-threads.cc into the build
	system.
	* threads.cc (thread_func): Don't output messages.  Add a tid
	variable so that the test-threads.cc can inspect it.

2012-12-04  Dodji Seketeli <dodji@seketeli.org>

	White space cleanup
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::skip_output_record): Fix white space.

2012-12-04  Dodji Seketeli <dodji@seketeli.org>

	Cleanup parsing code
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_output_record): Remove useless and potentially
	harmful code.

2012-12-02  Dodji Seketeli <dodji@seketeli.org>

	684046 - nemiver.desktop conformance fix
	* data/nemiver.desktop.in: Add a GTK value in the Categories key.

2012-12-02  Richard Stanislavský <kenny.vv@gmail.com>

	Added Slovak translation

2012-12-02  Dodji Seketeli <dodji@seketeli.org>

	689458 - Crash when copying variable value
	* src/dbgengine/nmv-debugger-utils.h (dump_variable_value): Make
	the variable parameter const, as in the definition.

2012-12-01  Dodji Seketeli <dodji@seketeli.org>

	Fix French translation markup
	* help/fr/fr.po (C/index.docbook:99(article/indexterm)): Fix markup.

2012-11-30  Dodji Seketeli <dodji@seketeli.org>

	689338 - Sometimes current frame is wrongly set
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::set_current_frame): Properly update the
	CallStack::Priv::cur_frame_index member variable.  That way, when
	the CallStack::frame_selected_signal is emitted (in
	on_command_done_signal), the frame index that is advertised is
	going to be correct.  Note that the advertised index is not yet
	used, but still.  This change makes the code correct.
	(CallStack::Priv::clear_frame_list): Block the execution of the
	on_selection_changed callback slot upon clearing of the list
	store.  That way, we ensure that no weird row gets randomly
	selected.
	(CallStack::Priv::on_selection_changed_signal):  Don't try to act
	on an empty list store.

2012-11-11  Gheyret Kenji <gheyret@gmail.com>

	Uyghur translation added.

2012-10-23  Wolfgang Stoeggl <c72578@yahoo.de>

	Updated German translation

2012-10-22  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation

2012-10-02  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2012-09-27  OKANO Takayoshi <kano@na.rim.or.jp>

	[l10n] Updated Japanese translation

2012-09-25  Rūdolfs Mazurs <rudolfsm@src.gnome.org>

	Added Latvian translation

2012-09-23  Alexandre Franke <alexandre.franke@gmail.com>

	Update French translation

2012-09-22  Carles Ferrando <carles.ferrando@gmail.com>

	[l10n]Added Catalan (Valencian) translation

2012-09-22  Gil Forcada <gforcada@gnome.org>

	[l10n] Updated Catalan translation

2012-09-22  Seong-ho Cho <darkcircle.0426@gmail.com>

	Updated Korean translation

2012-09-20  Mario Blättermann <mario.blaettermann@gmail.com>

	[l10n] Updated German translation

2012-09-18  Gabor Kelemen <kelemeng@gnome.hu>

	Added Hungarian translation

2012-09-18  Gabor Kelemen <kelemeng@gnome.hu>

	Added hu to LINGUAS

2012-09-17  Rajesh Ranjan <rranjan@redhat.com>

	hindi update

2012-09-16  Ask H. Larsen <asklarsen@gmail.com>

	Updated Danish translation

2012-09-16  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-09-15  Duarte Loreto <happyguy_pt@hotmail.com>

	Updated Portuguese translation

2012-09-11 08:53:19 -0300  Gabriel Speckhahn <gabspeck@gmail.com>

	Updated Brazilian Portuguese translation

2012-09-09  Mario Blättermann <mario.blaettermann@gmail.com>

	[l10n] Updated German doc translation

2012-09-06  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2012-09-04  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2012-09-04  Alexandre Franke <alexandre.franke@gmail.com>

	Update French translation

2012-09-04  Bruce Cowan <bruce@bcowan.me.uk>

	Updated British English translation

2012-09-03  Dimitris Spingos <dmtrs32@gmail.com>

	Updated Greek translation help

2012-08-28  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation

2012-08-27  Cheng-Chia Tseng <pswo10680@gmail.com>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2012-08-27  Yuri Myasoedov <omerta13@yandex.ru>

	Updated Russian translation

2012-08-26  Dodji Seketeli <dodji@seketeli.org>

	Fix a compilation error, oops.
	* src/workbench/nmv-workbench.cc (Workbench::init_actions): Fix
	typo.

2012-08-18  Dodji Seketeli <dodji@seketeli.org>

	Simplify actions creation by using G_N_ELEMENTS
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_actions): Use G_N_ELEMENTS.  Remove
	num_actions and their uses.
	* src/workbench/nmv-workbench.cc (Workbench::init_actions):
	Likewise.

2012-08-22  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2012-08-20  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-08-18  Dodji Seketeli <dodji@seketeli.org>

	Fix help browser launching
	* src/common/nmv-env.cc (build_path_to_help_file): Remove definition.
	* src/common/nmv-env.h (build_path_to_help_file): Remove
	declaration.
	* src/workbench/nmv-workbench.cc
	(Workbench::on_contents_menu_item_action): Use gtk_show_uri
	instead of the previously convoluted env::build_path_to_help_file.
	* tests/Makefile.am: Don't run untestenv that was testing
	env:build_path_to_help_file.
	* tests/test-env.cc (test_build_path_to_help_file): Remove.
	(init_unit_test_suite): Comment the juice out of this, waiting for
	more env tests to come.

2012-08-13  Javier Jardón <jjardon@gnome.org>

	Use new documentation infrastructure
	* Makefile.am:  Don't reference gnome-doc-utils.make.
	* configure.ac: Don't use GNOME_DOC_INIT.  Use YELP_HELP_INIT.
	* help/C/index.docbook: Rename help/C/nemiver.xml into this.
	* help/Makefile.am: Update to drop the gnome-doc-utils variables
	and use the yelp variables instead.
	* help/nemiver.omf.in: Drop this.

2012-08-17  Dodji Seketeli <dodji@seketeli.org>

	Fix well form-ness of gl.po
	* help/gl/gl.po: Fix escaping of quotes.

2012-08-17  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2012-08-13  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.

2012-08-12 14:12:32 -0400  Dodji Seketeli <dodji@seketeli.org>

	Fix make release target
	* Makefile.am: Don't forget to make the dist target as part of the
	release.

2012-08-12 14:11:32 -0400  Dodji Seketeli <dodji@seketeli.org>

	Add a README.release.txt file
	* README.release.txt: New file.  Describes how to do a release.

2012-08-12 09:34:52 -0400  Dodji Seketeli <dodji@seketeli.org>

	Bump version number to 0.9.4
	* configure.ac: Bump version number to 0.9.4

2012-08-12 09:04:35 -0400  Dodji Seketeli <dodji@seketeli.org>

	Update ChangeLog
	* ChangeLog: Automatically update by running make update-changelog

2012-08-08 14:18:28 -0400  Dodji Seketeli <dodji@seketeli.org>

	Update NEWS file for 0.9.3
	* NEWS: update for 0.9.3

2012-08-07 04:12:54 -0400  Dodji Seketeli <dodji@seketeli.org>

	Update INSTALL file
	* INSTALL: Update copyright, HP-UX related and CONFIG_SHELL
	related stuff.

2012-08-07 04:02:24 -0400  Dodji Seketeli <dodji@seketeli.org>

	Fix --enable-debuggeronly
	* configure.ac: Fix help string of --enable-idebuggeronly.  Call
	AM_CONDITIONAL on ENABLE_IDEBUGGER_ONLY.  If
	--enable-idebuggeronly is switched on, no workbench stuff can be
	enabled with --enable-workbench.  Call AM_CONDITIONAL on
	ENABLE_WORKBENCH.
	* src/Makefile.am: If ENABLE_WORKBENCH is not set, do not build
	workbench stuff under src.

2012-08-07  Chao-Hsiung Liao <j_h_liau@yahoo.com.tw>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2012-08-02  Jiro Matsuzawa <jmatsuzawa@gnome.org>

	[l10n] Update Japanese translation

2012-07-29  Seong-ho Cho <darkcircle.0426@gmail.com>

	Add Korean translation

2012-07-21  Мирослав Николић <miroslavnikolic@rocketmail.com>

	Added Serbian translation

2012-07-13  Dimitris Spingos <dmtrs32@gmail.com>

	Updated help/Makefile.am

2012-07-13  Dimitris Spingos <dmtrs32@gmail.com>

	Updated Greek translation-help

2012-07-13  Andika Triwidada <andika@gmail.com>

	Updated Indonesian translation

2012-07-10  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation

2012-07-09  Cheng-Chia Tseng <pswo10680@gmail.com>

	Updated Traditional Chinese translation(Hong Kong and Taiwan)

2012-06-23  Tom Hughes <tom@compton.nu>

	Save and restore tty attributes
	* src/dbgengine/nmv-i-debugger.h (IDebugger::load_program): Take
	additional slave_tty_fd and uses_launch_tty parameters.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::load_program):
	Likewise.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBengine::Priv::{uses_launch_tty, tt_attributes, tty_path,
	tty_fd): New members.
	(GDBEngine::Priv::Priv): Initialize the new members above.
	(GDBEngine::Priv::{get_tty_attributes,set_tty_attributes}): New
	functions.
	(GDBEngine::Priv::issue_command): When issuing a "re-run" command
	make sure to re-set the tty attribute to their initial state.
	(GDBEngine::load_program): In compliance with the above change on
	the interface of this function, Take additional slave_tty_fd and
	uses_launch_tty parameters.  Call new m_priv->get_tty_attributes before
	really launching GDB.  Adjust call from load_program overload.
	Update comment.
	(GDBEngine::exit_engine): Call new m_priv->set_tty_attributes
	after debugger exited.  Add comment.
	* src/uicommon/nmv-terminal.h (Terminal::slave_ptr): Declare ...
	* src/uicommon/nmv-terminal.cc (Terminal::slave_pty): ... new
	function.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): Adjust call to the
	IDebugger::load_program.
	(DBGPerspective::on_shutdown_signal): Re-indent comment.
	(DBGPerspective::get_terminal_name): Add comment.

2012-06-25  Piotr Drąg <piotrdrag@gmail.com>

	Revert "Added Greek translation"

2012-06-25  Dimitris Spingos <dmtrs32@gmail.com>

	Added Greek translation

2012-06-25  Dimitris Spingos <dmtrs32@gmail.com>

	Added Greek translation

2012-06-24  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2012-06-24  Aurimas Černius <aurisc4@gmail.com>

	Added Lithuanian translation

2012-06-21  Antoine Jacoutot <ajacoutot@gnome.org>

	Terminal portability fixes for BSDs
	* src/uicommon/nmv-terminal.cc (Terminal::Priv::init_pty):
	Don't call useless grantpt and unlockpt.
	(Terminal::slave_pts_name): use POSIX call ttyname in lieu of
	the non-portable ptsname.

2012-06-19  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-06-18  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-06-17  Dodji Seketeli <dodji@seketeli.org>

	665274 - Support --just-load command line
	* src/dbgengine/nmv-i-debugger.h (enum IDebugger::State): Add
	comments.  Add a new INFERIOR_LOADED enumerator.
	(IDebugger::state_to_string): Re-indent.  Add support for new
	INFERIOR_LOADED enumerator of IDebugger::State.
	(IDebugger::is_running): New entry point.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::is_running): New
	entry point.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::Priv::is_running):
	New member.
	(GDBEngine::Priv::on_running_signal): New signal handler ...
	(GDBEngine::Priv::Priv): ... connected to the running_signal event.
	(GDBEngine::Priv::set_tty_path):  Take a new command name parm.
	Use it when emitting the underlying command.
	(GDBEngine::Priv::on_stopped_signal): Set
	GDBEngine::Priv::is_running to false when the debugger exits.
	Style cleanup.
	(GDBEngine::OnCommandDoneHandler::do_handle): Fix state management
	logic.  Include the new IDebugger::INFERIOR_LOADED state for when
	the inferior is loaded but not yet run.
	(GDBEngine::load_program): Use a proper command name for
	underlying commands issued.  Update the "attached_to_target"
	property.
	(GDBEngine::attach_to_target): Adjust call to m_priv->set_tty_path.
	(GDBEngine::is_running): New definition.
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(DBGPerspective::execute_program): Add a parameter for
	'break_in_main_run'.
	(DBGPerspective::debugger_ready_signal): Remove.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_ready_signal): Removed.
	(DBGPerspective::update_action_group_sensitivity)
	(DBGPerspective::run_real): New functions.
	(DBGPerspective::attached_to_target): Take a IDebugger::State in
	parameter.
	(DBGPerspective::Priv::inferior_loaded_action_group): Renamed
	target_connected_action_group into this.
	(DBGPerspective::Priv::detach_action_group): New action
	group.
	(DBGPerspective::Priv::attached_to_target_signal): Remove.
	(DBGPerspective::on_debugger_not_started_signal)
	(DBGPerspective::debugger_not_started_signal): Remove.
	(DBGPerspective::on_attached_to_target_signal): Take the debugger
	state in parameter.  Call the new update_action_group_sensitivity.
	(DBGPerspective::on_debugger_inferior_re_run_signal): Don't emit
	attach_to_target_signal anymore.
	(DBGPerspective::on_debugger_detached_from_target_signal): Rename
	target_connected_action_group in to inferior_loaded_action_group.
	(DBGPerspective::on_program_finished_signal): Don't emit
	attached_to_target_signal.  Call update_action_group_sensitivity.
	(DBGPerspective::on_debugger_state_changed_signal): Call
	update_action_group_sensitivity.
	(DBGPerspective::init_actions): Renamed
	s_target_connected_action_entries into
	s_inferior_loaded_action_entries.  Added new action group
	s_detach_action_entries.  Re-arranged groups containing actions.
	(DBGPerspective::restart_inferior)
	(DBGPerspective::restart_local_inferior): Add logging.
	(DBGPerspective::execute_program): Take a flag to break in main
	and run.
	(DBGPerspective::attach_to_program): Cleanup logic.
	(DBGPerspective::run):  Use the new run_real function.
	(DBGPerspective::do_continue): Start the inferior if it not yet
	started.
	(DBGPerspective::attached_to_target_signal):  Take an instance of
	IDebugger::State as the event parameter.
	* src/persp/dbgperspective/menus/menus.xml: Re-organized some menu
	items.
	* src/main.cc: Add a new --just-load option to just load the
	inferior without trying to set a breakpoint in main and run.
	(process_gui_options):  Adjust call to
	DBGPerspective::execute_program.

2012-06-18  Dodji Seketeli <dodji@seketeli.org>

	Misc style cleanup
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_sv_markers_region_clicked_signal)
	(DBGPerspective::on_button_pressed_in_source_view_signal)
	(DBGPerspective::on_motion_notify_event_signal)
	(DBGPerspective::on_leave_notify_event_signal)
	(DBGPerspective::on_mouse_immobile_timer_signal)
	(DBGPerspective::on_insertion_changed_signal): Trivial style
	fixes.

2012-06-17  Piotr Drąg <piotrdrag@gmail.com>

	Remove space before an ellipsis in a string

2012-06-15  Fabien Parent <parent.f@gmail.com>

	Fix wrong values returned
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::open_file_real)
	(DBGPerspective::get_breakpoint): Fix wrong values returned

2012-06-02  Dodji Seketeli <dodji@seketeli.org>

	542503 - Initial support for monitoring expressions
	* src/dbgengine/nmv-i-debugger.h (Variable::id)
	(Variable::is_morally_root): New methods.
	* src/persp/dbgperspective/ui/exprinspectordialog.ui: Add a new
	"add to monitor" button.
	* src/persp/dbgperspective/nmv-expr-monitor.{cc,h}: New file.
	* src/persp/dbgperspective/menus/exprmonitorpopup.xml: New
	description file for the contextual menu.
	* src/persp/dbgperspective/Makefile.am: Add
	nmv-expr-monitor.{h,cc} and exprmonitorpopup.xml to the build
	system.
	* po/POTFILES.in: Add src/persp/dbgperspective/nmv-expr-monitor.cc
	to the list of translatable source files.
	* src/persp/dbgperspective/nmv-expr-inspector-dialog.h: Add
	comments.
	(ExprInspectorDialog::FunctionalityFlags): New enum.
	(ExprInspectorDialog::functionality_mask): New accessors.
	* src/persp/dbgperspective/nmv-expr-inspector-dialog.cc
	(ExprInspectorDialog::Priv::{add_to_monitor_button,expr_monitor_requested,
	fun_mask}): New members.
	(ExprInspectorDialog::Priv::Priv): Initialize new fun_mask member.
	(ExprInspectorDialog::Priv::on_do_monitor_button_clicked)
	(ExprInspectorDialog::Priv::functionality_mask): New functions.
	(ExprInspectorDialog::Priv::build_dialog): Initialize the
	add_to_monitor button.
	(ExprInspectorDialog::Priv::on_var_name_changed_signal): Inspect
	button is now controlled by FUNCTIONALITY_EXPR_INSPECTOR flag.
	(ExprInspectorDialog::Priv::on_variable_inspected):  Add to monitor
	button is now controlled by FUNCTIONALITY_EXPR_MONITOR_PICKER
	flag.
	(ExprInspectorDialog::expr_monitoring_requested)
	(ExprInspectorDialog::functionality_mask): New functions.
	(ExprInspectorDialog::Priv::on_var_name_changed_signal): Do not
	enable/disable the "add to monitor" button based on the presence
	of an expression/name in the "variable name" entry field.
	(ExprInspectorDialog::Priv::on_variable_inspected): Enable the "add
	to monitor" button only when the expression has been inspected.
	(ExprInspectorDialog::Priv::on_variable_inspector_cleared): Disable
	the "add to monitor" button when the inspector has been cleared.
	* src/persp/dbgperspective/menus/menus.xml: Add a menu item to
	activate the new variable monitor.
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.cc
	(DBGPerspectiveDefaultLayout::append_view): Style cleanup.
	* src/persp/dbgperspective/nmv-variables-utils.h
	(unlink_a_variable_row): New function.
	* src/persp/dbgperspective/nmv-variables-utils.cc
	(update_a_variable_node, ): Add (better) logging.
	(find_a_variable): Likewise.  Remove dead code.
	(unlink_a_variable_row): Add logging.  Add const to last
	argument.
	(update_a_variable): Add logging.  Style cleanup.
	(set_a_variable): Remove dead code. Style cleanup.
	(unlink_a_variable_row): New function.
	(visualize_a_variable): Style cleanup.
	* src/persp/dbgperspective/nmv-dbg-perspective.h (enum
	ViewsIndex::VARS_MONITOR_VIEW_INDEX): New enumerator.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::{on_expr_monitoring_requested,get_vars_monitor_view}):
	New functions.
	(DBGPerspective::Priv::vars_monitor): New
	member.
	(DBGPerspective::{on_expr_monitoring_requested,
	on_activate_vars_monitor_view, get_vars_monitor_view}): New
	functions.
	(DBGPerspective::on_going_to_run_target_signal)
	(DBGPerspective::clear_status_notebook): Take a boolean saying if
	we are re-starting the current program or not.  Re-init the
	variable monitor.  Make the former use the latter.
	(DBGPerspective::going_to_run_target_signal): Take a boolean
	saying if we are re-starting the current program or not.
	(DBGPerspective::detach_from_program): Adjust call to clear to
	clear_status_notebook.
	(DBGPerspective::restart_local_inferior): Adjust call to
	DBGPerspective::going_to_run_target_signal.
	(DBGPerspective::execute_program): Remove useless call to
	clear_status_notebook.  Adjust call to
	DBGPerspective::going_to_run_target_signal.
	(DBGPerspective::init_actions): Define a new action
	to activate the variable monitor view.
	(DBGPerspective::add_views_to_layout): Append the variable
	monitor view.
	(DBGPerspective:::inspect_expression): On the
	event of requesting the monitoring of a variable, hook the new
	function DBGPerspective::{on_expr_monitoring_requested.

2012-06-15  Piotr Drąg <piotrdrag@gmail.com>

	Updated Polish translation

2012-06-15  Dodji Seketeli <dodji@seketeli.org>

	Rename "Variable Inspector" into "Expression Inspector"
	* src/persp/dbgperspective/nmv-expr-inspector-dialog.cc: Renamed
	src/persp/dbgperspective/nmv-var-inspector-dialog.cc into this,
	and renamed most references to "variable monitor" to "expression
	monitor.
	* src/persp/dbgperspective/nmv-expr-inspector-dialog.h: Renamed
	src/persp/dbgperspective/nmv-var-inspector-dialog.h into this and
	and renamed most references to "variable monitor" to "expression
	monitor..
	* src/persp/dbgperspective/nmv-expr-inspector.cc: Renamed
	src/persp/dbgperspective/nmv-var-inspector.cc in to this and
	renamed most references to "variable monitor" to "expression
	monitor.
	* src/persp/dbgperspective/nmv-expr-inspector.h: Renamed
	src/persp/dbgperspective/nmv-var-inspector.h into this and renamed
	most references to "variable monitor" to "expression monitor.
	* po/POTFILES.in: Adjust.
	* src/persp/dbgperspective/Makefile.am: Likewise.
	* src/persp/dbgperspective/menus/menus.xml: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Likewise.

2012-06-10  Dodji Seketeli <dodji@seketeli.org>

	Add a new IDebugger::re_run entry point
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::inferior_re_run_signal, IDebugger::re_run): New entry
	points.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::inferior_re_run_signal, GDBEngine::re_run): New
	functions.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::inferior_re_run_signal): New member.
	(OnRunningHandler::do_handle): Handle new "re-run" command.
	(GDBEngine::inferior_re_run_signal, GDBEngine::re_run): New
	function.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_inferior_re_run_signal): New
	function.
	(DBGPerspective::restart_local_inferior): Use the new
	IDebugger::re_run function.

2012-06-10  Dodji Seketeli <dodji@seketeli.org>

	Minor Style cleanup
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::Variable::operator==): Space fixup.

2012-06-03  Bruno Brouard <annoa.b@gmail.com>

	Updated French translation

2012-06-02  Dodji Seketeli <dodji@seketeli.org>

	Added comments to some IDebugger methods
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::changed_variables_signal)
	(IDebugger::list_changed_variables)
	(IDebugger::list_changed_variables): Added comments

2012-06-02  Dodji Seketeli <dodji@seketeli.org>

	Reorganize vars logging & log more variables stuff
	* src/dbgengine/nmv-debugger-utils.cc (dump_variable_value): Move
	the core overload of this to nmv-debugger-utils.h, transform it
	into a template.  Change all overloads to take a const
	IDebugger::Variable& instead of a pointer to variable.  Adjust
	them as necessary.
	* src/dbgengine/nmv-debugger-utils.h (dump_variable_value): Move
	the core overload in here, transform it into a template with a
	generic output stream.
	(operator<<): New streaming operator for IDebugger::Variable over
	generic streams.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Variable):  Make the
	constructor be explicit to avoid unexpected conversion during
	stream operations.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::on_visited_variable_signal):  Adjust
	use of dump_variable_value.
	* src/persp/dbgperspective/nmv-var-inspector.cc
	(VarInspector::Priv::on_visited_variable_signal): Likewise.
	* src/persp/dbgperspective/nmv-variables-utils.cc
	(update_a_variable_node): Log the name and content of the variable
	we have changed.

2012-03-26  Dodji Seketeli <dodji@seketeli.org>

	Fix style and comments
	* src/dbgengine/nmv-gdb-engine.cc
	(OnListChangedVariableHandler::do_handle): Fix comments and add
	some newlines.

2012-06-01  Piotr Drąg <piotrdrag@gmail.com>

	Added Polish translation

2012-05-31  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-03-26  Dodji Seketeli <dodji@seketeli.org>

	Update sub-variables of the one we are looking at
	* src/dbgengine/nmv-dbg-common.cc (VarChange::apply_to_variable):
	Don't forget to apply changes to the sub-variables of the one we
	are looking at.

2012-05-28  Dodji Seketeli <dodji@seketeli.org>

	Arrange for VarInspectorDialog et al. to be initialized with IDebugger&
	* src/dbgengine/nmv-i-var-list-walker.h
	(IVarListWalker::initialize): Take a naked IDebugger pointer.
	* src/dbgengine/nmv-var-list-walker.cc
	(VarListWalker::initialize): Likewise.
	(VarListWalker::m_debugger): Turn this into a naked pointer.
	(VarListWalker::VarListWalker): Initialize the naked m_debugger
	pointer.
	* nmv-i-var-walker.h (IVarWalker::connect): Likewise.
	(IVarWalker::get_debugger): Return a naked IDebugger pointer.
	* src/dbgengine/nmv-var-walker.cc (VarWalker::m_debugger): Turn
	this into a naked pointer.
	(VarWalker::VarWalker): Initialize it.
	(VarWalker::connect): Take a naked IDebugger pointer and adjust to
	the change.
	(VarWalker::get_debugger): Return a naked pointer.
	* src/dbgengine/nmv-varobj-walker.cc (VarobjWalker::m_debugger):
	Turn this into a naked pointer.
	(VarobjWalker::VarobjWalker): Initialize it.
	(VarobjWalker::connect): Take a naked IDebugger pointer.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::get_popup_var_inspector)
	(DBGPerspective::set_watchpoint_using_dialog): Adjust use of
	VarInspector constructor to using a reference to IDebugger,
	instead of a safe ptr.
	(GlobalVarsInspectorDialog::Priv::create_variable_walker_list):
	Adjust call to IVarListWalker::initialize.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::on_variable_value_copy_to_clipboard_action):
	Likewise.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.h
	(VarInspectorDialog::VarInspectorDialog): Remove redundant root
	path parameter.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc
	(VarInspectorDialog::Priv::debugger): Turn this into a reference
	to IDebugger, instead of using a safe ptr.
	(LocalVarsInspector::Priv::Priv): Update to pass IDebugger by
	reference.
	(VarInspectorDialog::VarInspectorDialog): Remove root path parm,
	as it can be gotten from the perspective parameter.  Adjust Dialog
	initializer.
	* src/persp/dbgperspective/nmv-var-inspector.h
	(VarInspector::VarInspector): Take a reference to IDebugger,
	instead of the safe ptr.
	* src/persp/dbgperspective/nmv-var-inspector.cc
	(VarInspector::Priv::debugger):  Turn this into a reference,
	instead of using a safe ptr.
	(VarInspector::Priv::set_variable)
	(VarInspector::Priv::create_variable)
	(VarInspector::Priv::on_tree_view_selection_changed_signal)
	(VarInspector::Priv::on_tree_view_row_expanded_signal)
	(VarInspector::Priv::on_cell_edited_signal)
	(VarInspector::Priv::on_variable_value_copy_to_clipboard_action):
	Adjust use of debugger.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc
	(WatchpointDialog::Priv::debugger): Turn this into a reference on
	IDebugger, instead of a safe ptr.
	(WatchpointDialog::Priv::Priv)
	(WatchpointDialog::WatchpointDialog): Adjust.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::inspect_variable): Adjust use of
	VarInspectorDialog.
	* src/common/nmv-plugin.h (Plugin::plugin_path): Make this public.
	* tests/test-var-walker.cc (create_var_list_walker):  Adjust.
	* tests/test-varobj-walker.cc: Likewise.

2012-05-28  Dodji Seketeli <dodji@seketeli.org>

	Add VarInspectorDialog::inspector getter
	* src/persp/dbgperspective/nmv-var-inspector-dialog.h
	(VarInspectorDialog::inspector): Declare new getter.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc
	(VarInspectorDialog::inspector): New getter

2012-05-28  Dodji Seketeli <dodji@seketeli.org>

	Allow opt-in points when inspecting a variable
	* src/persp/dbgperspective/nmv-var-inspector-dialog.h
	(VarInspectorDialog::inspect_variable): Declare new overload.
	* src/persp/dbgperspective/nmv-var-inspector.h
	(VarInspector::inspect_variable): New overload.
	(VarInspector::{var_inspected_signal, cleared_signal}): New methods.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc
	(VarInspectorDialog::Priv::do_inspect_variable): Cleanup.
	(VarInspectorDialog::Priv::inspect_variable)
	(VarInspectorDialog::inspect_variable): New overload that takes a
	slot called upon inspection of the expression.  Re-write the
	former overload in terms of the new one.
	(VarInspectorDialog::Priv::on_variable_inspected): New default
	callback invoked upon expression inspection.
	(VarInspectorDialog::Priv::on_variable_inspector_cleared): New default
	callback invoked upon expression inspection.
	(VarInspectorDialog::Priv::build_dialog): Add comment.  Connect
	the new on_variable_inspector_cleared callback to the
	cleared_signal of the inspector.
	* src/persp/dbgperspective/nmv-var-inspector.cc
	(no_op_void_variable_slot): New no-op slot.
	(VarInspector::Priv::{var_inspected_signal,cleared_signal}) New
	members.
	(VarInspector::Priv::create_variable): New overload that takes a
	slot called upon creation of the expression.  Re-write the former
	overload in terms of the new one.
	(VarInspector::Priv::on_variable_created_signal): Take a slot to
	call upon the creation of the variable.
	(VarInspector::inspect_variable): New overload that takes a slot
	called upon creation of the expression.  Re-write the former
	overload in terms of the new one.
	(VarInspector::var_inspected_signal)
	(VarInspector::cleared_signal): New signal getters.

2012-05-28  Dodji Seketeli <dodji@seketeli.org>

	Style cleanup
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::init_graphical_signals): Add comment.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc
	(VarInspectorDialog::inspect_variable): Remove useless assert.

2012-05-23  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2012-05-19  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2012-05-18  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-05-18  Piotr Drąg <piotrdrag@gmail.com>

	Fixed typo

2012-05-17  Andika Triwidada <andika@gmail.com>

	[l10n] really added Indonesian translation

2012-05-17  Andika Triwidada <andika@gmail.com>

	[l10n] Added Indonesian translation

2012-05-17  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-05-16  Piotr Drąg <piotrdrag@gmail.com>

	Remove markup from translatable strings

2012-05-15  Kjartan Maraas <kmaraas@gnome.org>

	Updated Norwegian bokmål translation

2012-05-09  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2012-05-08  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-05-07  Piotr Drąg <piotrdrag@gmail.com>

	Fix three more typos in translatable strings

2012-05-07  Piotr Drąg <piotrdrag@gmail.com>

	Spell check translatable strings

2012-05-03  Bruno Brouard <annoa.b@gmail.com>

	Updated French translation

2012-05-02  Bruno Brouard <annoa.b@gmail.com>

	Updated French translation

2012-04-25  Joe Hansen <joedalton2@yahoo.dk>

	Updated Danish translation

2012-04-19  Dustin Polke <DuPol@gmx.de>

	Fix XML validation.

2012-04-12  Antoine Jacoutot <ajacoutot@gnome.org>

	build: unbreak on OpenBSD by including iostream

2012-04-12  Antoine Jacoutot <ajacoutot@gnome.org>

	don't hardcode path to false(1).

2012-03-27  Dodji Seketeli <dodji@seketeli.org>

	En route towards 0.9.3
	* configure.ac: Bump version to 0.9.3

2012-03-27  Dodji Seketeli <dodji@seketeli.org>

	Update release text
	* Makefile.am: Fix release text nits

2012-03-27  Dodji Seketeli <dodji@seketeli.org>

	Preparing 0.9.2 Release
	* ChangeLog:  Automatically update this.
	* NEWS: Update this for 0.9.2

2012-03-19  Fabien Parent <parent.f@gmail.com>

	672409 - activate correct views in static layouts
	* src/uicommon/nmv-layout.h (Layout::append_view): Renamed
	add_view into this.  Updated comment.
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.h
	(DBGPerspectiveDefaultLayout::append_view): Renamed add_view into
	this.
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.cc
	(DBGPerspectiveDefaultLayout::activate_view): Set the current page
	of the notebook to the page number of the widget to activate
	instead of its ID
	(DBGPerspectiveDefaultLayout::append_view): Renamed add_view into
	this.  Append the widget instead of trying to put it at specific
	position in the notebook
	* src/persp/dbgperspective/nmv-dbg-perspective-dynamic-layout.h
	(DBGPerspectiveDynamicLayout::append_view): Renamed add_view into
	this.
	* src/persp/dbgperspective/nmv-dbg-perspective-dynamic-layout.cc
	(DBGPerspectiveDynamicLayout::append_view): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.h
	(DBGPerspectiveTwoPaneLayout::activate_view): Renamed add_view
	into this.
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.cc
	(DBGPerspectiveTwoPaneLayout::activate_view): Fix wrong assertion
	(DBGPerspectiveTwoPaneLayout::append_view): Renamed add_view into
	this.  Append the widget instead of trying to put it at a specific
	position in the notebook.
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.h
	(DBGPerspectiveWideLayout::append_view): Renamed add_view into
	this.
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.cc
	(DBGPerspectiveWideLayout::activate_view): Set the current page of the
	notebook to the page number of the widget to activate instead of its ID
	(DBGPerspectiveWideLayout::append_view): Renamed add_view into
	this.  Append the widget instead of trying to put at a specific
	position in the notebook.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::add_views_to_layout): Update this to use
	Layout::append_view and to append views in the proper order.  Add
	comment.

2012-03-27  Dodji Seketeli <dodji@seketeli.org>

	Revert "672409 - activate correct views in static layouts"

2012-03-19  Fabien Parent <parent.f@gmail.com>

	672409 - activate correct views in static layouts
	* src/uicommon/nmv-layout.h (Layout::append_view): Renamed
	add_view into this.  Updated comment.
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.h
	(DBGPerspectiveDefaultLayout::append_view): Renamed add_view into
	this.
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.cc
	(DBGPerspectiveDefaultLayout::activate_view): Set the current page
	of the notebook to the page number of the widget to activate
	instead of its ID
	(DBGPerspectiveDefaultLayout::append_view): Renamed add_view into
	this.  Append the widget instead of trying to put it at specific
	position in the notebook
	* src/persp/dbgperspective/nmv-dbg-perspective-dynamic-layout.h
	(DBGPerspectiveDynamicLayout::append_view): Renamed add_view into
	this.
	* src/persp/dbgperspective/nmv-dbg-perspective-dynamic-layout.cc
	(DBGPerspectiveDynamicLayout::append_view): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.h
	(DBGPerspectiveTwoPaneLayout::activate_view): Renamed add_view
	into this.
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.cc
	(DBGPerspectiveTwoPaneLayout::activate_view): Fix wrong assertion
	(DBGPerspectiveTwoPaneLayout::append_view): Renamed add_view into
	this.  Append the widget instead of trying to put it at a specific
	position in the notebook.
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.h
	(DBGPerspectiveWideLayout::append_view): Renamed add_view into
	this.
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.cc
	(DBGPerspectiveWideLayout::activate_view): Set the current page of the
	notebook to the page number of the widget to activate instead of its ID
	(DBGPerspectiveWideLayout::append_view): Renamed add_view into
	this.  Append the widget instead of trying to put at a specific
	position in the notebook.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::add_views_to_layout): Update this to use
	Layout::append_view and to append views in the proper order.  Add
	comment.

2012-03-25  Joe Hansen <joedalton2@yahoo.dk>

	Updated Danish translation

2012-03-25  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2012-03-24  Fran Diéguez <fran.dieguez@mabishu.com>

	Updated Galician translations

2012-02-20  Dodji Seketeli <dodji@seketeli.org>

	670464 - Make breakpoint ignore count persistent
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::Breakpoint::initial_ignore_count): New accessor for
	the initial ignore count that got set by the user.
	(IDebugger::Breakpoint::clear): Zero the new
	m_initial_ignore_count member.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_breakpoint): Set initial ignore count when
	we are on the edge of an ignore count change.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::append_breakpoints_to_cache): Remove const from
	breakpoint(s) parameter.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::set_breakpoint_ignore_count): Set the initial ignore
	count on the locally cached breakpoint, when we have one.  This is
	how we 'remember' the initial ignore count, even though GDB
	decrements the ignore count at each hit.  That way, we can have a
	chance to set the proper ignore count back to the instance of
	Breakpoint we receive from GDB, if necessary.
	(GDBEngine::append_breakpoint_to_cache): Remove the const from the
	breakpoint parameter.  Update that argument with the cached
	initial ignore count if necessary.
	(GDBEngine::append_breakpoints_to_cache): Remove const from the
	breakpoints parameter.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::re_initialize_set_breakpoints): New.
	(DBGPerspective::on_going_to_run_target_signal): Use here.
	(DBGPerspective::record_and_save_session): Save the initial ignore
	count ...
	(DBGPerspective::execute_session): ... and restore it.
	(DBGPerspective::set_breakpoint): Set the breakpoint ignore count
	to the initial ignore count.

2012-03-02  Fabien Parent <parent.f@gmail.com>

	Remove duplicate file
	* src/persp/dbgperspective/DBGPerspective.conf.in: Removed. Unused
	duplicate copy of src/persp/dbgperspective/dbgperspective.conf.in.

2012-02-23  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2012-02-23  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2012-02-19  Dodji Seketeli <dodji@seketeli.org>

	Fix test-core.cc
	* tests/test-core.cc (main): Use
	debugger_utils::load_debugger_iface_with_confmgr to ensure the
	configuration manager is loaded too.
	* Makefile.am (runtestcore): Link this executable with
	libdebuggerutils.la.

2012-02-19  Dodji Seketeli <dodji@seketeli.org>

	Better default directory in core loading dialog
	* src/persp/dbgperspective/nmv-load-core-dialog.cc
	(Loadcoredialog::Priv::Priv): Set the current folder of the file
	chooser dialogs to the current directory.

2012-02-19  Dodji Seketeli <dodji@seketeli.org>

	Add a --load-core command line switch
	* src/main.cc (gv_core_path): New global variable that holds the
	path to the core file to load.
	(static GOptionEntry entries<load-core>): New struct to describe
	the new command line switch.
	(parse_command_line): Fix a typo in a comment.  Handle cases where
	the user forgets to provide the path to the binary that generated
	the core file.
	(load_debugger_perspective): Factorize out of ...
	(process_gui_options): ... here.  Handle the new option.

2012-02-19  Dodji Seketeli <dodji@seketeli.org>

	667723 - can't load core dump
	* src/persp/dbgperspective/nmv-call-stack.h
	(CallStack::update_stack): Take a parameter to select the top most
	frame of the call stack.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::set_current_frame):  Split from ...
	(CallStack::Priv::update_selected_frame): ... here.
	(CallStack::Priv::{on_frames_listed, update_call_stack}): Take a
	parameter to select the top most frame of the call stack.  Pass it
	to the new set_current_frame.
	(CallStack::Priv::finish_update_handling): Adjust.
	(CallStack::update_stack): Take a parameter to select the top most
	frame of the call stack.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::load_core_file): Don't just instruct the debugger
	to list call frames.  No client code is listening to update.
	Rather, delegate that job to the call stack widget.

2012-02-19  Dodji Seketeli <dodji@seketeli.org>

	Add more logging to nmv-gdb-engine.cc
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::{launch_gdb_on_core_file, load_core_file}): Add
	logging.

2012-02-19  Dodji Seketeli <dodji@seketeli.org>

	Style cleanup in nmv-call-stack.cc
	* src/persp/dbgperspective/nmv-call-stack.cc: Cleanup function
	definition style.

2012-02-19  Romain Tartière <romain@blogreen.org>

	641595 - Add configure option for default GDB path
	* configure.ac: Add --with-default-gdb=/path/to/default/gdb/binary
	configure option.

2012-02-18  Dodji Seketeli <dodji@seketeli.org>

	665498 - Assertion failure on program launch
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::read_default_config):  Ensure that
	m_priv->num_instr_to_disassemble is not zero.

2012-02-18  Dodji Seketeli <dodji@seketeli.org>

	Make test-var-path-expr.cc more portable
	* tests/test-var-path-expr.cc (on_variable_expr_path): Test the
	presence of the string ".m_first_name" in the path expression,
	instead of trying to look for something exact that would depend on
	a particular implementation of libstdc++.

2012-02-14  Dodji Seketeli <dodji@seketeli.org>

	Fix comment typo in class IDebugger::Variable
	* src/dbgengine/nmv-i-debugger
	(IDebugger::Variable::equals_by_value): Fix comment.

2011-12-30  Dodji Seketeli <dodji@seketeli.org>

	Support 'new_children' property of GDB/MI changelist LIST
	* src/dbgengine/nmv-dbg-common.h (VarChange): New type.
	(apply_debugger_variable_change): New public entry point.
	(Output::ResultRecord::m_has_var_changes):
	(Output::ResultRecord::m_new_num_children): New members
	(Output::ResultRecord::clear): Clear new m_var_changes and
	m_new_num_children.
	(Output::ResultRecord::has_var_changes):New.
	(Output::ResultRecord::var_changes): New.
	(Output::ResultRecord::new_num_children): New.
	* src/dbgengine/nmv-dbg-common.cc (VarChange::Priv): New
	(VarChange::*): New.
	(update_debugger_variable): New.
	* src/dbgengine/nmv-gdbmi-parser.h (parse_var_changed_list): New.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(grok_var_changed_list_components): Split out from
	GDBMIParser::parse_var_changed_list.  Make it support
	"new_children" property.
	(GDBMIParser::parse_var_changed_list): Use new
	grok_var_changed_list_components.
	(operator<<): Added a few overloads of this to stream instances of
	VariableSafePtr, Variable, VarChangePtr to ostream.
	(dump_gdbmi): Added a few overloads of this for GDBMI types.
	(GDBMIParser::parse_result_record<PREFIX_VARIABLES_CHANGED_LIST>):
	Adjust to list<VarChangePtr> instead of
	list<IDebugger::VariableSafePtr>.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::load_program): Add
	two new overloads to simplify inferior load from client code.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::load_program): Add
	two new overloads to simplify inferior load from client code.
	* src/dbgengine/nmv-gdb-engine.cc (read_default_config): Add logs.
	(on_conf_key_changed_signal): Likewise.  Don't queue
	-enable-pretty-printing command if gdb is not running.  That will
	make us lose the queued command once load_program is later called.
	(OnListChangedVariableHandler::do_handle): Apply variable changes
	to relevant variables and notify client code with the
	sub-variables that got modified.
	(GDBEngine::load_program): Two new overloads to simplify the
	client code.  Add comments.  Cleanup.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(update_a_local_variable, on_local_variables_listed_signal): Add
	logs.
	* src/persp/dbgperspective/nmv-variables-utils.cc (is_empty_row)
	(get_row_name): New static functions.
	(get_variable_columns, find_a_variable): Update logging.
	(walk_path_from_row):  Add a recurse argument that indicates if we
	are being called recursively or not.  Use that to determine row
	where the walk stops at.  USe is_empty_row.  Add logging.
	(find_a_variable_descendent): Add logging.  Support looking for a
	variable member that is a new sibling.  That is, a variable member
	not present in the graphical representation of its root variable,
	even though that root variable is graphically represented.
	(variables_match): Fix logic.
	(update_a_variable, update_a_variable_real): Add comments and
	logging.  Support new variable members.
	* tests/test-gdbmi.cc (gv_output_record9): New output record as a
	result of -var-update.
	* tests/test-pretty-print.cc: New test case.
	* tests/pretty-print.cc: New inferior for new test case.
	* tests/Makefile.am: Update build system for adding new test case.

2012-02-14  Dodji Seketeli <dodji@seketeli.org>

	Add IDebugger::Variable::operator==
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::Variable::operator==): Make this public and implement
	it.
	(IDebugger::Variable::equals): New function.

2012-02-04  Dodji Seketeli <dodji@seketeli.org>

	Support GDB/MI properties displayint, dynamic, has_more
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::{m_display_hint,m_is_dynamic,m_has_more_children}):
	New members.
	(Variable::Variable): Initialize the new members.
	(Variable::{display_hint,is_dynamic,has_more_children}): New
	accessors.
	(Variable::expects_children): Renamed
	Variable::has_expected_children into this.  Use the new
	Variable::has_more_children accessor.
	(Variable::needs_unfolding): Adjust.
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_variable):
	Support "displayhinr", "dynamic", "has_more" properties.
	* tests/test-vars.cc (on_variable_unfolded_signal): Adjust.

2012-02-04  Dodji Seketeli <dodji@seketeli.org>

	Drop redundant parameter from some variable utils
	* src/persp/dbgperspective/nmv-variables-utils.h
	(append_a_variable, set_a_variable):  Drop redundant a_tree_store
	and the const from a_tree_view.
	(update_a_variable_node, update_unfolded_variable)
	(update_a_variable, visualize_a_variable): Adjust.
	* src/persp/dbgperspective/nmv-variables-utils.cc
	(append_a_variable, set_a_variable): Drop redundant
	a_tree_store parameter.  Get it from from the a_tree_view
	parameter instead.  Drop the const from a_tree_view as a
	consequence.  Adjust the rest of the function accordingly.
	(update_a_variable_real, update_a_variable)
	(update_a_variable_node, update_unfolded_variable)
	(visualize_a_variable): Adjust.
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.cc
	(append_a_global_variable): Adjust.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(append_a_local_variable, append_a_function_argument)
	(on_variable_unfolded_signal): Likewise.
	* src/persp/dbgperspective/nmv-var-inspector.cc
	(graphically_set_variable, on_variable_unfolded_signal): Likewise.

2012-01-11  Jiro Matsuzawa <jmatsuzawa@src.gnome.org>

	Updated Japanese translation

2012-01-11  Jiro Matsuzawa <jmatsuzawa@src.gnome.org>

	Fix Bug 667677. Fix broken tags.

2011-12-29  Kristjan SCHMIDT <kristjan.schmidt@googlemail.com>

	Add Esperanto translation

2011-12-23  Dodji Seketeli <dodji@seketeli.org>

	Fix offscreen -> onscreen locals rendering
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(is_local_variables_subtree_empty, inspector_is_empty): New
	functions.
	(finish_handling_debugger_stopped_event): Add logging.  Use the
	new inspector_is_empty.  Make sure to save proper state in all
	cases.

2011-12-23  Dodji Seketeli <dodji@seketeli.org>

	Dump variable value to stderr
	* src/dbgengine/nmv-debugger-utils.h (dump_variable_value):
	Declare new overload.  Make the existing overload take an
	std::ostream instead of an std::ostringstream.
	* src/dbgengine/nmv-debugger-utils.cc (dump_variable_value):
	Define new overload.  Make the existing overload take an
	std::ostream instead of an std::ostringstream.

2011-12-11  Dodji Seketeli <dodji@seketeli.org>

	Tie life time of IDebugger::Variable and varobjs
	* src/dbgengine/nmv-i-debugger.h (IDebugger::delete_variable): Add
	an overload declaration that takes the internal name of the
	backend-side variable object to delete.  Add comments to all the
	overloads.
	(IDebugger::DefaultSlot): Move typedef before declaration of
	IDebugger::Variable.
	(IDebugger::Variable::m_debugger): New member.
	(IDebubber::Variable::Variable): Adjust constructors to initialize
	the new m_debugger member.
	(IDebugger::Variable::debugger): New accessor.
	(IDebugger::Variable::~Variable): If the debugging engine is still
	connected to the Delete the backend-side variable
	object if any.
	(IDebugger::variable_deleted_signal): Add comments.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::delete_variable):
	Declare new overload.
	* src/dbgengine/nmv-gdb-engine.cc
	(OnCreateVariableHandler::do_handle): Associate the instance of
	IDebugger::Variable with the instance of IDebugger::Variable it
	was created from, iff there is backend-side variable object for
	that variable.
	(OnDeleteVariableHandler::do_handle): Some requests for deleting
	variable can have null instances of IDebugger::Variable
	associated.  Handle those.
	(GDBEngine::delete_variable): Implement the new overload to delete
	a variable object from its "internal name".  Add comments to the
	other overloads.
	* src/dbgengine/nmv-varobj-walker.cc (~VarobjWalker): Remove.
	(delete_varobj_if_necessary): Remove.
	(connect): Remove call to delete_varobj_if_necessary.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::clear_local_variables)
	(LocalVarsInspector::Priv::clear_function_arguments): Remove uses
	of delete_vars_backend_peers.
	(LocalVarsInspector::Priv::delete_vars_backend_peers): Remove.
	* src/persp/dbgperspective/nmv-var-inspector.cc
	(VarInspector::Priv::graphically_set_variable)
	(VarInspector::Priv::~Priv, VarInspector::inspect_variable)
	(VarInspector::clear): Remove use of delete_variable_if_needed.
	(VarInspector::Priv::delete_variable_if_needed): Remove.
	* tests/fooprog.cc (main): Don't name unused parameters.
	* tests/test-var-path-expr.cc (variables): New global
	container of variables.
	(on_variable_deleted_signal): New signal handler.
	(on_breakpoints_set_signal): Clear variables instead of quitting
	the event loop.
	(on_variable_unfolded, on_variable_created): Add the variable to
	the "variables" container.
	(on_stopped_signal): Count the number of variable created.
	Avoid needlessly passing a reference to the debugger engine.
	(test_main): Don't name unused arguments.  Handle the
	IDebugger::variable_deleted_signal event.
	* tests/test-var-walker.cc (VariableList): Rename
	DebuggerVariableList into this.
	(variables): New global variable to hold variables.
	(on_frames_arguments_listed_signal, on_local_variables_listed_signal):
	Don't name unused parameters.  Add function arguments to the
	"variables" global.
	(test_main): Adjust b/c fooprog's main function doesn't have any
	named parameter anymore.  Clear the "variables" global after the
	event loop is closed.
	* tests/test-vars.cc (variables): New global to handle variables.
	(person_var): Rename var_to_delete into this.
	(on_variable_created_signal, on_varible_created_signal2): Add
	variable to the "variables" global.
	(on_changed_variables_listed_signal):  Don't explicitly
	delete_variable anymore.  Keep stepping, and don't hold a
	reference on the person_var reference.
	(on_variable_deleted_signal, on_variable_deleted_signal2): Be
	aware that a_var can be empty for backend-side variable objects.
	(on_stopped_signal): Adjust.
	(test_main):  Don't expect any variable to be have been deleted
	during this test, and clear the "variables" global.

2011-10-19  Fabien Parent <parent.f@gmail.com>

	543488 Support renaming of sessions
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::record_and_save_session): Restore the custom user
	defined name of the session when updating a previous session
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.cc
	(SavedSessionsDialog::Priv::Priv): Take the session manager as parameter
	(SavedSessionsDialog::Priv::init): Add a custom cell renderer for
	the session name column and display the custom session name is present.
	(SavedSessionsDialog::Priv::session_name_cell_data_func): New API
	(SavedSessionsDialog::Priv::on_session_name_edited): New API
	(SavedSessionsDialog::SavedSessionsDialog): The session manager is given
	to the constructor of Priv instead of the method Priv::init.

2011-11-24  Dodji Seketeli <dodji@seketeli.org>

	Misc style cleanups
	* src/main.cc: Add missing spaces for initialization expressions.
	(entries): Properly indent.
	* src/persp/dbgperspective/nmv-remote-target-dialog.cc
	(RemoteTargetDialog::Priv:*): In function definitions, names
	should start at the beginning of the line.

2011-11-24  Dodji Seketeli <dodji@seketeli.org>

	664463 - cannot debug the same software twice
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::set_breakpoint): Don't try to set a breakpoint if
	it has neither and address nor a filename set.

2011-11-24  Dodji Seketeli <dodji@seketeli.org>

	En route toward 0.9.2
	* configure.ac: Bump revision to 0.9.2.

2011-11-20  Dodji Seketeli <dodji@seketeli.org>

	Update the 'release' target for gz -> xz change
	* Makefile.am:  Substitute tar_gz_file for tar_xz_file and tar.gz
	for tar.xz.

2011-11-23  Jiro Matsuzawa <jmatsuzawa@src.gnome.org>

	Updated Japanese translation

2011-11-22  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Automatically update ChangeLog

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Bump to 0.9.1 and update NEWS file
	* configure.ac: Current version is not 0.9.1
	* NEWS: Update for changes since 0.9.0

2011-11-20  Dodji Seketeli <dodji@seketeli.org>

	Handle deprecated functions on glibmm-2.4 2.30.0 and glib-2.0 2.31.0
	* configure.ac: Define GLIB_DISABLE_DEPRECATION_WARNINGS if we
	detect that we are building against a combination of glibmm/glib
	that uses deprecated functions.  Update report at the end of
	configure.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_motion_notify_event_signal): Use the new
	gdk_event_get_device_position on gtk+ >= 3.0.0 instead of the
	deprecated gdk_window_get_pointer.  Include config.h as the first
	header in the translation unit.
	* src/common/nmv-conf-manager.cc: Include config.h as the first
	header in the translation unit.
	* src/common/nmv-connection-manager.cc: Likewise.
	* src/common/nmv-connection.cc: Likewise.
	* src/common/nmv-date-utils.cc: Likewise.
	* src/common/nmv-delete-statement.cc: Likewise.
	* src/common/nmv-dynamic-module.cc: Likewise.
	* src/common/nmv-env.cc: Likewise.
	* src/common/nmv-exception.cc: Likewise.
	* src/common/nmv-initializer.cc: Likewise.
	* src/common/nmv-insert-statement.cc: Likewise.
	* src/common/nmv-log-stream.cc: Likewise.
	* src/common/nmv-option-utils.cc: Likewise.
	* src/common/nmv-parsing-utils.cc: Likewise.
	* src/common/nmv-plugin.cc: Likewise.
	* src/common/nmv-proc-mgr.cc: Likewise.
	* src/common/nmv-proc-utils.cc: Likewise.
	* src/common/nmv-scope-logger.cc: Likewise.
	* src/common/nmv-sql-statement.cc: Likewise.
	* src/common/nmv-str-utils.cc: Likewise.
	* src/common/nmv-tools.cc: Likewise.
	* src/common/nmv-transaction.cc: Likewise.
	* src/common/nmv-ustring.cc: Likewise.
	* src/confmgr/nmv-gsettings-mgr.cc: Likewise.
	* src/dbgengine/nmv-cpp-trait.cc: Likewise.
	* src/dbgengine/nmv-dbg-common.cc: Likewise.
	* src/dbgengine/nmv-gdbmi-parser.cc: Likewise.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc: Likewise.
	* src/persp/dbgperspective/nmv-call-function-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-call-stack.cc: Likewise.
	* src/persp/dbgperspective/nmv-choose-overloads-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-file-list.cc: Likewise.
	* src/persp/dbgperspective/nmv-find-text-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-load-core-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-memory-view.cc: Likewise.
	* src/persp/dbgperspective/nmv-open-file-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-registers-view.cc: Likewise.
	* src/persp/dbgperspective/nmv-remote-target-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-run-program-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-sess-mgr.cc: Likewise.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-set-jump-to-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-thread-list.cc: Likewise.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-vars-treeview.cc: Likewise.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc: Likewise.
	* src/uicommon/nmv-dialog.cc: Likewise.
	* src/uicommon/nmv-hex-editor.cc: Likewise.
	* src/uicommon/nmv-layout-manager.cc: Likewise.
	* src/uicommon/nmv-layout-selector.cc: Likewise.
	* src/uicommon/nmv-locate-file-dialog.cc: Likewise.
	* src/uicommon/nmv-popup-tip.cc: Likewise.
	* src/uicommon/nmv-spinner-tool-item.cc: Likewise.
	* src/uicommon/nmv-terminal.cc: Likewise.
	* src/uicommon/nmv-ui-utils.cc: Likewise.
	* tests/gtkmm-test.cc: Likewise.
	* tests/test-breakpoint.cc: Likewise.
	* tests/test-core.cc: Likewise.
	* tests/test-cpp-lexer.cc: Likewise.
	* tests/test-cpp-parser.cc: Likewise.
	* tests/test-deref.cc: Likewise.
	* tests/test-disassemble.cc: Likewise.
	* tests/test-env.cc: Likewise.
	* tests/test-libtool-wrapper-detection.cc: Likewise.
	* tests/test-local-vars-list.cc: Likewise.
	* tests/test-stdout.cc: Likewise.
	* tests/test-types.cc: Likewise.
	* tests/test-unicode.cc: Likewise.
	* tests/test-var-list.cc: Likewise.
	* tests/test-var-path-expr.cc: Likewise.
	* tests/test-var-walker.cc: Likewise.
	* tests/test-variable-format.cc: Likewise.
	* tests/test-varobj-walker.cc: Likewise.
	* tests/test-vars.cc: Likewise.
	* tests/test-watchpoint.cc: Likewise.

2011-11-19  Dodji Seketeli <dodji@seketeli.org>

	Bye bye gziped tarballs, welcome xz
	* configure.ac: Change AM_INIT_AUTOMAKE to avoid generate gzipped
	tarballs, and generate xz compressed tarballs instead.

2011-11-19  Dodji Seketeli <dodji@seketeli.org>

	664385 - Source code tab label completely ellipsized

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Revert "Initial import of variable monitor work"

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Revert "Support graphically adding a variable to the monitor"

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Support graphically adding a variable to the monitor

2011-10-23  Dodji Seketeli <dodji@seketeli.org>

	Initial import of variable monitor work

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Fix changed variable highlighting
	* src/dbgengine/nmv-i-debugger.h (Frame::operator==): Ignore
	line number and instruction pointer when comparing two frames.

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Fix style in nmv-var-inspector-dialog.cc
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc
	(Priv, build_dialog, connect_to_widget_signals)
	(do_inspect_variable, inspect_variable, exists_in_history)
	(erase_expression_from_history, add_to_history, get_history)
	(set_history, on_var_name_changed_signal): Fix function
	declaration style.

2011-11-13  Dodji Seketeli <dodji@seketeli.org>

	Simplify logic in nmv-local-vars-inspector.cc
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(on_stopped_signal):  Simplify logic.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::operator==): Make
	this const.
	(IDebugger::operator!=): New.

2011-11-03  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2011-10-25  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2011-10-24  Mario Blättermann <mariobl@gnome.org>

	[l10n] Updated German translation

2011-10-24  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-10-24  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-10-23  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2011-10-19  Fabien Parent <parent.f@gmail.com>

	659462 Handle plural form of a string
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::append_frames_to_tree_view): Handle plural form
	of a string

2011-10-19  Fabien Parent <parent.f@gmail.com>

	Use local time instead of UTC time
	* src/common/nmv-date-utils.cc (get_current_datetime): return local time
	instead of UTC time

2011-10-06  Fabien Parent <parent.f@gmail.com>

	646698 Add cmd line option to choose the gdb binary
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::get_debugger_full_path): Return the path of the debugger
	from the command line if specified
	(GDBEngine::set_non_persistent_debugger_path): New API
	* src/dbgengine/nmv-i-debugger.h
	(GDBEngine::set_non_persistent_debugger_path): New API
	* src/main.cc (process_gui_options): Set the debugger path from the command
	line if specified in it

2011-10-03  Fabien Parent <parent.f@gmail.com>

	Add missing return
	* src/common/nmv-buffer.h (Buffer::operator=): Add missing return

2011-10-02  Dodji Seketeli <dodji@gnome.org>

	Tighten IDebugger::Frame::operator=
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Frame::operator=):
	Compare more than just the address of the frame.

2011-10-02  Dodji Seketeli <dodji@gnome.org>

	Add logging in DBGPerspective::set_where
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::set_where): Add logging here.

2011-10-02  Dodji Seketeli <dodji@gnome.org>

	Allow selecting current frame twice consecutively
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_frame_selected_signal): If the current frame
	was previously selected, just set the "where-marker" again.

2011-09-25  Dodji Seketeli <dodji@gnome.org>

	Relax the fixed minimum sizes preventing shrinking
	* data/schemas/gconf/nemiver-workbench.schemas
	(/apps/nemiver/workbench/window-minimum-width)
	(/apps/nemiver/workbench/window-minimum-height)
	(/apps/nemiver/dbgperspective/status-widget-minimum-width)
	(/apps/nemiver/dbgperspective/status-widget-minimum-height): Set these keys to
	zero.
	* data/schemas/gsettings/org.nemiver.gschema.xml
	(window-minimum-width, window-minimum-height)
	(status-widget-minimum-width, status-widget-minimum-height):
	Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.cc
	(DBGPerspectiveDefaultLayout::do_lay_out): Set the default minimum
	status widget size to zero.
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.cc
	(DBGPerspectiveTwoPaneLayout::do_lay_out): Set the default minimal
	size of the two status notebooks to zero.
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.cc
	(DBGPerspectiveWideLayout::do_lay_out):  Set the default minimal
	size of the status widget to zero.
	* src/persp/dbgperspective/nmv-dbg-perspective-dynamic-layout.cc
	(DBGPerspectiveDynamicLayout::add_view): Set the default minimal
	size of the terminal to zero.
	* src/workbench/nmv-workbench.cc (Workbench::init_window): Set the
	default minimum window size of Nemiver to zero.

2011-09-25  Dodji Seketeli <dodji@gnome.org>

	Allow shrinking of the memory view widget
	* src/persp/dbgperspective/nmv-memory-view.cc
	(MemoryView::Priv::Priv):  Renamed the m_container member into
	m_vbox, and the m_scrolledwindow member into m_container.  Put the
	whole resulting memory view widget into a scrolled window with
	automatic scrolling policy.

2011-09-25  Dodji Seketeli <dodji@gnome.org>

	Minor style cleanups
	* src/workbench/nmv-workbench.cc (Workbench::init_window): Add
	space around '=' and fix some comments.

2011-09-25  Dodji Seketeli <dodji@gnome.org>

	Update copyright file
	* COPYRIGHT: Add Jonner.

2011-09-24  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2011-09-19  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.

2011-09-15  dmustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-09-13  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2011-09-13  Martin Srebotnjak <miles@filmsi.net>

	Updated Slovenian translation

2011-09-11  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2011-09-10  Dodji Seketeli <dodji@seketeli.org>

	Automatically update ChangeLog
	* ChangeLog: Automatically update.

2011-09-09  Dodji Seketeli <dodji@seketeli.org>

	Prepare for 0.9.0 Release
	* Makefile.am: Use master a the release branch.
	* NEWS: Update for 0.9.0
	* configure.ac: Bump version number to 0.9.0

2011-09-07  Dodji Seketeli <dodji@seketeli.org>

	Misbehaving vertically enlarging var inspector
	* src/persp/dbgperspective/ui/varinspectordialog.ui: Allow the
	VBox containing the variable inspector widget to expand.

2011-09-07  Dodji Seketeli <dodji@seketeli.org>

	Don't append the disassembly editor multiple times
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::append_source_editor): Fix thinko: use path, not
	the a_path that can be empty for e.g, disassembly source editor.

2011-09-04  Dodji Seketeli <dodji@seketeli.org>

	632305 Avoid disassembling location of pending breakpoint
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::append_breakpoint): Don't try to graphically
	append a /pending/ breakpoint.

2011-09-04  Dodji Seketeli <dodji@seketeli.org>

	constify IDebugger::Breakpoint::is_pending
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::Breakpoint::is_pending): Make this function const.

2011-09-04  Dodji Seketeli <dodji@seketeli.org>

	Don't forget to Gtk::Widget::show_all source views
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::append_source_editor): Call Gtk::Widget::show_all
	on the source view to add append to the source view notebook here
	...
	(DBGPerspective::get_or_append_asm_source_editor)
	(DBGPerspective::open_file_real): ... not here.

2011-09-04  Dodji Seketeli <dodji@seketeli.org>

	Use DBGPerspective::append_breakpoints
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_breakpoints_set_signal): Use
	DBGPerspective::append_breakpoints
	instead of walking the
	breakpoints and appending them one by one.

2011-09-04  Dodji Seketeli <dodji@seketeli.org>

	658143 Fails to support multiple breakpoints
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::breakpoints_set_signal): Renamed
	IDebugger::breakpoint_set_signal into this.  Make it take a map of
	breakpoints instead of just one.
	(IDebugger::set_breakpoint): Change the type of the callback slot
	so that it takes a map of breakpoints.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::breakpoints_set_signal): Renamed
	IDebugger::breakpoint_set_signal into this.  Make it take a map of
	breakpoints instead of just one.
	(GDBEngine::set_breakpoint) Change the type of the callback slot
	so that it takes a map of breakpoints.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::breakpoints_set_signal): Renamed
	GDBEngine::Priv::breakpoint_set_signal into this.  Change the
	type, make it take a map of breakpoint instead of just one
	breakpoint.
	(OnBreakpointHandler::do_handle): Expect that the result of
	setting a breakpoint can be multiple breakpoints set.  Adjust code
	to the callback slots taking a map of breakpoints instead of just
	one breakpoint.
	(GDBEngine::breakpoints_set_signal): Renamed
	GDBEngine::breakpoint_set_signal into this.  Make it take a map of
	breakpoints instead of just one.
	(GDBEngine::set_breakpoint): Change the type of the callback slot
	so that it takes a map of breakpoints.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::Priv): Adjust.
	(BreakpointsView::Priv::on_debugger_breakpoints_set_signal):
	Renamed BreakpointsView::Priv::on_debugger_breakpoint_set_signal
	into this.  Adjust.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_break_before_jump)
	(DBGPerspective::on_debugger_breakpoints_set_signal)
	(DBGPerspective::init_debugger_signals): Adjust.

2011-09-04  Dodji Seketeli <dodji@seketeli.org>

	Fix tests/pointer-deref.c regression
	* tests/test-local-vars-list.cc (on_stopped_signal): Acknowledge
	that we now have 4 local variables, not 3 like before.  Expect
	that the types of 4 variables got set.  Not 3 anymore.  Step
	further - until after the new variable gets instantiated - before
	querying the state of the local variables.
	(on_var_type_set): Acknowledge that we have a new local variable
	called "b".

2011-08-31  Fabien Parent <parent.f@gmail.com>

	Use ATT for disassembly flavor to avoid a glade bug
	* src/persp/dbgperspective/nmv-preferences-dialog.cc: Replace AT&T with ATT
	* src/persp/dbgperspective/ui/preferencesdialog.ui: Likewise

2011-09-03  Dodji Seketeli <dodji@seketeli.org>

	644823 Cannot set BP in files with space in path
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::set_breakpoint):
	Enclose the path argument to -break-insert into quotes.

2011-09-03  Dodji Seketeli <dodji@seketeli.org>

	Fix a typo in the coding style
	* coding-style.txt: Fix typo.

2011-09-03  Dodji Seketeli <dodji@seketeli.org>

	Add comment to is_word_delimiter
	* src/uicommon/nmv-source-editor.cc (is_word_delimiter): Add comment.

2011-09-03  Dodji Seketeli <dodji@seketeli.org>

	658097 Fix hovering over pointer dereference expression
	* src/uicommon/nmv-source-editor.cc (parse_word_around_iter): New
	function.  Factorized and enhanced from ...
	(SourceEditor::get_word_at_position): ... here.
	* tests/pointer-deref.cc: Enhance this test to add some
	de-referencing expression for testing purpose.

2011-09-02  Dodji Seketeli <dodji@seketeli.org>

	Fix style
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_c_string_body): Fix spacing.

2011-09-02  Dodji Seketeli <dodji@seketeli.org>

	657834 Properly un-escape '\"' sequence
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(GDBMIParser::parse_c_string_body):  Properly handle '\"' escape
	sequence of characters.
	* tests/test-gdbmi.cc: (test_str4):  Add new test case, and ...
	(init_unit_test_suite): ... wire it.

2011-09-01  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-09-01  Mario Blättermann <mariobl@gnome.org>

	[l10n] Updated German translation

2011-03-02  Dodji Seketeli <dodji@seketeli.org>

	Avoid over reacting to pretty printing key changes
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::Priv::enable_pretty_printing): New member.
	(DBGPerspective::on_conf_key_changed_signal): Don't react to a
	change of the value of the pretty printing key if the new value
	equals the old one.
	(DBGPerspective::read_default_config): Set the value of the new
	member DBGPerspective::Priv::enable_pretty_printing.  Also also a
	couple of ";" around.

2011-03-02  Dodji Seketeli <dodji@seketeli.org>

	Avoid emitting useless -enable-pretty-printing
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::pretty_printing_enabled_once): New member.
	(GDBEngine::Priv::on_conf_key_changed_signal): Don't emit
	-enable-pretty-printing if it has already been emitted once.
	(GDBEngine::load_program): Likewise.

2011-03-01  Dodji Seketeli <dodji@seketeli.org>

	Support pretty printing instantly applied
	* src/dbgengine/nmv-dbg-common.h (Command::should_emit_signal):
	New accessor.  Returns TRUE by default.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::variable_visualized_signal)
	(GDBEngine::on_rv_eval_var, GDBEngine::on_rv_unfold_var)
	(GDBEngine::on_rv_set_visualizer_on_member)
	(GDBEngine::on_rv_set_visualizer_on_next_sibling)
	(GDBEngine::on_rv_flag)
	(GDBEngine::unfold_variable_with_visualizer)
	(GDBEngine::revisualize_variable)
	(GDBEngine::revisualize_variable_real): Declare new functions.
	(GDBEngine::create_variable, GDBEngine::unfold_variable): Declare
	new overloads.
	(GDBEngine::enable_pretty_printing): Rename
	GDBEngine::disable_pretty_printing into this.
	(GDBEngine::set_variable_visualizer): Rename
	GDBEngine::set_variable_vizualizer.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::variable_visualized_signal): New fn.
	(GDBEngine::Priv::on_conf_key_changed_signal): If pretty printing
	has been enabled, send the -enable-pretty-printing command down
	the wire.
	(OnCommandDoneHandler::do_handle): Handle new
	set-variable-visualizer command.
	(OnCreateVariableHandler::do_handle): Do not emit
	IDebugger:variable_created_signal if it was been requested
	otherwise at command creation time.
	(OnUnfoldVariableHandler::do_handle): Likewise.
	(GDBEngine::variable_visualized_signal, GDBEngine::on_rv_eval_var)
	(GDBEngine::on_rv_unfold_var)
	(GDBEngine::on_rv_set_visualizer_on_members)
	(GDBEngine::on_rv_set_visualizer_on_next_sibling)
	(GDBEngine::on_rv_flag)
	(GDBEngine::unfold_variable_with_visualizer)
	(GDBEngine::revisualize_variable)
	(GDBEngine::revisualize_variable_real): New functions.
	(GDBEngine::register_names_listed_signal)
	(GDBEngine::register_values_listed_signal): Re-indent return type.
	Add comments.
	(GDBEngine::on_detached_from_target_signal): Add ';' after
	NEMIVER_TRY/CATCH_NOX.  Add comments.
	(GDBEngine::create_variable, GDBEngine::unfold_variable): Add
	comments.  Add an overload that enables disabling broadcast signal
	emitting.
	(GDBEngine::enable_pretty_printing): Renamed
	GDBEngine::disable_pretty_printing into this.  Added comments.
	(GDBEngine::set_variable_vizualizer): Update comments.  Fix MI
	commands sending.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::ConstVariableSlot)
	(IDebugger::ConstVariableListSlot, IDebugger::ConstUStringSlot):
	Move these defines right before declaring the IDebugger::Variable
	type.
	(IDebugger::visualizer, IDebugger::needs_revisualizing): New
	accessors.
	(IDebugger::members): Add a new accessor that returns non-const
	members.
	(IDebugger::variable_visualized_signal): New signal.
	(IDebugger::revisualize_variable): New entry point.
	(IDebugger::enable_pretty_printing): Renamed
	IDebugger::disable_pretty_printing into this.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_conf_key_changed_signal): Add comments.
	Re-indent somewhat.  Re-visualize the local variables of the
	current function whenever the pretty-printing enabling setting
	changes.
	(DBGPerspective::Priv::pretty_printing_toggled): New member.
	(DBGPerspective::on_conf_key_changed_signal): Set it.
	(DBGPerspective::show_underline_tip_at_position): Use it.
	* src/persp/dbgperspective/nmv-local-vars-inspector.h
	(LocalVarsInspector::set_local_variables)
	(LocalVarsInspector::show_local_variables_of_current_function):
	Re-indent.
	(LocalVarsInspector::visualize_local_variables_of_current_function):
	New function.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::append_a_function_argument): Add
	logging.
	(LocalVarsInspector::Priv::update_a_visualized_local_variable)
	(LocalVarsInspector::Priv::update_a_visualized_function_arg)
	(LocalVarsInspector::Priv::on_local_var_visualized_signal)
	(LocalVarsInspector::Priv::on_function_arg_visualized_signal)
	(LocalVarsInspector::visualize_local_variables_of_current_function):
	New functions.
	* src/persp/dbgperspective/nmv-var-inspector.h
	(VarInspector::set_variable): Take a new flag to re-visualize the
	variable.
	* src/persp/dbgperspective/nmv-var-inspector.cc
	(VarInspector::Priv::rev_visualize): New member.
	(VarInspector::Priv::on_var_revisualized): New function.
	(VarInspector::Priv::graphically_set_variable): Factor out from
	...
	(VarInspector::Priv::set_variable): ... here.  Use the new
	VarInspector::Priv::on_var_revisualized.  Take a new flag to
	re-visualize the variable.
	(VarInspector::set_variable): Take a new flag to re-visualize the
	variable.
	* src/persp/dbgperspective/nmv-variables-utils.h ():
	* src/persp/dbgperspective/nmv-variables-utils.cc
	(variables_match): Consider variables with the same internal name
	being equal.
	(set_a_variable): Factorize out of ...
	(append_a_variable): ... here.
	(unlink_member_variable_rows): New function.
	(visualize_a_variable): Likewise.  Use set_a_variable.
	* tests/test-breakpoint.cc (test_main): Adjust for the renaming of
	IDebugger::enable_pretty_printing.
	* tests/test-types.cc (test_main): Likewise.
	* tests/test-var-path-expr.cc (test_main): Likewise.
	* tests/test-vars.cc (test_main): Likewise.

2011-01-23  Dodji Seketeli <dodji@seketeli.org>

	Add preferences for GDB pretty printing
	* src/confmgr/nmv-conf-keys.h (CONF_KEY_PRETTY_PRINTING): Declare
	new conf key.
	* src/confmgr/nmv-conf-keys.cc (CONF_KEY_PRETTY_PRINTING): Define
	it.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::enable_pretty_printing): Rename
	GDBEngine::Priv::disable_pretty_printing into this.
	(GDBEngine::Priv::Priv, GDBEngine::load_program): Adjust.
	(GDB::Engine::Priv::read_default_config): Read the value of key
	CONF_KEY_PRETTY_PRINTING as well.
	(GDB::Engine::Priv::on_conf_key_changed_signal): Update
	GDB::Engine::Priv::enable_pretty_printing.
	(GDBEngine::disable_pretty_printing): Update remote conf setting.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc
	(PreferencesDialog::Priv::pretty_printing_check_button): New check
	button.
	(PreferencesDialog::Priv::on_pretty_printing_toggled_signal)
	(PreferencesDialog::Priv::update_pretty_printing_key): New
	functions.
	(PreferencesDialog::Priv::init): Deserialize the new
	PreferencesDialog::Priv::pretty_printing_check_button.
	(PreferencesDialog::Priv::update_widget_from_debugger_keys): Read
	the new CONF_KEY_PRETTY_PRINTING key.
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas:
	Add new schema for key
	/schemas/apps/nemiver/dbgperspective/pretty-printing.
	* src/persp/dbgperspective/ui/preferencesdialog.ui: Add a check
	button to enable pretty printing in the debugger preference tab.

2010-09-12  Dodji Seketeli <dodji@gnome.org>

	Initialize IDebugger dynmods with gconf in tests
	* src/dbgengine/nmv-debugger-utils.[h,cc]
	(load_debugger_iface_with_gconf): New entry point.
	* tests/test-cpptrait.cc (test_debugger)
	* tests/test-deref.cc (test_main)
	* tests/test-disassemble.cc (test_main)
	* tests/test-local-vars-list.cc (test_main)
	* tests/test-types.cc (test_main)
	* tests/test-var-list.cc (test_main)
	* tests/test-var-walker.cc (test_main)
	* tests/test-variable-format.cc (test_main)
	* tests/test-varobj-walker.cc (test_main)
	* tests/test-vars.cc (test_main)
	* tests/test-watchpoint.cc (test_main):
	Use load_debugger_iface_with_gconf.
	* tests/Makefile.am: Link all the tests loading the IDebugger
	interface with $(top_builddir)/src/dbgengine/libdebuggerutils.la

2010-09-12  Dodji Seketeli <dodji@gnome.org>

	Fix tests that got broken a while ago
	* tests/test-types.cc (on_variable_value_signal): Update this test
	b/c of a change in fooprog.cc
	* tests/test-breakpoint.cc (on_stopped_signal): Likewise.

2010-09-12  Dodji Seketeli <dodji@gnome.org>

	Enable GDB pretty printers by default
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::disable_pretty_printing)
	(IDebugger::set_variable_vizualizer): New ifaces.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::disable_pretty_printing)
	(GDBEngine::set_variable_vizualizer): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::disable_pretty_printing): New member.
	(GDBEngine::Priv::Priv): Initialize
	GDBEngine::Priv::disable_pretty_printing if
	NMV_DISABLE_PRETTY_PRINTING is set.
	(GDBengine::disable_pretty_printing)
	(GDBEngine::set_variable_vizualizer): Implement new interfaces.
	(GDBEngine::load_program): Enable GDB pretty printers by default.
	* tests/test-breakpoint.cc (test_main): Disable GDB pretty
	printers to keep this test working as before.
	* tests/test-var-path-expr.cc (test_main): Likewise.
	* tests/test-vars.cc (test_main): Likewise.
	* tests/test-types.cc (test_main): Likewise.

2010-08-30  Dodji Seketeli <dodji@gnome.org>

	Backend support for GDB/MI variable format
	* src/dbgengine/nmv-gdbmi-parser.h (parse_variable_format):
	Declare new GDBMI parser entry point.
	* src/dbgengine/nmv-gdbmi-parser.cc (parse_variable_format):
	Define it.
	(parse_result_record): Support variable format result record. Use
	parse_variable_format.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Variable::Format):
	New enum.
	(query_variable_format, set_variable_format): Declare new entry
	points.
	* src/dbgengine/nmv-dbg-common.h (ResultRecord::variable_format)
	(ResultRecord::has_variable_format): New accessors to support
	variable format in the result record.
	* src/dbgengine/nmv-debugger-utils.[cc|h] (string_to_variable_format)
	(variable_format_to_string): New (de)serialization functions.
	* src/dbgengine/nmv-gdb-engine.h (query_variable_format)
	(set_variable_format): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc (query_variable_format)
	(set_variable_format): Define these.
	(struct OnVariableFormatHandler): New output handler.
	(init_output_handlers): Add it to the list of output handlers.
	* src/dbgengine/Makefile.am: Make the libgdbmod use the static lib
	libdebuggerutils.
	* tests/test-variable-format.cc: New test.
	* tests/Makefile.am: Added new test-variable-format to the build
	system. Link runtestgdbmi and runtestvarobjwalker with
	libdebuggerutils.la
	* tests/fooprog.cc: Add a new func1_1 to test for some variable
	value. Used by the new tests/test-variable-format.cc.

2011-08-29  Piotr Drąg <piotrdrag@gmail.com>

	Updated POTFILES.in

2011-08-07  Fabien Parent <parent.f@gmail.com>

	577496 561100 533437 656093 564992 Support Copy/Paste/Reset on target terminal
	* src/persp/dbgperspective/menus/Makefile.am: Add terminal menu file
	* src/persp/dbgperspective/menus/terminalmenu.xml: New file
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::get_terminal): pass the ui manager to the terminal
	* src/uicommon/nmv-terminal.cc
	(on_button_press_signal): New API
	(Terminal::Priv::Priv): Move code into a new method init_body, and call it
	along with init_actions.
	(Terminal::Priv::init_body): Code moved from Terminal::Priv::Priv.
	(Terminal::Priv::init_actions): New API
	(Terminal::Priv::on_reset_signal): Likewise
	(Terminal::Priv::on_copy_signal): Likewise
	(Terminal::Priv::on_paste_signal): Likewise
	(Terminal::Priv::reset): Likewise
	(Terminal::Priv::copy): Likewise
	(Terminal::Priv::paste): Likewise
	(Terminal::Terminal): Add a new paramater
	* src/uicommon/nmv-terminal.h
	(Terminal::Terminal): Set constructor explicit and add a new parameter.

2011-08-29  Piotr Drąg <piotrdrag@gmail.com>

	Updated POTFILES.in

2011-07-24  Fabien Parent <parent.f@gmail.com>

	New Layout Manager and 3 additionals new layouts
	* configure.ac: Add directives to enable/disable the building of the
	dynamic layout.
	* data/schemas/gconf/nemiver-dbgperspective.schemas: Add new configuration
	keys for the new layouts.
	* data/schemas/gsettings/org.nemiver.gschema.xml: Likewise
	* src/confmgr/nmv-conf-keys.h: Likewise
	* src/confmgr/nmv-gconf-keys-defs.cc: Likewise
	* src/confmgr/nmv-gsettings-keys-defs.c: Likewise
	* src/persp/dbgperspective/Makefile.am: Add new source files
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.cc: New API
	* src/persp/dbgperspective/nmv-dbg-perspective-default-layout.h: Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective-dynamic-layout.cc: Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective-dynamic-layout.h: Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.cc: Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective-two-pane-layout.h: Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.cc: Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective-wide-layout.h: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_layout_changed): New API
	(DBGPerspective::init_perspective_menu_entries): Removed
	(DBGPerspective::register_layouts): New API
	(DBGPerspective::get_source_view_widget): New API
	(DBGPerspective::set_show_context_view): Removed
	(DBGPerspective::set_show_terminal_view): Likewise
	(DBGPerspective::set_show_breakpoints_view): Likewise
	(DBGPerspective::set_show_registers_view): Likewise
	(DBGPerspective::set_show_memory_view): Likewise
	(DBGPerspective::activate_status_view): Removed. Implemented in each Layout.
	(DBGPerspective::Priv::Priv):
	(DBGPerspective::Priv::layout): New API
	(DBGPerspective::on_shutdown_signal): Call the layout's save_configuration
	method.
	(DBGPerspective::on_debugger_running_signal): Check pointer before using it
	(DBGPerspective::on_activate_context_view): Use the new Layout Manager API
	(DBGPerspective::on_activate_target_terminal_view): Likewise
	(DBGPerspective::on_activate_breakpoints_view): Likewise
	(DBGPerspective::on_activate_registers_view): Likewise
	(DBGPerspective::on_activate_memory_view): Likewise
	(DBGPerspective::init_actions): Use Renamed ViewsIndex's elements.
	(DBGPerspective::init_body): Move status views initialization into the new
	Layout API.
	(DBGPerspective::init_signals): Connect signal
	to DBGPerspective::on_layout_changed when the layout has changed.
	(DBGPerspective::bring_source_as_current): Check pointer before using it.
	(DBGPerspective::do_init): Call register_layouts to initialize the layout
	manager.
	(DBGPerspective::get_body): Use the Layout Manager to get the perspective's
	body.
	(DBGPerspective::edit_workbench_menu): Remove comment
	(DBGPerspective::update_file_maps): Check pointer before using it.
	(DBGPerspective::edit_preferences): Adapt to the new PreferencesDialog's
	constructor prototype.
	(DBGPerspective::layout_changed_signal): New API
	(DBGPerspective::add_views_to_layout): New API
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(DBGPerspective::get_source_view_widget): New API
	(DBGPerspective::get_conf_mgr): Add the method to the interface
	(DBGPerspective::layout_changed_signal): New API
	* src/persp/dbgperspective/nmv-preferences-dialog.cc
	(PreferencesDialog::Priv::Priv): Take the Perspective and the LayoutManager
	as parameters instead of a Workbench.
	(PreferencesDialog::Priv::init): Add the LayoutSelector widget to the
	preferences dialog.
	(PreferencesDialog::Priv::conf_manager): Use the IPerspective to get the
	configuration manager instead of the workbench.
	(PreferencesDialog::PreferencesDialog): Take the Perspective and
	the LayoutManager as parameters instead of a Workbench.
	* src/persp/dbgperspective/nmv-preferences-dialog.h
	(PreferencesDialog::PreferencesDialog): Take the Perspective and
	the LayoutManager as parameters instead of a Workbench.
	* src/persp/dbgperspective/ui/Makefile.am: Remove bodycontainer.ui file
	* src/persp/dbgperspective/ui/bodycontainer.ui: Removed
	* src/persp/dbgperspective/ui/preferencesdialog.ui: Add Layout tab
	* src/persp/nmv-i-perspective.h: Add a signal when the layout changed.
	* src/uicommon/Makefile.am: Add new source files and add new include
	directories.
	* src/uicommon/nmv-layout-manager.cc: New API
	* src/uicommon/nmv-layout-manager.h: Likewise
	* src/uicommon/nmv-layout-selector.cc: Likewise
	* src/uicommon/nmv-layout-selector.h: Likewise
	* src/uicommon/nmv-layout.h: Likewise
	* src/workbench/nmv-workbench.cc
	(Workbench::on_perspective_body_changed_signal): New API
	(Workbench::disconnect_all_perspective_signals): New API
	(Workbench::~Workbench): Disconnect perspectives layout_changed_signal
	(Workbench::do_init): Attach the signal 'layout_changed_signal' when
	the layout changed to the Workbench::on_perspective_layout_changed_signal
	method.

2011-08-21  Dodji Seketeli <dodji@gnome.org>

	657021 Wrong behaviour enlarging var inspector
	* src/persp/dbgperspective/ui/varinspectordialog.ui: Don't expand
	variablenameentry ComboBox when its parent expands.  Likewise for
	the vbox1 ancestor containing widget.

2011-07-24  Fabien Parent <parent.f@gmail.com>

	Remove unused status widgets
	* src/persp/dbgperspective/menus/menus.xml: Remove commands, errors,
	and target output menu items.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::Priv::Priv): Stop initializing commands, errors,
	and target output datas.
	(DBGPerspective::on_show_commands_action): Removed
	(DBGPerspective::on_show_errors_action): Removed
	(DBGPerspective::on_show_target_output_action): Removed
	(DBGPerspective::on_insert_in_command_view_signal): Removed
	(DBGPerspective::on_show_command_view_changed_signal): Removed
	(DBGPerspective::on_show_target_output_view_changed_signal): Removed
	(DBGPerspective::on_show_log_view_changed_signal): Removed
	(DBGPerspective::on_debugger_console_message_signal): Removed
	(DBGPerspective::on_debugger_target_output_message_signal): Removed
	(DBGPerspective::on_debugger_log_message_signal): Removed
	(DBGPerspective::on_activate_output_view): Removed
	(DBGPerspective::on_activate_logs_view): Removed
	(DBGPerspective::get_command_view): Removed
	(DBGPerspective::get_command_view_scrolled_win): Removed
	(DBGPerspective::get_target_output_view): Removed
	(DBGPerspective::get_target_output_view_scrolled_win): Removed
	(DBGPerspective::get_log_view): Removed
	(DBGPerspective::get_log_view_scrolled_win): Removed
	(DBGPerspective::set_show_command_view): Removed
	(DBGPerspective::set_show_target_output_view): Removed
	(DBGPerspective::set_show_log_view): Removed
	(DBGPerspective::add_text_to_command_view): Removed
	(DBGPerspective::add_text_to_target_output_view): Removed
	(DBGPerspective::add_text_to_log_view): Removed
	(DBGPerspective::show_command_view_signal): Removed
	(DBGPerspective::show_target_output_view_signal): Removed
	(DBGPerspective::show_log_view_signal): Removed
	(DBGPerspective::on_debugger_command_done_signal): Stop updating
	the command view.
	(DBGPerspective::init_perspective_menu_entries): Remove code hiding
	the command, log, and target output view.
	(DBGPerspective::init_actions): Stop initializing the command, log,
	and target output menu entries.
	(DBGPerspective::init_body): Stop initializing the command, log,
	and target output view.
	(DBGPerspective::init_signals): Stop inializing the command, log,
	and target output signals.
	(DBGPerspective::init_debugger_signals): Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(DBGPerspective::add_text_to_command_view): Removed
	(DBGPerspective::add_text_to_target_output_view): Removed
	(DBGPerspective::add_text_to_log_view): Removed

2011-08-22  Fran Dieguez <fran@openhost.es>

	Added galician translations for documentation

2011-08-22  Fran Dieguez <fran@openhost.es>

	Updated Galician translations

2011-08-22  Fran Dieguez <fran@openhost.es>

	Updated Galician translations

2011-08-19  Yuri Kozlov <yuray@komyakino.ru>

	Updated Russian translation

2011-08-05  Kalev Lember <kalevlember@gmail.com>

	Fix build with ghex 2.90.0
	* configure.ac: Depend on gtkhex-3
	* src/uicommon/nmv-hex-document.h:
	* src/uicommon/nmv-hex-editor.[cc,h]: When including gtkhex
	headers, include the files directly without directory prefix,
	because the -I from pkgconfig already specifies the directory.

2011-08-06  Mario Blättermann <mariobl@gnome.org>

	[l10n] Updated German translation

2011-08-06  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2011-08-04  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-08-01  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2011-07-24  Fabien Parent <parent.f@gmail.com>

	Fix typo
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::switch_to_asm): Fix typo

2011-07-13  Fabien Parent <parent.f@gmail.com>

	Add GUI to change the assembly syntax
	* src/persp/dbgperspective/nmv-preferences-dialog.cc
	(PreferencesDialog::Priv::on_asm_flavor_changed_signal): Update
	the disassembly flavor in the configuration.
	(PreferencesDialog::Priv::update_asm_flavor_key): Likewise
	(PreferencesDialog::Priv::on_reload_files_toggled_signal): Initialize
	new widgets.
	(PreferencesDialog::Priv::update_reload_files_keys): Update combobox
	from the configuration.
	* src/persp/dbgperspective/ui/preferencesdialog.ui: New frame for
	the disassembly flavor setting.

2011-07-13  Fabien Parent <parent.f@gmail.com>

	Support user defined assembly syntax
	* data/schemas/gconf/nemiver-dbgperspective.schemas: Add configuration key
	* data/schemas/gsettings/org.nemiver.gschema.xml: Likewise
	* src/confmgr/nmv-conf-keys.h: Likewise
	* src/confmgr/nmv-gconf-keys-defs.cc: Likewise
	* src/confmgr/nmv-gsettings-keys-defs.cc: Likewise
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::launch_gdb_and_set_args): set the disassembly flavor
	(GDBEngine::Priv::read_default_config): read the disassembly flavor from
	the configuration.
	(GDBEngine::Priv::on_conf_key_changed_signal): change the disassembly flavor
	in case of change in the configuration.

2011-07-30  Fabien Parent <parent.f@gmail.com>

	Replace NULL symbol with 0
	* src/common/nmv-buffer.h (Buffer::Buffer): Replace NULL symbol with 0
	* src/common/nmv-conf-manager.cc (Config::~Config): Likewise
	* src/common/nmv-connection.cc
	(ConnectionPriv::ConnectionPriv): Likewise
	(Connection::~Connection): Likewise
	* src/common/nmv-date-utils.cc (get_current_datetime): Likewise
	* src/common/nmv-delete-statement.cc
	(DeleteStatement::~DeleteStatement): Likewise
	* src/common/nmv-dynamic-module.cc
	(DynamicModule::Loader::create_dynamic_module_instance): Likewise
	(DynamicModule::Priv::Priv): Likewise
	* src/common/nmv-insert-statement.cc
	(InsertStatement::~InsertStatement): Likewise
	* src/common/nmv-log-stream.cc
	(OfstreamLogSink::OfstreamLogSink): Likewise
	* src/common/nmv-proc-mgr.cc
	(ProcMgr::get_all_process_list): Likewise
	(ProcMgr::get_process_from_pid): Likewise
	* src/common/nmv-proc-utils.cc (launch_program): Likewise
	* src/common/nmv-safe-ptr.h
	(SafePtr::~SafePtr): Likewise
	(SafePtr::release): Likewise
	* src/common/nmv-scope-logger.cc
	(ScopeLoggerPriv::ScopeLoggerPriv): Likewise
	(ScopeLoggerPriv::~ScopeLoggerPriv): Likewise
	* src/common/nmv-sql-statement.cc (SQLStatement::~SQLStatement): Likewise
	* src/common/nmv-str-utils.cc (hexa_to_int): Likewise
	* src/common/nmv-transaction.cc (Transaction::~Transaction): Likewise
	* src/common/nmv-ustring.cc (UString::hexa_to_int): Likewise
	* src/confmgr/nmv-gconf-mgr.cc
	(GConfMgr::register_namespace): Likewise
	(GConfMgr::get_key_value): Likewise
	(GConfMgr::set_key_value): Likewise
	* src/dbdimpl/sqlite/nmv-sqlite-cnx-drv.cc
	(SqliteCnxDrv::Priv::Priv): Likewise
	(SqliteCnxDrv::Priv::step_cur_statement): Likewise
	(SqliteCnxDrv::get_last_error): Likewise
	(SqliteCnxDrv::execute_statement): Likewise
	(SqliteCnxDrv::close): Likewise
	* src/dbdimpl/sqlite/nmv-sqlite-cnx-mgr-drv.cc
	(SqliteCnxMgrDrv::~SqliteCnxMgrDrv): Likewise
	(SqliteCnxMgrDrv::connect_to_db): Likewise
	* src/langs/nmv-cpp-lexer.cc
	(Lexer::~Lexer): Likewise
	* src/main.cc (parse_command_line): Likewise
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::on_breakpoints_view_button_press_signal): Likewise
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::SlotedButton::SlotedButton): Likewise
	(DBGPerspective::Priv::Priv): Likewise
	(DBGPerspective::get_current_source_editor): Likewise
	(DBGPerspective::update_file_maps): Likewise
	(ScrollTextViewToEndClosure::ScrollTextViewToEndClosure): Likewise
	* src/uicommon/nmv-terminal.cc (Terminal::Priv::init_pty): Likewise
	* src/workbench/nmv-workbench.cc
	(Workbench::on_contents_menu_item_action): Likewise
	(Workbench::get_perspective): Likewise

2011-07-26  Fabien Parent <parent.f@gmail.com>

	Expand session's treeview
	* src/persp/dbgperspective/ui/savedsessionsdialog.ui: Expand
	session's treeview

2011-07-30  Fabien Parent <parent.f@gmail.com>

	Apply the GNOME 3 style on the toolbar
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_toolbar): Apply the GNOME 3 style on the toolbar

2011-07-15  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2011-06-12  Fabien Parent <parent.f@gmail.com>

	Fix typo
	* src/langs/nmv-cpp-ast.cc (UnqualifiedOpFuncID::to_string): Fix typo

2011-06-11  Dodji Seketeli <dodji@gnome.org>

	Fix VarsTreeView memory management
	* src/persp/dbgperspective/nmv-vars-treeview.h
	(VarsTreeView::create): Change return type from a SafePtr to a
	bare VarsTreeView* pointer.
	* src/persp/dbgperspective/nmv-vars-treeview.cc
	(VarsTreeView::create): Likewise.  Return a VarsTreeView* now.
	The caller has either to call Gtk::manage on the result of
	VarsTreeView::create or delete it by hand.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::tree_view): Change the type of this
	member from a SafePtr to a bare VarsTreeView* pointer.
	(LocalVarsInspector::Priv::Priv): Initialize
	LocalVarsInspector::Priv::tree_view with the result of
	VarsTreeView passed to Gtk::manage.  Avoid doing the (wrong)
	tree_view.reference() dance I was doing before.
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.cc
	(GlobalVarsInspectorDialog::Priv::tree_view): Change the type of
	this member from a SafePtr to a bare VarsTreeView* pointer.
	* src/uicommon/nmv-dialog.cc (Dialog::Priv::Priv): Fix indentation.

2011-06-11  Dodji Seketeli <dodji@gnome.org>

	Restore layout for variable inspector widget
	* src/persp/dbgperspective/ui/varinspectordialog.ui: Don't set any
	default size for the dialog.

2011-06-08  Fabien Parent <parent.f@gmail.com>

	Uniformize the header guard name.
	* src/common/nmv-address.h: use the file name as header guard name.
	* src/common/nmv-api-macros.h: Likewise
	* src/common/nmv-asm-instr.h: Likewise
	* src/common/nmv-asm-utils.h: Likewise
	* src/common/nmv-buffer.h: Likewise
	* src/common/nmv-conf-manager.h: Likewise
	* src/common/nmv-connection-manager.h: Likewise
	* src/common/nmv-connection.h: Likewise
	* src/common/nmv-date-utils.h: Likewise
	* src/common/nmv-delete-statement.h: Likewise
	* src/common/nmv-dynamic-module.h: Likewise
	* src/common/nmv-env.h: Likewise
	* src/common/nmv-exception.h: Likewise
	* src/common/nmv-i-connection-driver.h: Likewise
	* src/common/nmv-i-connection-manager-driver.h: Likewise
	* src/common/nmv-i-input-stream.h: Likewise
	* src/common/nmv-initializer.h: Likewise
	* src/common/nmv-insert-statement.h: Likewise
	* src/common/nmv-loc.h: Likewise
	* src/common/nmv-parsing-utils.h: Likewise
	* src/common/nmv-plugin.h: Likewise
	* src/common/nmv-range.h: Likewise
	* src/common/nmv-safe-ptr.h: Likewise
	* src/common/nmv-scope-logger.h: Likewise
	* src/common/nmv-sequence.h: Likewise
	* src/common/nmv-sql-statement.h: Likewise
	* src/common/nmv-tools.h: Likewise
	* src/common/nmv-transaction.h: Likewise
	* src/common/nmv-ustring.h: Likewise
	* src/dbdimpl/sqlite/nmv-sqlite-cnx-drv.h: Likewise
	* src/dbdimpl/sqlite/nmv-sqlite-cnx-mgr-drv.h: Likewise
	* src/dbgengine/nmv-i-debugger.h: Likewise
	* src/langs/nmv-cpp-ast.h: Likewise
	* src/langs/nmv-cpp-lexer-utils.h: Likewise
	* src/langs/nmv-cpp-lexer.h: Likewise
	* src/persp/dbgperspective/nmv-call-function-dialog.h: Likewise
	* src/persp/dbgperspective/nmv-load-core-dialog.h: Likewise
	* src/persp/dbgperspective/nmv-open-file-dialog.h: Likewise
	* src/persp/dbgperspective/nmv-run-program-dialog.h: Likewise
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.h: Likewise
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.h: Likewise
	* src/persp/dbgperspective/nmv-set-jump-to-dialog.h: Likewise
	* src/persp/nmv-i-perspective.h: Likewise
	* src/uicommon/nmv-dialog.h: Likewise
	* src/uicommon/nmv-locate-file-dialog.h: Likewise
	* src/uicommon/nmv-source-editor.h: Likewise
	* src/uicommon/nmv-ui-utils.h: Likewise

2011-06-08  Fabien Parent <parent.f@gmail.com>

	Remove not implemented constructor
	* src/persp/dbgperspective/nmv-preferences-dialog.h: Remove not
	implemented constructor.

2011-06-09  Dodji Seketeli <dodji@seketeli.org>

	Reference the local var inspector view
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::Priv): Add a reference on the tree_view
	component we have here otherwise we'd unreference it after gtk got
	rid of the widget it has.

2011-06-09  Dodji Seketeli <dodji@seketeli.org>

	Handle breakpoints added via GDB scripts
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::set_breakpoints): Handle breakpoints that
	have been set via e.g, GDB scripts.  That is, breakpoints for
	which we didn't get singular notification for.

2011-06-09  Dodji Seketeli <dodji@seketeli.org>

	Avoid gratuitously resetting the dbg command queue
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): Don't reset the command queue
	here, as we don't mean to re-start the inferior at this point.

2011-06-09  Dodji Seketeli <dodji@seketeli.org>

	Add some logging to nmv-gdb-engine.cc
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::Priv::issue_command)
	(OnBreakpointHandler::do_handle, GDBEngine::load_program): Add
	some logging.

2011-06-09  Dodji Seketeli <dodji@seketeli.org>

	Properly mark the GDB line as busy
	* src/dbgengine/nmv-gdb-engine.cc (issue_command): Mark the line
	as busy when we send data over the wire.  The line is later marked
	non-busy when we receive the proper marker from GDB.
	(launch_gdb_and_set_args): Don't send data over the wire if it's
	busy.
	(on_gdb_stdout_has_data_signal): Slight indentation cleanup.

2011-05-17  Kalev Lember <kalev@smartlink.ee>

	Port to gtkmm 3.0 and gtksourceviewmm 3.0
	* configure.ac: Require gtkmm-3.0, gtksourceviewmm-3.0,
	gtk+-3.0, and vte-2.90. gtkhex still needs porting to GTK+ 3;
	require gtkhex-2.90 to avoid pulling in the gtk2-only version.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::build_tree_view): Use the "draw" signal
	instead of the "expose-event" signal that was removed in GTK+ 3.
	(BreakpointsView::Priv::on_expose_event): Renamed to
	BreakpointsView::Priv::on_draw_signal.
	(BreakpointsView::Priv::on_draw_signal): Likewise.
	* src/persp/dbgperspective/nmv-call-function-dialog.cc
	(CallFunctionDialog::Priv): Use Gtk::ComboBox instead of
	Gtk::ComboBoxEntry.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::on_selection_changed_signal): Adapt to gtkmm
	3.0 changes to use std::vector instead of std::list.
	(CallStack::Priv::build_widget): Use the "draw" signal instead
	of the "expose-event" signal that was removed in GTK+ 3.
	(CallStack::Priv::on_expose_event_signal): Renamed to
	CallStack::Priv::on_draw_signal.
	(CallStack::Priv::on_draw_signal): Likewise.
	* src/persp/dbgperspective/nmv-file-list.[cc,h]
	(FileListView::get_selected_filenames): Adapt to gtkmm 3.0
	changes to use std::vector instead of std::list.
	(FileListView::FileListView): gtkmm 3.0 no longer has
	Gtk::Menu_Helpers. Port to manually set up Gtk::MenuItems.
	(FileListView::get_selected_filenames):
	(FileList::get_filenames): Adapt to gtkmm 3.0 changes to use
	std::vector instead of std::list.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::init_graphical_signals): Use the
	"draw" signal instead of the "expose-event" signal that was
	removed in GTK+ 3.
	(LocalVarsInspector::Priv::on_expose_event_signal): Renamed to
	LocalVarsInspector::Priv::on_draw_signal.
	(LocalVarsInspector::Priv::on_draw_signal): Likewise.
	* src/persp/dbgperspective/nmv-open-file-dialog.[cc,h]:
	(OpenFileDialog::Priv::on_radio_button_toggled): Use foreach and
	Gtk::VBox::remove to clear the list of vbox's children, as
	children ().clear () no longer works with gtkmm 3.0.
	(OpenFileDialog::Priv::validate_source_files):
	(OpenFileDialog::Priv::get_filenames):
	(OpenFileDialog::get_filenames): Adapt to gtkmm 3.0 changes to
	use std::vector instead of std::list.
	* src/persp/dbgperspective/nmv-registers-view.cc
	(RegistersView::Priv::build_tree_view): Call
	Gtk::TreeViewColumn::get_first_cell () instead of the removed
	Gtk::TreeViewColumn::get_first_cell_renderer ().  Also use the
	"draw" signal instead of the "expose-event" signal that was
	removed in GTK+ 3.
	(RegistersView::Priv::on_expose_event_signal): Renamed to
	RegistersView::Priv::on_draw_signal.
	(RegistersView::Priv::on_draw_signal): Likewise; also adapt to
	gtk-style-context changes.
	* src/persp/dbgperspective/nmv-thread-list.cc
	(ThreadList::Priv::connect_to_widget_signals): Use the "draw"
	signal instead of the "expose-event" signal that was removed in
	GTK+ 3.
	(ThreadList::Priv::on_expose_event_signal): Renamed to
	ThreadList::Priv::on_draw_signal.
	(ThreadList::Priv::on_draw_signal): Likewise.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc
	(VarInspectorDialog::Priv):
	(VarInspectorDialog::Priv::build_dialog): Adapt to
	Gtk::ComboBoxEntry removal.
	* src/persp/dbgperspective/nmv-variables-utils.cc
	(update_a_variable_node): Adapt to gtk-style-context changes.
	* src/persp/dbgperspective/nmv-vars-treeview.cc
	(VarsTreeView::VarsTreeView): Call
	Gtk::TreeViewColumn::get_first_cell () instead of the removed
	Gtk::TreeViewColumn::get_first_cell_renderer ().
	* src/persp/dbgperspective/ui/callfunctiondialog.ui:
	* src/persp/dbgperspective/ui/findtextdialog.ui:
	* src/persp/dbgperspective/ui/varinspectordialog.ui: Adapt to
	GtkComboBoxEntry removal.
	* src/uicommon/nmv-dialog.cc (Dialog::Priv::Priv): Removed a
	call to hide () that prevented all dialogs from showing.
	* src/uicommon/nmv-popup-tip.cc (PopupTip::Priv::Priv): Removed
	a call to ensure_style () which no longer exists in gtkmm 3.0.
	* src/uicommon/nmv-terminal.[cc,h]
	(Terminal::Priv):
	(Terminal::Priv::Priv):
	(Terminal::adjustment): Wrap the Gtk::Adjustment in a
	Glib::RefPtr and fix up its reference counting.
	* src/workbench/nmv-workbench.cc
	(Workbench::on_about_menu_item_action):
	(Workbench::do_init): Adapt to gtkmm 3.0 changes to use
	std::vector instead of std::list.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Adapt
	includes and using namespace directive for gtksourceviewmm
	renames.
	(PopupScrolledWindow::on_size_request): Renamed to
	PopupScrolledWindow::get_preferred_height_vfunc.
	(PopupScrolledWindow::get_preferred_height_vfunc): Override the
	virtual get_preferred_height_vfunc instead of the removed
	on_size_request.
	(DBGPerspective::on_switch_page_signal): GtkNotebookPage was
	removed in GTK+ 3; use Gtk::Widget instead in the signal handler.
	(DBGPerspective::create_source_editor):
	(DBGPerspective::load_asm):
	(DBGPerspective::Priv::modify_source_editor_style):
	(DBGPerspective::Priv::load_file):
	(DBGPerspective::on_conf_key_changed_signal):
	(DBGPerspective::get_or_append_asm_source_editor):
	(DBGPerspective::read_default_config):
	(DBGPerspective::popup_source_view_contextual_menu):
	(DBGPerspective::edit_workbench_menu):
	(DBGPerspective::create_source_editor):
	(DBGPerspective::open_file_real):
	(DBGPerspective::get_asm_title):
	(DBGPerspective::open_asm):
	(DBGPerspective::switch_to_asm):
	(DBGPerspective::switch_to_source_code):
	(DBGPerspective::reload_file):
	(DBGPerspective::append_breakpoint):
	(DBGPerspective::set_breakpoint_using_dialog):
	(DBGPerspective::inspect_variable):
	(nemiver_common_create_dynamic_module_instance): Adapt to
	gtksourceviewmm namespace and symbol renames.
	(DBGPerspective::modify_source_editor_style): Use
	override_font () instead of the deprecated modify_font ().
	(DBGPerspective::on_motion_notify_event_signal): Adapt to GTK+ 3
	changes and get pointer coordinates through device_manager.
	(DBGPerspective::on_debugger_running_signal): Adapt to
	set_cursor's changes to take a RefPtr.
	(DBGPerspective::add_stock_icon): Adapt to Gtk::IconFactory::add
	changes to take a RefPtr to Gtk::IconSet.
	(DBGPerspective::append_source_editor): Use CSS styling and
	style-context.
	(DBGPerspective::create_source_editor): Adapt to gtkmm 3.0
	changes to use override_font instead of modify_font.
	(DBGPerspective::open_file): Adapt to gtkmm 3.0 changes to use
	std::vector instead of std::list.
	* src/persp/dbgperspective/nmv-find-text-dialog.cc: Adapt
	includes and using namespace directive for gtksourceviewmm
	renames.
	(FindTextDialog::Priv::Priv):
	(FindTextDialog::Priv::get_search_text_combo): Adapt to GTK+ 3
	GtkComboBoxEntry removal.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc: Adapt
	includes for gtksourceviewmm renames.
	(PreferencesDialog::Priv::init): Adapt to gtksourceviewmm symbol
	and namespace renames; adapt to gtkmm 3.0 changes to use
	std::vector instead of std::list.
	* src/uicommon/nmv-source-editor.[cc,h]: Adapt includes and using
	namespace directives for gtksourceviewmm renames.
	(SourceView::SourceView):
	(SourceEditor::Priv::NonAssemblyBufContext):
	(SourceEditor::Priv::AssemblyBufContext):
	(SourceEditor::Priv::register_assembly_source_buffer):
	(SourceEditor::Priv::register_non_assembly_source_buffer):
	(SourceEditor::Priv::get_buffer_type):
	(SourceEditor::Priv::get_markers):
	(SourceEditor::Priv::get_smallest_range_containing_address):
	(SourceEditor::Priv::address_2_line):
	(SourceEditor::Priv::init_common_buffer_signals):
	(SourceEditor::Priv::init_assembly_buffer_signals):
	(SourceEditor::Priv::init_non_assembly_buffer_signals):
	(SourceEditor::Priv::Priv):
	(SourceEditor::SourceEditor):
	(SourceEditor::source_view):
	(SourceEditor::set_visual_breakpoint_at_line):
	(SourceEditor::remove_visual_breakpoint_from_line):
	(SourceEditor::clear_decorations):
	(SourceEditor::is_visual_breakpoint_set_at_line):
	(SourceEditor::do_search):
	(SourceEditor::setup_buffer_mime_and_lang):
	(SourceEditor::load_file):
	(SourceEditor::add_asm):
	(SourceEditor::load_asm):
	(SourceEditor::current_address):
	(SourceEditor::register_non_assembly_source_buffer):
	(SourceEditor::scroll_to_address):
	(SourceEditor::assembly_buf_addr_to_line):
	(SourceEditor::assembly_buf_line_to_addr): Adapt to
	gtksourceviewmm namespace and symbol renames.
	(SourceView::init_font): Use override_font instead of
	modify_font that was removed in gtkmm 3.0.
	(SourceEditor::Priv::register_breakpoint_marker_type): Adapt to
	gtksourceviewmm 3.0 changes for setting icon.
	(SourceEditor::init): Adapt to gtksourceviewmm 3.0 changes to
	setting icon and mark category.
	(SourceEditor::do_search): Use TextIter and text search flags
	from Gtk:: namespace instead of the equivalents that were
	removed from gtksourceviewmm.
	(SourceEditor::setup_buffer_mime_and_lang): Adapt to
	gtksourceviewmm 3.0 changes to use std::vector instead of
	std::list.

2011-05-09  Kalev Lember <kalevlember@gmail.com>

	Popup var inspector size requisition code rework
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(PopupScrolledWindow::on_size_request): New virtual function for
	clipping the height of the ScrolledWindow.
	(DBGPerspective::on_popup_var_insp_size_request): Removed the
	function; replaced by PopupScrolledWindow::on_size_request.
	(DBGPerspective::pack_popup_var_inspector_in_new_scr_win):
	Removed the function.
	(DBGPerspective::get_popup_tip): Use the new
	PopupScrolledWindow class.
	* src/uicommon/nmv-popup-tip.cc (PopupTip::Priv::Priv): Set the
	window as not resizable so its size would shrink back along with
	its contents.

2011-05-09  Kalev Lember <kalevlember@gmail.com>

	Removed has-separator property
	* src/persp/dbgperspective/ui/callfunctiondialog.ui:
	* src/persp/dbgperspective/ui/chooseoverloadsdialog.ui:
	* src/persp/dbgperspective/ui/findtextdialog.ui:
	* src/persp/dbgperspective/ui/globalvarsinspector.ui:
	* src/persp/dbgperspective/ui/loadcoredialog.ui:
	* src/persp/dbgperspective/ui/openfiledialog.ui:
	* src/persp/dbgperspective/ui/preferencesdialog.ui:
	* src/persp/dbgperspective/ui/proclistdialog.ui:
	* src/persp/dbgperspective/ui/remotetargetdialog.ui:
	* src/persp/dbgperspective/ui/runprogramdialog.ui:
	* src/persp/dbgperspective/ui/savedsessionsdialog.ui:
	* src/persp/dbgperspective/ui/setbreakpointdialog.ui:
	* src/persp/dbgperspective/ui/setjumptodialog.ui:
	* src/persp/dbgperspective/ui/varinspectordialog.ui:
	* src/persp/dbgperspective/ui/watchpointdialog.ui:
	* ui/locatefiledialog.ui: Removed has-separator property which
	is deprecated since GTK+ 2.22 and removed in GTK+ 3.

2011-05-09  Kalev Lember <kalevlember@gmail.com>

	Removed an unused forward declaration
	* src/persp/dbgperspective/nmv-dbg-perspective.h: Removed
	gtksourceview::SourceBuffer forward declaration.

2011-05-09  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2011-05-10  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.

2011-05-08  Dodji Seketeli <dodji@seketeli.org>

	Fix update-changelog for building out of srcdir
	* Makefile.am (update-changelog):  Refer to the absolute location
	of gitlog2gnucl and ChangeLog files.

2011-05-08  Dodji Seketeli <dodji@seketeli.org>

	Update NEWS file for 0.8.2
	* NEWS: Update changes for 0.8.2

2011-05-08  Dodji Seketeli <dodji@seketeli.org>

	Update Makefile.am's release text.
	* Makefile.am: Update release text.

2011-05-08  Dodji Seketeli <dodji@seketeli.org>

	Add a description to Nemiver's doap file
	* nemiver.doap: Add a description element.

2011-05-08  Dodji Seketeli <dodji@seketeli.org>

	Fix configuration keys' description wording
	* data/schemas/gsettings/org.nemiver.gschema.xml: Fix various
	wording nits.
	* data/schemas/gconf/nemiver-dbgperspective.schemas: Likewise.

2011-05-08  Dodji Seketeli <dodji@seketeli.org>

	Use Automake GSettings magic to support DESTDIR
	* data/schemas/gsettings/Makefile.am: Remove custom makefile
	rules.  Use gsettings_SCHEMAS and @GSETTINGS_RULES@.

2011-05-08  Dodji Seketeli <dodji@seketeli.org>

	Fix gsettings configure test error
	* configure.ac:  Use /bin/false in lieu of [0].

2011-05-07  Mario Blättermann <mariobl@gnome.org>

	[l10n] Updated German translation

2011-05-07  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-04-25  Dodji Seketeli <dodji@seketeli.org>

	Various style cleanups
	* src/common/nmv-loc.h: Remove various useless spaces.
	* src/common/nmv-safe-ptr.h (DefaultRef::operator()):  Make the
	parameter be unnamed as it's unused.
	(operator=, swap): Re-indent.
	* src/confmgr/nmv-i-conf-mgr.h (load_iface_and_confmgr): Shorten
	long line.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_actions)
	(DBGPerspective::set_breakpoint_using_dialog): Likewise.
	* src/workbench/nmv-workbench.cc (Workbench::do_init): Likewise.

2011-04-21  Dodji Seketeli <dodji@seketeli.org>

	560235 Initial support of "jump to"
	* src/dbgengine/nmv-i-debugger.h (IDebugger::jump_to_position):
	New entry point.
	(IDebugger::set_breakpoint, IDebugger::enable_breakpoint): New
	overloads taking callback slots.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::jump_to_position)
	(GDBEngine::enable_breakpoint): Declare these functions.
	* src/dbgengine/nmv-gdb-engine.cc
	(OnBreakpointHandler::do_handle): Support callback slots for
	'-break-enable' and 'jump-to-position'.
	(GDBEngine::jump_to_position, location_to_string): Define new
	functions.
	(GDBEngine::enable_breakpoint): Likewise.  Rewrite the other
	overload in terms of this one.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::current_location): New overload that returns a
	pointer to const Loc.
	* src/uicommon/nmv-source-editor.h: Likewise.
	* src/persp/nmv-set-jump-to-dialog.h: New file.
	* rc/persp/nmv-set-jump-to-dialog.cc: Likewise.
	* src/persp/dbgperspective/ui/setjumptodialog.ui: Likewise.
	* src/persp/dbgperspective/ui/Makefile.am: Add setjumptodialog.ui
	to build system.
	* src/persp/dbgperspective/Makefile.am: Add
	nmv-set-jump-to-dialog.h and nmv-set-jump-to-dialog.cc to the
	build system.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_jump_to_current_location_action)
	(DBGPerspective::on_jump_and_break_to_current_location_action)
	(DBGPerspective::on_break_before_jump)
	(DBGPerspective::do_jump_to_current_location)
	(DBGPerspective::do_jump_and_break_to_current_location)
	(DBGPerspective::jump_to_location)
	(DBGPerspective::on_jump_to_location_action)
	(DBGPerspective::do_jump_and_break_to_location)
	(DBGPerspective::jump_to_location_from_dialog)
	(DBGPerspective::is_breakpoint_set_at_location): New functions.
	(DBGPerspective::on_debugger_breakpoints_set_signal): Minor style
	cleanup.
	(DBGPerspective::init_actions): Add
	JumpToCurrentLocationMenuItemAction and
	JumpAndBreakToCurrentLocationMenuItemAction actions.  Add a menu
	item to display a dialog to jump to a given location.
	(DBGPerspective::get_contextual_menu): Add two new menu items for
	actions JumpToCurrentLocationMenuItemAction and
	(DBGPerspective::is_breakpoint_set_at_address): Add a boolean
	output parameter to get the enable-ness of the breakpoint.
	(DBGPerspective::get_breakpoint): New overload that takes a
	location in argument.
	(DBGPerspective::is_breakpoint_set_at_line): Add comment.
	(DBGPerspective::toggle_breakpoint): Adjust for the new signature
	of is_breakpoint_set_at_address.
	JumpAndBreakToCurrentLocationMenuItemAction.
	* src/persp/dbgperspective/menus/menus.xml: Add add menu item to
	jump to a specified location.
	* po/POTFILES.in: Add
	src/persp/dbgperspective/ui/setjumptodialog.ui to the list of
	files containing translatable strings.

2011-04-27  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2011-04-27  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2011-04-26  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-04-25  Mario Blättermann <mariobl@gnome.org>

	[l10n] Updated German translation

2011-04-25  Dodji Seketeli <dodji@seketeli.org>

	Fixlets in setbreakpointdialog.ui
	* src/persp/dbgperspective/ui/setbreakpointdialog.ui:  Center the
	dialog on its parent.  Fix some spelling.

2011-04-24  Dodji Seketeli <dodji@seketeli.org>

	Fix a crash in confmgr
	* src/confmgr/nmv-i-conf-mgr.h (load_iface_and_confmgr): Set the
	loaded configuration manager into the other loaded interface so
	that the lifetime of the configuration manager is as longer as the
	lifetime of the other loaded interface object.  Added comment.
	* src/workbench/nmv-i-workbench.h (IWorkbench::do_init): New
	pure virtual function.
	* src/workbench/nmv-workbench.cc
	(Workbench::set_configuration_manager): New
	function.
	(Workbench::do_init): New function.  Use the new
	Workbench::set_configuration_manager.
	(Workbench::get_configuration_manager): Factorize to use the new
	Workbench::set_configuration_manager.

2011-04-25  Dodji Seketeli <dodji@seketeli.org>

	Avoid reading freed memory
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::delete_visual_breakpoint): Don't read a map
	element after it has been freed.

2011-04-24  Dodji Seketeli <dodji@seketeli.org>

	Fix memory corruption in SourceEditor
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::clear_decorations): Don't erase members of a map
	while iterating over it.

2011-04-21  Dodji Seketeli <dodji@seketeli.org>

	Introduce Loc (code location) type
	* src/common/Makefile.am: Add nmv-loc.h to build system.
	* src/common/nmv-loc.h: New file.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::set_breakpoint):
	New overload that takes an instance of Loc.
	* src/dbgengine/nmv-debugger-utils.h (null_default_slot)
	(null_disass_slot, null_breakpoints_slot): New declarations.
	* src/dbgengine/nmv-debugger-utils.cc (null_default_slot)
	(null_disass_slot, null_breakpoints_slot): New definitions.
	* src/dbgengine/nmv-gdb-engine.cc (location_to_string): New
	helpers to serialize instance of Loc.
	(OnBreakpointHandler::handle): Call the argument callback slot
	when the command was "set-breakpoint".
	(GDBEngine::set_breakpoint): New overload definition that takes an
	instance of Loc in argument, as well as callback slot.
	(null_disass_slot): Remove this from here.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::set_breakpoint): New
	overload declaration.

2011-04-21  Dodji Seketeli <dodji@gnome.org>

	Emit one IDebugger::breakpoint_set_signal per BP
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::breakpoints_list_signal): Renamed
	IDebugger::breakpoints_set_signal into this.
	(IDebugger::breakpoint_set_signal): New interface.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::breakpoints_list_signal): Renamed
	GDBEngine::breakpoint_set_signal into this.
	(GDBEngine::breakpoint_set_signal): New interface.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::breakpoints_list_signal): Renamed
	GDBEngine::breakpoints_set_signal into this.
	(GDBEngine::breakpoint_set_signal): New definition.
	(OnBreakpointHandler::do_handle): Emit
	IDebugger::breakpoint_set_signal whenever a breakpoint is set.
	Avoid emitting IDebugger::breakpoints_list_signal when a
	breakpoint is set.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointView::Priv::Priv): Update for rename to
	IDebugger::breakpoints_list_signal.  Connect to the new
	IDebugger::breakpoint_set_signal.
	(BreakpointView::Priv::on_debugger_breakpoint_set_signal): New
	definition.
	(BreakpointView::Priv::on_debugger_breakpoints_list_signal):
	Renamed BreakpointView::Priv::on_debugger_breakpoints_set_signal
	into this.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_breakpoint_set_signal): New
	definition.
	(DBGPerspective::on_debugger_breakpoints_list_signal): Renamed
	DBGPerspective::on_debugger_breakpoints_set_signal into this.
	(DBGPerspective::append_breakpoint): Remove useless first
	parameter from this.
	(DBGPerspective::init_debugger_signals): Connect to the new
	IDebugger::breakpoint_set_signal.  Update for renaming into
	IDebugger::breakpoints_list_signal.
	* tests/test-breakpoint.cc (test_main): Update for renaming into
	IDebugger::breakpoints_list_signal.
	* tests/test-var-path-expr.cc (test_main): Likewise.
	* tests/test-watchpoint.cc (test_main): Likewise.

2011-04-21  Dodji Seketeli <dodji@seketeli.org>

	Style cleanup
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::set_catch): Add
	Space before parenthesis.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(build_tree_view): Properly align function name, indent some
	statements.
	(should_process_now, set_breakpoints, add_breakpoints)
	(breakpoint_list_has_id, find_breakpoint_in_model)
	(update_breakpoint, append_breakpoint)
	(finish_handling_debugger_stopped_event, load_menu)
	(get_breakpoints_menu, popup_breakpoints_view_menu, init_actions)
	(erase_breakpoint, on_debugger_breakpoints_list_signal)
	(on_debugger_stopped_signal)
	(on_debugger_breakpoint_deleted_signal)
	(on_treeview_selection_changed, on_breakpoint_go_to_source_action)
	(on_expose_event, on_key_press_event)
	(on_breakpoint_enable_toggled, on_countpoint_toggled)
	(on_breakpoint_ignore_count_edited)
	(on_breakpoint_condition_edited): Properly indent function name.

2011-04-10  Lele Long <schemacs@gmail.com>

	Update Simplified Chinese translaton

2011-04-10  Dodji Seketeli <dodji@seketeli.org>

	Update HACKING documentation
	* README: Add space between each paragraph and its header.
	* README.git-commit-messages.txt: Renamed
	git-commit-messages.README into this.  Re-flowed paragraphs.
	* README.hacking.txt: New file.

2011-04-10  Dodji Seketeli <dodji@seketeli.org>

	Update the INSTALL file.
	* INSTALL: update.

2011-04-10  Dodji Seketeli <dodji@seketeli.org>

	Fix configury when gsettings is not present
	* configure.ac: When gsettings is not present, make sure
	gsettingsschemadir is set to a dummy value, otherwise the Automake
	complains for data/schemas/gsettings/Makefile.am.

2011-04-04  Dodji Seketeli <dodji@seketeli.org>

	Fix a crash in previous commit
	* src/confmgr/nmv-gsettings-mgr.cc
	(GSettingsMgr::register_namespace): Bind the namespace name
	to the parameter of the signal handler by value; not by
	reference.  This avoids a crash when the signal slots later try to
	poke at the namespace parameter.
	(GSettingsMgr::set_key_value): Fix thinko.

2011-03-31  Fabien Parent <parent.f@gmail.com>

	Add a GSettings implementation for IConfMgr
	* configure.ac: Auto-detect gsettings dependencies.  Add a
	--enable-gsettings.  By default, switch to gsettings if all its
	dependencies are present; switch to gconf otherwise.  Define
	preprocessor macros WITH_GSETTINGS and CONFIG_MGR_MODULE_NAME.
	* data/Makefile.am: Declare a new schema sub-directory.
	* data/schemas/gconf/Makefile.am: New file.
	* data/schemas/gconf/nemiver-dbgperspective.schemas: Moved
	src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas
	into this.
	* data/schemas/gconf/nemiver-workbench.schemas: Moved
	src/workbench/schemas/nemiver-workbench.schemas into this.
	* data/schemas/gsettings/Makefile.am: New file.
	* data/schemas/gsettings/org.nemiver.gschema.xml: Likewise.
	* src/confmgr/Makefile.am: Build either the gsettings backend or
	the gconf one.
	* src/confmgr/gsettingsmgr.conf.in: New file.
	* src/confmgr/nmv-conf-keys.h (CONF_NAMESPACE_NEMIVER)
	(CONF_NAMESPACE_DESKTOP_INTERFACE): Declare new keys.
	(CONF_KEY_NEMIVER_CALLSTACK_EXPANSION_CHUNK): Moved this here from
	nmv-call-stack.cc.
	(CONF_KEY_NEMIVER_WINDOW_WIDTH)
	(CONF_KEY_NEMIVER_WINDOW_HEIGHT)
	(CONF_KEY_NEMIVER_WINDOW_POSITION_X)
	(CONF_KEY_NEMIVER_WINDOW_POSITION_Y)
	(CONF_KEY_NEMIVER_WINDOW_MAXIMIZED)
	(CONF_KEY_NEMIVER_WINDOW_MINIMUM_WIDTH)
	(CONF_KEY_NEMIVER_WINDOW_MINIMUM_HEIGHT): Move these declarations
	here from nmv-workbench.cc.
	* src/confmgr/nmv-gconf-keys-defs.cc: Renamed this from
	src/confmgr/nmv-conf-keys.cc.
	(CONF_NAMESPACE_NEMIVER)
	(CONF_NAMESPACE_DESKTOP_INTERFACE): Define these new keys.
	(CONF_KEY_NEMIVER_WINDOW_WIDTH)
	(CONF_KEY_NEMIVER_WINDOW_HEIGHT)
	(CONF_KEY_NEMIVER_WINDOW_POSITION_X)
	(CONF_KEY_NEMIVER_WINDOW_POSITION_Y)
	(CONF_KEY_NEMIVER_WINDOW_MAXIMIZED)
	(CONF_KEY_NEMIVER_WINDOW_MINIMUM_WIDTH)
	(CONF_KEY_NEMIVER_WINDOW_MINIMUM_HEIGHT): Move these definitions
	here from nmv-workbench.cc.
	* src/confmgr/nmv-gconf-mgr.cc: Include nmv-conf-keys.h.
	(GConfMgr::m_value_changed_signal):  Adjust the type of this signal.
	(GConfMgr::set_key_dir_to_notify, GConfMgr::add_key_to_notify):
	Remove.
	(GConfMgr::get_default_namespace, GConfMgr::register_namespace):
	New functions.
	(GConfMgr::{set,get}_key_value): Add a namespace parameter.
	(GConfMgr::value_changed_signal): Remove the Value parameter.  Add
	a namespace parameter.  Ignore the namespace parameter in the
	definition.
	(client_notify_func): Don't pass any value argument to
	GConfMgr::value_change_signal anymore.
	* src/confmgr/nmv-gsettings-keys-defs.cc: New file.
	* src/confmgr/nmv-gsettings-mgr.cc: Likewise.
	* src/confmgr/nmv-i-conf-mgr.h: Include config.h.
	(IConfMgr::Value): Remove typedef.
	(IConfMgr::set_key_dir_to_notify, IConfMgr::add_key_to_notify):
	Remove functions.
	(IConfMgr::get_default_namespace): New function.
	(IConfMgr::{get,set}_key_value): Add a namespace parameter, with a
	default argument "".
	(load_iface_and_confmgr): New function template.
	* src/dbgengine/nmv-debugger-utils.cc
	(load_debugger_iface_with_confmgr): Renamed
	load_debugger_iface_with_gconf into this.  Use the new
	load_iface_and_confmgr instead of loading the gconf backend of
	IConfMgr systematically.  Use the new
	IConfMgr::register_namespace.
	* src/dbgengine/nmv-debugger-utils.h
	(load_debugger_iface_with_confmgr): Renamed
	load_debugger_iface_with_gconf into this.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::on_conf_key_changed_signal): Adjust signature.
	Get the configuration value from the conf_mgr as it's not passed
	by parameter anymore.
	* src/main.cc: Include nmv-i-conf-mgr.h
	(main): Use the new load_iface_and_confmgr to load the workbench.
	* src/persp/dbgperspective/Makefile.am: There is no more schema
	sub-directory to take care about as it got moved under data/.
	* src/persp/dbgperspective/nmv-call-stack.cc: Include
	nmv-conf-keys.h.
	(CONF_KEY_NEMIVER_CALLSTACK_EXPANSION_CHUNK): Moved declaration into
	into nmv-conf-keys.h and the definition into the IConfMgr
	backends.
	(CallStack::Priv::conf_mgr): New member to cache the conf mgr
	here.
	(CallStack::Priv::init_conf):  Cache the conf mgr into the new
	memver conf_mgr.  Don't call conf_mgr->add_key_to_notify anymore.
	(CallStack::Priv::on_config_value_changed_signal): Adjust
	signature.  Get the key from conf_mgr as it's no more passed as a
	parameter.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_conf_key_changed_signal): Likewise.
	(DBGPerspective::read_default_config): Pass
	CONF_NAMESPACE_DESKTOP_INTERFACE argument to the namespace of
	IConfMgr::get_key_value as necessary.
	* src/persp/dbgperspective/schemas/Makefile.am: Moved to under data/.
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas: Likewise.
	* src/workbench/Makefile.am: Don't handle schema (un)install as
	schemas got moved under data/
	* src/workbench/nmv-workbench.cc: Include nmv-conf-keys.h.
	(Workbench::get_configuration_manager): Use
	DynamicModuleManager::load_iface_with_default_manager to load the
	conf mgr.  Use the new IConfMgr::register_namespace API instead of
	the former IConfMgr::set_key_dir_to_notify and IConfMgr::add_key_to_notify.
	* src/workbench/schemas/Makefile.am: Moved under data/.
	* src/workbench/schemas/nemiver-workbench.schemas: Likewise.
	* tests/test-breakpoint.cc (test_main): Use the new
	debugger_utils::load_debugger_iface_with_confmgr
	* tests/test-cpptrait.cc: Likewise.
	* tests/test-deref.cc: Likewise.
	* tests/test-disassemble.cc: Likewise.
	* tests/test-global-variables.cc: Likewise.
	* tests/test-local-vars-list.cc: Likewise.
	* tests/test-overloads.cc: Likewise.
	* tests/test-types.cc: Likewise:
	* tests/test-var-list.cc: Likewise.
	* tests/test-var-path-expr.cc: Likewise.
	* tests/test-var-walker.cc: Likewise.
	* tests/test-varobj-walker.cc: Likewise.
	* tests/test-vars.cc: Likewise.
	* tests/test-watchpoint.cc: Likewise.

2011-04-02  Dodji Seketeli <dodji@seketeli.org>

	Ignore 'current-thread-id' in thread list
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_threads_list): Ignore current-thread-id when
	coming across it.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Dropped compat code with gtksourceviewmm < 2.10
	* configure.ac: Removed checks for gtksourceviewmm-1.0 and
	gtksourceviewmm < 2.10.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::Priv::editor_style)
	(DBGPerspective::Priv::modify_source_editor_style)
	(DBGPerspective::Priv::get_editor_style): Define
	unconditionally.  Remove ifdef WITH_SOURCEVIEWMM2.
	(DBGPerspective::on_conf_key_changed_signal): Use
	SourceBuffer::set_highlight_syntax from ifdef WITH_SOURCEVIEWMM2
	drop use of SourceBuffer::set_highlight.  Also, unconditionally
	handle CONF_KEY_EDITOR_STYLE_SCHEME conf key.  Drop the ifdef
	WITH_SOURCEVIEWMM2.
	(DBGPerspective::read_default_config): Unconditionally handle
	style scheme.  Drop the WITH_SOURCEVIEWMM2.
	(DBGPerspective::create_source_editor): Unconditionally keep the
	WITH_SOURCEVIEWMM2 version of the code.  Drop the ifdef.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc:
	Unconditionally include
	gtksourceviewmm/sourcestyleschememanager.h.  Remove ifdef
	WITH_SOURCEVIEWMM2.
	* src/uicommon/nmv-source-editor.cc
	(on_line_mark_activated_signal): Unconditionally declare this.
	Drop the ifdef WITH_SOURCEVIEW_2_10.
	(class Sourceview): Remove ifdef WITH_SOURCEVIEW around friend
	declaration of on_line_mark_activated_signal.
	(SourceView::SourceView): Unconditionally connect to signal
	SourceView::line-mark-activated.  Remove ifdef WITH_SOURCEVIEW.
	(SourceView::do_custom_button_press_event_handling):
	Unconditionally remove.  Remove #if (WITH_SOURCEVIEWMM2 &&
	!WITH_SOURCEVIEW_2_10).
	(SourceView::on_button_press_event): unconditionally Remove call
	to do_custom_button_press_event_handling.  Remove #if
	(WITH_SOURCEVIEWMM2 && !WITH_SOURCEVIEW_2_10).
	(on_line_mark_activated_signal): Unconditionally define.  Remove
	#if WITH_SOURCEVIEW_2_10.
	(SourceEditor::setup_buffer_mime_and_lang)
	(SourceEditor::load_file): Unconditionally keep the code inside
	#ifdef WITH_SOURCEVIEWMM2 branch.  Drop the code in the #else
	branch.  Drop the #ifdef completely.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Removed gnome-vfs compat code
	* configure.ac: Removed checks for gnome-vfs-2.0 and WITH_GIO
	define.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(gio_file_monitor_cb): Remove WITH_GIO ifdef around this, making
	it declared/defined unconditionally.
	(gnome_vfs_file_monitor_cb): Remove this declaration/definition.
	(DBGPerspective::Priv::Path2MonitorMap): Only keep the WITH_GIO
	version.  Drop the ifdef.
	(DBGPerspective::do_monitor_file)
	(DBGPerspective::do_unmonitor_file): Unconditionally keep the
	#ifdef WITH_GIO parts.  Drop the ifdef.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::get_file_mime_type, SourceEditor::load_file): Likewise.
	* src/workbench/nmv-workbench.cc
	(WorkbenchStaticInit::WorkbenchStaticInit): Likewise.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Dropped ifdefs for GTK+ 2.10
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_body, DBGPerspective::append_source_editor):
	Removed ifdefs to unconditionally use the code that was only used
	with GTK+ 2.10.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Use GDK_KEY_* enums, not the deprecated GDK_* ones
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::on_key_press_event): Use GDK_KEY_Delete
	instead of the deprecated GDK_Delete.
	* src/persp/dbgperspective/nmv-file-list.cc
	(FileListView::on_key_press_event): Use GDK_KEY_Return instead of
	the deprecated GDK_Return.
	* configure.ac: Require GTK+ 2.22.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Dropped ifdefs for gtkmm 2.16
	* src/uicommon/nmv-ui-utils.h: Removed #ifdef HAVE_GTKMM_2_16.
	* configure.ac: Removed HAVE_GTKMM_2_16 define.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Avoid using gtkmm deprecated API
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::should_process_now): Use
	Widget::get_is_drawable instead of Widget::is_drawable.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::should_process_now): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_mouse_immobile_timer_signal): Use
	Widget::get_visible instead of Widget::is_visible.
	(DBGPerspective::append_source_editor): Use Widget::get_has_window
	instead of Widget::has_no_window.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(BreakpointsView::Priv::should_process_now): Use
	Widget::get_is_drawable instead of Widget::is_drawable.
	* src/persp/dbgperspective/nmv-registers-view.cc
	(RegistersView::Priv::should_process_now): Likewise.
	* src/persp/dbgperspective/nmv-thread-list.cc
	(ThreadList::Priv::should_process_now): Likewise.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Fixed includes to match GTK+'s single include policy
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Only include
	<gtk/gtk.h> directly.

2011-03-23  Kalev Lember <kalevlember@gmail.com>

	Fix header guard name in nmv-hex-document.h
	* src/uicommon/nmv-hex-document.h: Renamed header guard from
	__NMV_SPINNER_H__ to __NMV_HEX_DOCUMENT_H__.

2011-04-01  Dodji Seketeli <dodji@gnome.org>

	Fix style
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::is_attached_to_target): Add space.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::restart_local_inferior): Remove trailing space.

2011-04-01  Dodji Seketeli <dodji@gnome.org>

	Don't loose commands sent down the wire
	* src/dbgengine/nmv-i-debugger.h (IDebugger::load_program): Add a
	force flag.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::load_program):
	Adjust.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::load_program): Add
	a_force parameter to control whether to reset the command queue or
	not.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_progra): Rename the
	a_check_is_new_program parameter into a_restarting.  Then, load
	the program by forcing the reset of the command queue *only* when
	restarting.
	* tests/test-breakpoint.cc (test_main): Adjust to the new
	additional parameter of IDebugger::load_program.
	* tests/test-disassemble.cc (test_main): Likewise.
	* tests/test-types.cc (test_main): Likewise.
	* tests/test-var-path-expr.cc (test_main): Likewise.
	* tests/test-watchpoint.cc (test_main): Likewise.

2011-04-01  Dodji Seketeli <dodji@gnome.org>

	Fix tests linking with boost 1.46
	* tests/Makefile.am (runtestvarobjwalker)
	(runtestvariableformat, runtestvarlist, runtestvarwalker): Don't
	link these tests with (useless) @BOOST_TEST_EXEC_MONITOR_LIB@
	anymore.
	(runtesttypes): Don't link with
	BOOST_UNIT_TEST_FRAMEWORK_STATIC_LIB anymore.
	* tests/test-overloads.cc: Don't include boost/test/test_tools.hpp
	as it is redundant with boost/test/minimal.hpp.
	* tests/test-var-walker.cc: Likewise.
	* tests/test-variable-format.cc: Likewise.
	* tests/test-varobj-walker.cc: Likewise.

2011-04-01  Dodji Seketeli <dodji@gnome.org>

	Fix 'set-but-unused' warning from GCC 4.6
	* src/common/nmv-connection-manager.cc (parse_connection_string):
	Remove dead variable 'parsed_host'.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::extract_global_variable_list): Likewise for 'cur'.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_threads_list): Likewise for
	'current_thread_id'.
	(GDBMIParser::parse_var_changed_list): Likewise for
	'type_changed'.  Use the 'in_scope' (otherwise unused) variable
	value to initialise the resulting instance of IDebugger::Variable.
	* src/dbgengine/nmv-i-debugger.h: (IDebugger::IVariable):  Add an
	in_scope member and the related accessors.
	* src/langs/nmv-cpp-parser.cc (Parser::parse_qualified_id): Remove
	dead variable 'has_template'.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::update_line_col_label): Remove dead
	'line_count' variable.

2011-04-01  Dodji Seketeli <dodji@gnome.org>

	Don't list frame args twice
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::list_frames_arguments): Don't queue the GDB command twice.

2011-03-21  Kalev Lember <kalev@smartlink.ee>

	598444 Use Gtk::Spinner instead of custom spinner widget
	* src/uicommon/nmv-spinner-tool-item.[cc,h]: Rewrote to use
	Gtk::Spinner instead of EphySpinner.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Adapt to
	nmv-spinner-tool-item changes.
	* src/uicommon/ephy-spinner-tool-item.[c,h]:
	* src/uicommon/ephy-spinner.[c,h]:
	* src/uicommon/nmv-spinner.[cc,h]: Removed EphySpinner and its C++
	wrappers.
	* src/uicommon/Makefile.am: Removed references to deleted files.
	* configure.ac: Bumped gtkmm minimum version to 2.20.

2011-03-23  Dodji Seketeli <dodji@seketeli.org>

	Update the commit log guidelines

2011-03-18  Lucian Adrian Grijincu <lucian.grijincu@gmail.com>

	Updated Romanian translation

2011-03-15  Luca Bruno <lucab@debian.org>

	Merge branch 'debian' of https://alioth.debian.org/anonscm/git/collab-maint/nemiver

2011-03-13  Joe Hansen <joedalton2@yahoo.dk>

	Updated Danish translation

2011-03-12  Dodji Seketeli <dodji@seketeli.org>

	644569 Ensure last expr becomes last history item
	* src/persp/dbgperspective/nmv-call-function-dialog.cc
	(CallFunctionDialog::Priv::exists_in_history): Return an iterator
	to the history item found.
	(CallFunctionDialog::Priv::erase_expression_from_history): New
	function.
	(CallFunctionDialog::Priv::add_to_history): Make sure the item to
	add is the last history item.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc
	(VarInspectorDialog::Priv::exists_in_history): Return an iterator
	to the history item found.
	(VarInspectorDialog::Priv::erase_expression_from_history): New
	function.
	(VarInspectorDialog::Priv::add_to_history): Make sure the item to
	add is the last history item.
	(VarInspectorDialog::Priv::set_history): New function.
	(VarInspectorDialog::set_history): Use it.

2011-03-07  Dodji Seketeli <dodji@seketeli.org>

	644114 Update the call stack again
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::finish_update_handling): Pass the
	&Priv::on_frames_listed slot to IDebugger::list_frames.

2011-03-02  Dodji Seketeli <dodji@seketeli.org>

	Reset command queue on restart GDB after a crash
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::reset_command_queue): New function.
	(GDBEngine::load_program): When launching a fresh GDB (e.g after
	the previous one crashed) make sure to reset the command queue in
	case the previous GDB vanished in the middle of a command
	submitting process -- and so the command queue is left in a stuck
	state.

2011-03-02  Dodji Seketeli <dodji@seketeli.org>

	643700 Function arguments are duplicated
	* src/dbgengine/nmv-debugger-utils.h (null_frame_vector_slot)
	(null_frame_args_slot): Declare ...
	* src/dbgengine/nmv-debugger-utils.cc (null_frame_vector_slot)
	(null_frame_args_slot): ... these new functions.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::FrameVectorSlot)
	(IDebugger::FrameArgsSlot): Declare these new slot typedefs.
	(IDebugger::list_frames)
	(IDebugger::list_frames_arguments): Declare these new entry point
	overloads taking slots.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::list_frames)
	(GDBEngine::list_frames_arguments): Declare new functions.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::list_frames, GDBEngine::list_frames_arguments):
	Support calling back into a slot.
	(OnFramesListedHandler::do_handle): Invoke the slot passed in
	parameter of IDebugger::list_frames.
	(OnFramesParamsListedHandler::do_handle): Invoke the slot passed
	in parameter of IDebugger::list_frames_arguments.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::update_selected_frame): Pass a callback slot to
	IDebugger::list_frames.
	(CallStack::Priv::on_frames_listed_during_paging): Renamed
	on_frames_listed_signal into this.  The former was reacting to
	IDebugger::frames_listed_signal and was looking into the cookie to
	decide what to do.  This new version is passed to the
	IDebugger::list_frames call directly we don't need to look into
	any cookie anymore.  Also we know that we are now called during
	frame paging, so we just have to react to that context.
	(CallStack::Priv::on_frames_listed): Splitted out of the former
	on_frames_listed_signal.  Like for the function above, we don't
	need to look into any cookie anymore, as this function is passed
	as a callback to a precise invocation of IDebugger::list_frames.
	We just have to react to contexts where we are not dealing with
	frames paging.  Pass &Priv::on_frames_args_listed to the
	invocation of IDebugger::list_frames_arguments.
	(CallStack::Priv::on_frames_args_listed): Renamed
	on_frames_params_listed_signal into this.  This doesn't react to
	IDebugger::frames_arguments_listed_signal anymore.  Rather, it is
	passed as a callback slot to a precise invocation of
	IDebugger::list_frames_arguments.
	(CallStack::Priv::connect_debugger_signals): Do not react anymore to
	IDebugger::frames_listed_signal and
	IDebugger::frames_arguments_listed_signal.
	(CallStack::Priv::update_call_stack): Pass Priv::on_frames_listed
	as callback slot to the IDebugger::list_frames invocation.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc
	(LocalVarsInspector::Priv::connect_to_debugger_signals): Don't
	connect anymore to IDebugger::frames_arguments_listed_signals.
	(LocalVarsInspector::Priv::on_function_args_listed): Renamed
	LocalVarsInspector::Priv::on_function_args_listed_signal into
	this.  No need to look into any cookie anymore.
	(LocalVarsInspector::Priv::finish_handling_debugger_stopped_event):
	Pass &Priv::on_function_args_listed slot as callback to the
	IDebugger::list_frames_arguments invocation.
	(LocalVarsInspector::show_local_variables_of_current_function):
	Likewise.

2011-03-01  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-02-26  Dodji Seketeli <dodji@seketeli.org>

	Avoid needless work when selecting a frame
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Frame::operator==):
	New equality operator.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_frame_selected_signal): Return early if we
	selecting the same frame as the current one.

2011-02-26  Dodji Seketeli <dodji@seketeli.org>

	Return a signal of IDebugger by reference
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::variable_dereferenced_signal): Return the value by
	reference.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::variable_dereferenced_signal): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::variable_dereferenced_signal): Likewise.

2011-02-25  Dodji Seketeli <dodji@seketeli.org>

	Move null slots to nmv-debugger-utils.[h|cc]
	* src/dbgengine/nmv-gdb-engine.cc (null_const_variable_slot)
	(null_const_variable_list_slot, null_const_ustring_slot): Move
	these to src/dbgengine/nmv-debugger-utils.cc.  Import
	nemiver::debugger_utils::null_const_variable_slot, and
	nemiver::debugger_utils::null_const_variable_list_slot with using
	directives.
	* src/dbgengine/nmv-debugger-utils.h (null_const_variable_slot)
	(null_const_variable_list_slot, null_const_ustring_slot): Declare
	these.
	* src/dbgengine/nmv-debugger-utils.cc (null_const_variable_slot)
	(null_const_variable_list_slot, null_const_ustring_slot): Moved
	these here from src/dbgengine/nmv-gdb-engine.cc.

2011-02-25  Dodji Seketeli <dodji@seketeli.org>

	Pass full tests file paths to the compiler
	* tests/Makefile.am: Pass the full path of files to the compiler.
	Pass -DNEMIVER_SRCDIR=<full-src-path> and
	-DDNEMIVER_BUILDDIR=<build-path> to the compiler on each
	compilation unit.
	* tests/test-libtool-wrapper-detection.cc: Use the two new macro
	passed to this CU to address the files that are either in srcdir
	or builddir.  This is useful when building in a build dir that is
	!= the source dir.

2011-02-25  Dodji Seketeli <dodji@seketeli.org>

	NMV_DEFAULT_LOG_DOMAIN is always file base name
	* src/common/nmv-log-stream.h (NMV_DEFAULT_DOMAIN): Always return
	file base name.

2011-02-24  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-02-23  lainme <lainme993@gmail.com>

	Update Simplified Chinese translation.

2011-02-21  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-02-20  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-02-19  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-02-15  Daniel Mustieles <daniel.mustieles@gmail.com>

	Updated Spanish translation

2011-01-30  Dodji Seketeli <dodji@gnome.org>

	640921 Pass absolute file paths to the compiler
	* src/Makefile.am:
	* src/common/Makefile.am:
	* src/confmgr/Makefile.am:
	* src/dbdimpl/sqlite/Makefile.am:
	* src/dbgengine/Makefile.am:
	* src/langs/Makefile.am:
	* src/persp/Makefile.am:
	* src/persp/dbgperspective/Makefile.am:
	* src/uicommon/Makefile.am
	* src/workbench/Makefile.am: Pass absolute file paths to the
	compiler.

2011-01-30  Dodji Seketeli <dodji@seketeli.org>

	640919 Fix build for autoconf < 2.64
	* configure.ac: Require autoconf 2.63 instead of 2.64 because EL6
	has 2.63. More AC_PREREQ after AC_INIT, for consistency. That
	macro is the only one that can be invoked before AC_INIT, but
	let's move it after AC_INIT like all other macros.
	* src/workbench/nmv-workbench.cc: PACKAGE_URL is only defined by
	AC_INIT on autoconf >= 2.64. Let's define it ourselves for
	earlier versions.

2011-01-27  Luca Bruno <lucab@debian.org>

	New upstream version 0.8.1-1

2011-01-27  Luca Bruno <lucab@debian.org>

	Add Debian source format version

2011-01-27  Luca Bruno <lucab@debian.org>

	Add a temporarily empty patches/series

2011-01-22  Dodji Seketeli <dodji@seketeli.org>

	Bump version number to 0.8.2
	* configure.ac: Bump version number to 0.8.2

2011-01-22  Dodji Seketeli <dodji@seketeli.org>

	Initialize IDebugger dynmods with gconf in tests
	* src/dbgengine/nmv-debugger-utils.[h,cc]
	(load_debugger_iface_with_gconf): New entry point.
	* tests/test-cpptrait.cc (test_debugger)
	* tests/test-deref.cc (test_main)
	* tests/test-disassemble.cc (test_main)
	* tests/test-local-vars-list.cc (test_main)
	* tests/test-types.cc (test_main)
	* tests/test-var-list.cc (test_main)
	* tests/test-var-walker.cc (test_main)
	* tests/test-variable-format.cc (test_main)
	* tests/test-varobj-walker.cc (test_main)
	* tests/test-vars.cc (test_main)
	* tests/test-watchpoint.cc (test_main):
	Use load_debugger_iface_with_gconf.
	* tests/Makefile.am: Link all the tests loading the IDebugger
	interface with $(top_builddir)/src/dbgengine/libdebuggerutils.la

2010-09-11  Dodji Seketeli <dodji@gnome.org>

	Centralize conf keys decls/defs to src/confmgr
	* src/confmgr/nmv-conf-keys.h: Moved
	src/persp/dbgperspective/nmv-conf-keys.h here.
	* src/confmgr/nmv-conf-keys.cc: New.
	* src/confmgr/Makefile.am: Add src/confmgr/nmv-conf-keys.[h,cc] to the
	build system here.
	* src/persp/dbgperspective/Makefile.am: Remove
	src/persp/dbgperspective/nmv-conf-keys.h from the build sytem here.
	* src/common/nmv-env.cc: Move definition of CONF_KEY_GDB_BINARY and
	CONF_KEY_FOLLOW_FORK_MODE in src/confmgr/nmv-conf-keys.cc.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Move
	definitions of CONF_KEY_NEMIVER_SOURCE_DIRS,
	CONF_KEY_SHOW_DBG_ERROR_DIALOGS,
	CONF_KEY_SHOW_SOURCE_LINE_NUMBERS,
	CONF_KEY_CONFIRM_BEFORE_RELOAD_SOURCE,
	CONF_KEY_ALLOW_AUTO_RELOAD_SOURCE, CONF_KEY_HIGHLIGHT_SOURCE_CODE,
	CONF_KEY_SOURCE_FILE_ENCODING_LIST, CONF_KEY_USE_SYSTEM_FONT,
	CONF_KEY_CUSTOM_FONT_NAME, CONF_KEY_SYSTEM_FONT_NAME,
	CONF_KEY_USE_LAUNCH_TERMINAL,
	CONF_KEY_STATUS_WIDGET_MINIMUM_WIDTH,
	CONF_KEY_STATUS_WIDGET_MINIMUM_HEIGHT,
	CONF_KEY_STATUS_PANE_LOCATION,
	CONF_KEY_DEBUGGER_ENGINE_DYNMOD_NAME,
	CONF_KEY_EDITOR_STYLE_SCHEME, CONF_KEY_ASM_STYLE_PURE,
	CONF_KEY_DEFAULT_NUM_ASM_INSTRS, CONF_KEY_CONTEXT_PANE_LOCATION
	into src/confmgr/nmv-conf-keys.cc.

2010-09-12  Dodji Seketeli <dodji@gnome.org>

	Catch more exceptions at low level
	* src/dbgengine/nmv-dbg-common.cc
	(OutputHandlerList::submit_command_and_output): Don't let
	exceptions sneak through here.

2010-09-11  Dodji Seketeli <dodji@gnome.org>

	Remove useless includes
	* src/common/nmv-ustring.h: Remove useless #include "config.h".
	* src/uicommon/nmv-ui-utils.h: Likewise.

2010-08-30  Dodji Seketeli <dodji@gnome.org>

	Style/comments cleanups
	* src/dbgengine/nmv-debugger-utils.cc (gen_white_spaces)
	(dump_variable_value): Add comment for these functions.
	* src/dbgengine/nmv-gdb-engine.cc (struct
	OnListChangedVariableHandler): Tiny style cleanup.
	(do_init): Fix comment.
	* src/dbgengine/nmv-gdbmi-parser.h (parse_stack_arguments):
	Tiny style cleanup.

2011-01-16  Dodji Seketeli <dodji@seketeli.org>

	Detect boost when in /usr/lib64

2011-01-15  Luca Bruno <lucab@debian.org>

	Updated policy to 3.9.1

2011-01-15  Luca Bruno <lucab@debian.org>

	Remove legacy build switches, enabled by default

2011-01-15  Luca Bruno <lucab@debian.org>

	New upstream version 0.8.0

2011-01-15  Luca Bruno <lucab@debian.org>

	Dropped gcc-4.5 patch, fixed upstream

2011-01-15  Luca Bruno <lucab@debian.org>

	Fix minor typo in previous changelog

2011-01-10  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.

2011-01-09  Dodji Seketeli <dodji@seketeli.org>

	Update boost m4 macro definitions.
	* m4/ax_boost_test_exec_monitor.m4: Update to new upstream
	version.
	* m4/ax_boost_unit_test_framework.m4: Likewise.

2011-01-09  Dodji Seketeli <dodji@seketeli.org>

	Bump version to 0.8.1
	* configure.ac: Bump version number to 0.8.1

2011-01-09  Dodji Seketeli <dodji@seketeli.org>

	Generate ChangeLog for 0.8.1

2011-01-09  Dodji Seketeli <dodji@seketeli.org>

	Update NEWS for 0.8.1
	* NEWS: add new entries for 0.8.1

2011-01-02  Joe Hansen <joedalton2@yahoo.dk>

	Updated Danish translation

2010-12-28  lainme <lainme993@gmail.com>

	Add Chinese (China) help translation.

2010-12-13  Mario Blättermann <mariobl@gnome.org>

	[l10n] Updated German translation

2010-12-13  Jakob Kramer <jakob.kramer@gmx.de>

	[l10n] Updated German translation

2010-11-27  Dodji Seketeli <dodji@gnome.org>

	Remove dead code
	* src/dbgengine/nmv-gdb-engine.cc
	(OnCommandDoneHandler::do_handle): Remove useless type
	instantiation.

2010-11-27  Dodji Seketeli <dodji@gnome.org>

	Allow restarting after GDB dies (Closes: #635956)
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::queue_command): Remove assert.

2010-11-27  Dodji Seketeli <dodji@gnome.org>

	Ignore GDB init file on restart (Closes: #635928)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::restart_local_inferior): New function.
	(DBGPerspective::restart_inferior): Use it.

2010-11-27  Dodji Seketeli <dodji@gnome.org>

	Fix count-point toggling thinko (Close: #635935)
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::on_countpoint_toggled): Fix thinko.

2010-11-27  Dodji Seketeli <dodji@gnome.org>

	Treat GDB communication as raw data (Closes: #634834)
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::set_communication_charset): Support treating
	communication data as binary.
	(GDBEngine::Priv::launch_gdb_real): Treat our communication with
	GDB as binary communication.
	(GDBEngine::on_gdb_stdout_has_data_signal): Use std::string
	instead of UString to handle data we get from GDB.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_octal_escape_sequence): Treat octal escape
	sequence as representing file paths for now.

2010-11-24  Bruno Brouard <annoa.b@gmail.com>

	Updated French translation

2010-11-12  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-11-09  Dodji Seketeli <dodji@seketeli.org>

	Restart without exception (Closes: #634406)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(delete_visual_breakpoint): Do not throw an exception when we
	can't get the source editor of a given breakpoint. That just
	likely mean 1/it's an in-asm breakpoint 2/we haven't disassembled
	that part yet.

2010-11-08  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2010-11-08  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-11-07  Dodji Seketeli <dodji@seketeli.org>

	Show asm in the right SourceEditor (Closes #633565)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(get_source_editor_of_current_frame): Split out of ...
	(DBGPerspective::get_current_source_editor): This.
	(switch_to_asm): Use the new get_source_editor_of_current_frame.
	(switch_to_source_code): Likewise.

2010-11-07  Dodji Seketeli <dodji@seketeli.org>

	Don't boldify file path in locate dialog (Closes: #633563)
	* src/uicommon/nmv-locate-file-dialog.cc
	(src/uicommon/nmv-locate-file-dialog.cc): Don't use markups in
	this label. I am not not sure it's useful and we'd need to escape
	the content if it was.

2010-11-07  Dodji Seketeli <dodji@seketeli.org>

	Safer session data clearing (Closes: #634228)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(delete_visual_breakpoint): New overload that takes an iterator
	inside the breakpoint's map.
	(delete_visual_breakpoints): Delete all visual breakpoints.
	(clear_session_data): Use delete_visual_breakpoints instead of
	clearing the BPs map.

2010-11-07  Dodji Seketeli <dodji@seketeli.org>

	Better BP re-setting on restart (Closes: #634227)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): Save breakpoints we want to
	delete and set back. Delete them, and set them back by looking at
	the saved breakpoint. Do not pass any special cookie to
	IDebugger::delete_breakpoint anymore.
	(DBGPerspective::on_debugger_breakpoint_deleted_signal): Do not
	handle the special cookie for the restarting use case anymore.
	(<const char *I_DEBUGGER_COOKIE_EXECUTE_PROGRAM>): Remove this
	[now useless] cookie.

2010-11-07  Dodji Seketeli <dodji@seketeli.org>

	Handle BP setting w/o debug info (Closes: #634224)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::set_breakpoint): Handle the case of a breakpoint
	that doesn't have debug info.
	(DBGPerspective::delete_visual_breakpoint): Don't emit an error
	message when the visual breakpoint has already been deleted. This
	can happen when session data is cleared, e.g, when restarting. In
	that case we clear the visual breakpoints w/o necessarily removing
	the real breakpoints.

2010-11-07  Dodji Seketeli <dodji@seketeli.org>

	Fix buffer setting in SourceEditor (Closes: #633561)
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::SourceEditor::Priv): When initializing the
	source editor with a null buffer, set the right context of the
	editor with the real buffer of the source editor.

2010-11-07  Dodji Seketeli <dodji@seketeli.org>

	Fix string typo (Close #633445)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(restart_inferior): Fix a the string typo here.

2010-11-04  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.

2010-11-04  Luca Bruno <lucab@debian.org>

	Repository moved to git.debian.org, updating VCS control tags accordingly

2010-11-04  Luca Bruno <lucab@debian.org>

	Added proper git-buildpackage config for this repo

2010-10-31  Petr Kovar <pknbe@volny.cz>

	Update Czech translation by Marek Cernocky

2010-10-30  Bruno Brouard <annoa.b@gmail.com>

	Updated French translation

2010-10-30  Dodji Seketeli <dodji@seketeli.org>

	Merge remote branch 'origin/master'

2010-10-22  Matej Urbančič <mateju@svn.gnome.org>

	Added sl for Slovenian translation

2010-10-22  Matej Urbančič <mateju@svn.gnome.org>

	Added Slovenian translation

2010-10-19  Dodji Seketeli <dodji@seketeli.org>

	Automatically generate changelog for 0.8.0

2010-10-19  Dodji Seketeli <dodji@seketeli.org>

	Don't update-changelog in make release
	* Makefile.am (tag-release): Don't update changelog here for now.

2010-10-19  Dodji Seketeli <dodji@seketeli.org>

	Updated NEWS file
	* NEWS: Update for 0.8.0

2010-10-15  Dodji Seketeli <dodji@seketeli.org>

	Allow breaking on events again (Closes: #631925)
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::Priv::Priv): Create a cell renderer, make
	the combo box use it and make sure it displays the event label we
	it to show.

2010-10-15  Dodji Seketeli <dodji@seketeli.org>

	Small member renaming in nmv-set-breakpoint-dialog.cc
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::Priv::combo_event_cols): Renamed
	combo_event_col_model into this.
	(SetBreakpointDialog::Priv::Priv)
	(SetBreakpointDialog::Priv::get_active_event): Adjust.

2010-10-15  Dodji Seketeli <dodji@seketeli.org>

	Events combo in BP setting dialog uses a ListStore
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::Priv::combo_event_model): Type of this is
	now a Glib::RefPtr<Gtk::ListStore>.
	(SetBreakpointDialog::Priv::Priv): Initialise combo_event_model
	with a ListStore.

2010-10-15  Dodji Seketeli <dodji@seketeli.org>

	Style cleanup in nmv-set-breakpoint-dialog.cc
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(EventComboModelColumn::EventComboModelColumn)
	(SetBreakpointDialog::event): Space before function call
	operator's parenthesis.
	(SetBreakpointDialog::Priv::Priv): Use false in lieu of 0.

2010-10-15  Dodji Seketeli <dodji@seketeli.org>

	Init event combo in setsetbreakpointdialog.ui
	* src/persp/dbgperspective/ui/setbreakpointdialog.ui (<object
	class="GtkComboBox" id="combo_event">): Set the default model of
	this to list store.

2010-10-15  Dodji Seketeli <dodji@seketeli.org>

	Minor style nit in nmv-breakpoints-view.cc
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::append_breakpoint): Add space before a
	function call operator's parenthesis.

2010-10-15  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-10-14  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-10-13  Dodji Seketeli <dodji@seketeli.org>

	Don't forget the CWD when restarting a session
	* src/dbgengine/nmv-gdb-engine.cc (GDBEnging::Priv::launch_gdb):
	When the path to the program to launch is neither found nor
	absolute, Look for it in the workding dir before looking it up in
	PATH.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_session): Restore the CWD from the
	session.
	(DBGPerspective::connect_to_remote_target): Take the CWD in
	account when loading the local binary.

2010-10-11  Dodji Seketeli <dodji@seketeli.org>

	Avoid error in setting solib-absolute-prefix parm
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::set_solib_prefix_path): Avoid setting solib prefix to
	an empty string.

2010-10-11  Dodji Seketeli <dodji@seketeli.org>

	Slight API cleanup
	* src/dbgengine/nmv-gdb-engine.h (detach_from_target): Remove
	default argument.

2010-10-11  Dodji Seketeli <dodji@seketeli.org>

	RemoteTargetDialog UI cleanup
	* src/persp/dbgperspective/ui/remotetargetdialog.ui: Slight cleanup

2010-10-11  Dodji Seketeli <dodji@seketeli.org>

	Integrate remote debugging to session management
	* src/persp/dbgperspective/nmv-dbg-perspective.cc (REMOTE_TARGET)
	(SOLIB_PREFIX): New session properties to save connecting to a
	remote inferior.
	(record_and_save_session): Save new REMOTE_TARGET and SOLIB_PREFIX
	properties in the session.
	(execute_session): Support remote target debugging when executing
	a sesion. Properly
	(restart_inferior): Renamed execute_last_program_in_memory into
	this.
	(run): Adjust.
	(reconnect_to_remote_target, pre_fill_remote_target_dialog)
	(is_connected_to_remote_target): New functions.
	(on_debugger_connected_to_remote_target_signal): List breakpoints
	when we connect to the remote target.
	(connect_to_remote_target): Try hard to pre-fill the remote target
	connection dialog when we have the information available, e.g,
	when trying to reconnect to a target we just disconnected
	from. Also keep connection information in the current context.
	(detach_from_program): Support disconnecting from remote targets.

2010-10-11  Dodji Seketeli <dodji@seketeli.org>

	Work around FileChooser::set_filename bug
	* src/persp/dbgperspective/nmv-remote-target-dialog.h
	(RemoteTargetDialog::get_cwd, RemoteTargetDialog::set_cwd):
	Declare new functions.
	* src/persp/dbgperspective/nmv-remote-target-dialog.cc
	(RemoteTargetDialog::Priv::on_exec_button_selection_changed_signal):
	New.
	(RemoteTargetDialog::Priv::init_from_gtkbuilder): Style cleanup.
	(RemoteTargetDialog::Priv::set_executable_path): Cache the
	executable path. Set the current working dir.
	(RemoteTargetDialog::Priv::get_executable_path): Don't clobber the
	returned value with an empty string. There seem to be a gtk bug
	that makes Gtk::FileChooserButton::get_filename always return an
	empty string even though we called Gtk::FileChooser::set_filename
	and waited for the selection-changed signal. So here we returned
	a cached value instead of the possibly bogus gtk+ one.
	(RemoteTargetDialog::Priv::set_solib_prefix_path): Set the current
	working dir.
	(RemoteTargetDialog::Priv::set_serial_port_name): Likewise.
	(RemoteTargetDialog::get_cwd, RemoteTargetDialog::set_cwd):
	Implement New functions.

2010-10-11  Dodji Seketeli <dodji@seketeli.org>

	Add IDebugger::disconnect_from_remote_target
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::disconnect_from_remote_target): New API.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::disconnect_from_remote_target): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::disconnect_from_remote_target): Implement the new API.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Don't die when the loaded program isn't found
	* src/dbgengine/nmv-i-debugger.h (IDebugger::load_program): Return
	a boolean now.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::load_program):
	Likewise.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::load_program):
	Return true upon successful completion, false otherwise. This is
	now better than just throwing an exception at this point.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): Display an error message when
	we fail to load the program, instead of just passing up an
	exception.
	(DBGPerspective::connect_to_remote_target): Likewise.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Cleanup in main.c
	* main (parse_command_line): Use GCharSafePtr.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Catch --remote=HOST:PORT with no binary copy arg
	* src/main.cc (parse_command_line): If the user forgets to provide
	a binary copy of the binary she wants to debug remotely, catch the
	case and display a meaningful error.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Show usage message on cmdline parsing error
	* src/main.cc (parse_command_line): Return a boolean. When on
	command line parsing error, display the usage help and return
	false.
	(main): Bail out when command line parsing fails.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Style cleanup
	* src/main.cc (entries): Add some spaces.
	(init_option_context): Split long line.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Better Help for --remote, --solib-prefix et al
	* src/main.cc (entries)<remote, solib-prefix>: Add proper help
	string specifying that you need to pass "=some-argument" to
	--remote and --solib-prefix
	(entries)<env, attach, session, log-domains>: Make the string
	coming after "=" in the arguments help be more unified.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Initial support for --remote (#624630)
	* src/common/nmv-str-utils.h (parse_host_and_port): New public API.
	* src/common/nmv-str-utils.cc (parse_string_colon_number):
	New function. Extracted from ...
	(extract_path_and_line_num_from_location): ... this.
	(parse_host_and_port): New public fn. Uses
	parse_string_colon_number.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(DBGPerspective::connect_to_remote_target): Add this as a public
	API.
	(DBGPerspective::connect_to_remote_target): Add new parms to make
	this callable from outside of the perspective. Clean up the
	overload with no parm to make it rely on the overloads with parms.
	* src/main.cc (process_gui_options): Take in account new
	--remote and --solib-prefix to attach to a target running
	remotely.

2010-10-03  Dodji Seketeli <dodji@seketeli.org>

	Cleanup remote target port use.
	* src/dbgengine/nmv-i-debugger.h (attach_to_remote_target): Remote
	target port should be unsigned.
	* src/dbgengine/nmv-gdb-engine.h
	(IDebugger::attach_to_remote_target): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::attach_to_remote_target): Likewise.
	* src/persp/dbgperspective/nmv-remote-target-dialog.cc
	src/persp/dbgperspective/nmv-remote-target-dialog.h
	(RemoteTargetDialog::get_server_port):
	(RemoteTargetDialog::get_server_port): Likewise.

2010-10-13  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2010-10-10  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-10-10  Dodji Seketeli <dodji@seketeli.org>

	Support Breakpoint toggling in asm mode
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(update_toggle_menu_text): New overloads of this function.
	(get_breakpoint_number): Remove.
	(get_breakpoint): New function.
	(toggle_breakpoint_enabled): New overloads of this function.
	(on_insertion_changed_signal): Use new overload of
	update_toggle_menu_text. Handles toggle menu text updating in asm
	buffer mode too.
	(on_debugger_breakpoints_set_signal): Likewise.
	(on_debugger_breakpoint_deleted_signal): Likewise.
	(delete_breakpoint): Replate use of
	get_breakpoint_number with get_breakpoint.
	(is_breakpoint_set_at_line): Likewise.
	(is_breakpoint_set_at_address): Likewise.
	(toggle_countpoint): Likewise. Also, support toggling in asm mode.
	(toggle_breakpoint): Support breakpoint toggling in asm mode.
	(toggle_breakpoint_enabled): Likewise. Added new overloads of this
	function too.

2010-10-10  Dodji Seketeli <dodji@seketeli.org>

	Add a SourceEditor::current_address
	* src/uicommon/nmv-source-editor.h
	(SourceEditor::current_address): New API.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::current_address): Implement the new API.

2010-10-10  Dodji Seketeli <dodji@seketeli.org>

	Connect asm buffers to relevant signals too
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::init_common_buffer_signals)
	(SourceEditor::Priv::init_assembly_buffer_signals)
	(SourceEditor::Priv::init_assembly_context_signals)
	(SourceEditor::Priv::init_non_assembly_buffer_signals)
	(SourceEditor::Priv::init_non_assembly_context_signals): New fnctions.
	(SourceEditor::Priv::register_assembly_source_buffer): Connect
	asm buffer to relevant signals
	(SourceEditor::Priv::register_non_assembly_source_buffer): Connect
	non-asm buffer relevant signals.
	(SourceEditor::Priv::init_signals): Separately connect asm and
	non-asm buffer to their signals.

2010-10-10  Dodji Seketeli <dodji@seketeli.org>

	Cleanup logging macros.
	* src/common/nmv-log-stream-utils.h (LOG_D, LOG_ERROR_D)
	(LOG_VERBOSE_D): Each of these macros are now one statement
	instead of a succession of statement separated by ';'
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_local_var_list): Add a ';' at the end of
	LOG_ERROR_D now that it's needed.

2010-10-09  Dodji Seketeli <dodji@seketeli.org>

	Countpoint toggling from (contextual) menu items
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(on_toggle_countpoint_action, toggle_countpoint): New functions.
	(init_actions): Define a new ToggleCountpointMenuItemAction.
	(get_contextual_menu): Add an item to the contextual menu to
	create and toggle countpoints.
	(update_toggle_menu_text): Update the text of the
	new "toggle countpoint" menu item depending on the context.
	(update_src_dependant_bp_actions_sensitiveness): Update
	sensitive-ness of menu items that use the toggle countpoint
	action.
	* src/persp/dbgperspective/menus/menus.xml
	(<DebugMenu>/<ToggleCountpointMenuItem>): New menu item using
	ToggleCountpointMenuItemAction.

2010-10-09  Dodji Seketeli <dodji@seketeli.org>

	Add missing default arguments to GDBEngine funcs
	* src/dbgengine/nmv-gdb-engine.h
	(IDebugger::set_breakpoint_condition)
	(IDebugger::enable_countpoint): Add default argument to the cookie
	parm.

2010-10-09  Dodji Seketeli <dodji@seketeli.org>

	Cleanup GDBEngine::GDBEngine::append_breakpoints_to_cache
	* src/dbgengine/nmv-gdb-engine.h (append_breakpoint_to_cache): New
	API.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::append_breakpoint_to_cache): Extract this from ...
	(GDBEngine::append_breakpoints_to_cache): ... here.

2010-10-09  Dodji Seketeli <dodji@seketeli.org>

	Replace debugger_utils::is_countpoint with IDebugger::is_countpoint
	* src/dbgengine/nmv-debugger-utils.h (is_countpoint): Remove.
	* src/dbgengine/nmv-debugger-utils.cc (is_countpoint): Remove
	* src/dbgengine/nmv-i-debugger.h (IDebugger::is_countpoint): New API.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::is_countpoint): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::is_countpoint):
	Implement new API.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::update_breakpoint): Replace use of
	debugger_utils::is_counpoint with IDebugger::is_countpoint.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_asm_signal3): Likewise.
	(DBGPerspective::record_and_save_session): Likewise.
	(DBGPerspective::set_breakpoint): Likewise.
	(DBGPerspective::append_breakpoint): Likewise.
	(DBGPerspective::apply_decorations_to_source): Likewise.
	(DBGPerspective::apply_decorations_to_asm): Likewise.

2010-10-09  Dodji Seketeli <dodji@seketeli.org>

	New IDebugger::get_breakpoint_from_cache API.
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::get_breakpoint_from_cache): New API.
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::get_breakpoint_from_cache): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::get_breakpoint_from_cache): Implement the new API.

2010-10-09  Dodji Seketeli <dodji@seketeli.org>

	Continuing excecution at a countpoint done by GDB
	* src/dbgengine/nmv-gdb-engine.h
	(GDBEngine::maybe_handle_countpoint): Remove.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::enable_countpoint): Associate a continue command to
	the breakpoint when asked to turn it into a countpoint. When the
	countpoint is hit GDB should now continue directly without
	triggering a state change in Nemiver. This should be a lot faster
	than notifying Nemiver of each stop and then Nemiver telling GDB
	to continue.
	(GDBEngine::on_stopped_signal): Don't tell GDB to continue when
	it's stopped at a countpoint. This is now handled by GDB itself
	thanks to GDBEngine::enable_countpoint.
	(GDBEngine::maybe_handle_countpoint): Remove.
	(OnCommandDoneHandler::flag_breakpoint_as_countpoint): New
	function.
	(OnCommandDoneHandler::can_handle): Once the "enable-countpoint"
	or "disable-countpoint" command is sent to GDB for a given
	breakpoint, flag the Nemiver-side breakpoint as being a
	countpoint. GDB doesn't make any distinction otherwise.  Emit
	IDebugger::breakpoints_set_signal. This is not semantically
	correct. Ideally we'd need to have a signal "breakpoint changed"
	or something along that line. I guess it will take a "Breakpoint
	signals reorganisation" patchset to address this.
	(OnBreakpointHandler::do_handle): Instead of just flagging
	a Nemiver-side breakpoint as a countpoint, call
	IDebugger::enable_countpoint on that that should do the right
	thing.

2010-10-09  Dodji Seketeli <dodji@seketeli.org>

	Handle continguous out-of-band-records better
	* src/dbgengine/nmv-dbg-common.h
	(Output::OutOfBandRecord::is_running): New accessor.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_out_of_band_record): Mark EXEC-ASYNC-OUTPUT of
	ASSYNC-CLASS running as a "running" out-of-band-record.
	* src/dbgengine/nmv-gdb-engine.cc (OnStoppedHandler::can_handle):
	When multiple contiguous out-of-band-records are emitted in the
	same output record, detect when an ASYNC-RECORD says the target is
	stopped, then another one says the target is running. In such
	cases, the target is considered to be running.  Such cases cases
	can arise when a "continu" command is attached to a break
	point. In that case when the breakpoint is hit, the execution then
	continues straight away. So we get an output record containing two
	out-of-band-records; one saying the target is stopped and the next
	one saying the target is running.

2010-09-29  Dodji Seketeli <dodji@seketeli.org>

	Support countpoint/breakpoint toggling
	* src/dbgengine/nmv-i-debugger.h (enable_countpoint): New
	interface.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::enable_countpoint):
	Likewise.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::enable_countpoint):
	Implement it.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BPColumns::is_countpoint): New member.
	(BPColumns::INDEXES): New enum to index the different columns of
	the breakpoint treeview.
	(BPColumns::BPColumns): Add the is_countpoint column's definition.
	(BreakpointsView::Priv::build_tree_view): Use BPClumns::INDEXES
	enum fields to index the columns now. Add a "Toggle countpoint"
	column with a toggle button. When the user clicks on it, it
	makes the breakpoint become a countpoint or the other way around.
	(BreakpointsView::Priv::on_countpoint_toggled): New slot.

2010-09-27  Dodji Seketeli <dodji@seketeli.org>

	Reindent and style cleanup.
	* src/persp/dbgperspective/Makefile.am
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.h
	* src/uicommon/nmv-source-editor.cc: Little re-indent and style cleanup.

2010-09-27  Dodji Seketeli <dodji@seketeli.org>

	Countpoints support
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::Breakpoint::Type)<COUNTPOINT_TYPE>: New type of
	breakpoint.
	(IDebugger::set_breakpoint): Allow the ignore_count parm of to be
	negative. When passed a negative ignore count,
	IDebugger::set_breakpoint will set a countpoint.
	* src/dbgengine/nmv-debugger-utils.[h,cc] (is_countpoint): New fn.
	* src/dbgengine/nmv-gdb-engine.h (maybe_handle_countpoint): New
	fn.
	(GDB::set_breakpoint): Allow ignore_count to be negative.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::set_breakpoint): When called with a negative ignore
	count, set the GDB-side breakpoint using a generic
	"set-countpoint" command name.
	(OnBreakpointHandler::do_handle): If a breakpoint was set with the
	generic "set-countpoint" command name, flag the Nemiver-side
	breakpoint as a countpoint. We need to handle the marking of a bp
	as a countpoint b/c countpoints are not native GDB objects. They
	are Nemiver-only objects.
	(GDBEngine::maybe_handle_countpoint): New fn.
	(GDBEngine::on_stopped_signal): Use it. Continue if we stopped on
	a countpoint.
	(GDBEngine::append_breakpoints_to_cache): Do not loose
	countpointness when updating our internal breakpoint cache with
	GDB breakpoints.
	* src/persp/dbgperspective/icons/countpoint-marker.png:
	* src/persp/dbgperspective/icons/Makefile.am: Add
	countpoint-marker.png to the build system.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::update_breakpoint): The "type" column
	value for countpoints is not "countpoint".
	* src/uicommon/nmv-source-editor.h (set_visual_breakpoint_at_line)
	(set_visual_breakpoint_at_address): Add an is_countpoint flag.
	* src/uicommon/nmv-source-editor.cc (SourceEditor::Priv::init):
	Register a marker for countpoints.
	(SourceEditor::set_visual_breakpoint_at_line)
	(SourceEditor::set_visual_breakpoint_at_address): Support
	countpoints.
	* src/persp/dbgperspective/ui/setbreakpointdialog.ui: Add a
	countpoint check button.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.h
	(count_point): New accessor.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::Priv::Priv): Load the countpoint check
	button widget.
	(SetBreakpointDialog::Priv::on_radiobutton_changed): Set the
	countpoint check button widget insensitive in event mode.
	(SetBreakpointDialog::count_point): New accessor.
	* src/persp/dbgperspective/sqlscripts/sqlite/create-tables.sql:
	Add an iscountpoint column to the breakpoints table. Bump the
	schema version to 1.5 because of this change.
	* src/persp/dbgperspective/nmv-sess-mgr.h
	(ISessMgr::Breakpoint::is_countpoint): New property.
	* src/persp/dbgperspective/nmv-sess-mgr.cc
	(SessMgr::store_session): Require the 1.5 schema version.  Persist
	countpoints that are in the session.
	(SessMgr::load_session): Load countpoints that were persisted.
	* src/persp/dbgperspective/nmv-dbg-perspective.h (set_breakpoint):
	Add an is_count_point flag to the API.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::set_breakpoint)
	(DBGPerspective::append_visual_breakpoint): Add an is_count_point
	flag to the API and implement it.
	(DBGPerspective::on_debugger_asm_signal3)
	(DBGPerspective::apply_decorations_to_source)
	(DBGPerspective::apply_decorations_to_asm): Pass countpointness to
	append_visual_breakpoint.
	(DBGPerspective::toggle_breakpoint)
	(DBGPerspective::set_breakpoint_from_dialog): Pass countpointness
	to set_breakpoint.
	(DBGPerspective::record_and_save_session): Record countpoints into
	the session.
	(DBGPerspective::execute_session): Set countpoints back.
	(DBGPerspective::set_breakpoint): Add a new overload that takes an
	IDebugger:Breakpoint in parameter. Make it support countpoints
	too. This was extracted from ...
	(DBGPerspective::execute_program): ... here.
	(DBGPerspective::append_breakpoint): Support countpoints.

2010-10-08  Javier Jardón <jjardon@gnome.org>

	autogen.sh: remove unneded call to autopoint

2010-10-02  Javier Jardón <jjardon@gnome.org>

	Use PACKAGE_URL for project webpage

2010-10-01  Javier Jardón <jjardon@gnome.org>

	Update autotools configuration

2010-10-01  Javier Jardón <jjardon@gnome.org>

	Use upstream gettext instead the Glib one

2010-10-02  Dodji Seketeli <dodji@seketeli.org>

	Don't try to look for frame on exit (Closes: #630615)
	* src/dbgengine/nmv-i-debugger.h (IDebugger::is_exited): New entry
	point.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_stopped_signal): Use
	IDebugger::is_exited to exit early whenever we stopped because we
	exited.

2010-09-21  Bruno Brouard <annoa.b@gmail.com>

	Updated doc french translation

2010-09-21  Bruno Brouard <annoa.b@gmail.com>

	New french doc translation

2010-09-18  Dodji Seketeli <dodji@redhat.com>

	Don't go crazy when removing a source view tab
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::close_file): Update current page number when
	removing a tab from the source view notebook.

2010-09-16  Mario Blättermann <mariobl@gnome.org>

	[i18n] Updated German translation

2010-09-14  Bruno Brouard <annoa.b@gmail.com>

	Updated French translation

2010-09-12  Dodji Seketeli <dodji@gnome.org>

	Fix breakpoint setting
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::Priv::get_file_path_and_line_num): Don't set
	mistakenly take the line number for the file path

2010-09-12  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-09-09  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-09-09  Marek Černocký <marek@manet.cz>

	Updated Czech translation

2010-09-09  Dodji Seketeli <dodji@redhat.com>

	Support "filename:linenum" in the set bp dialog
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::Priv::get_file_path_and_line_num): New
	function.
	(SetBreakpointDialog::Priv::update_ok_button_sensitivity): Use
	it to allow the user to type a location of the form
	filename:linenumber in the file name entry field. Also re-indent
	this function.
	(SetBreakpointDialog::file_name)
	(SetBreakpointDialog::line_number): Support locations of the form
	linename:linenumber in the file name entry field.

2010-09-09  Dodji Seketeli <dodji@redhat.com>

	Append (not prepend) exprs to call function history
	* src/persp/dbgperspective/nmv-call-function-dialog.cc
	(CallFunctionDialog::Priv::add_to_history): By default, append
	expressions to history rather than prepend them.
	(CallFunctionDialog::Priv::call_expr_history): Rename
	CallFunctionDialog::Priv::m_call_expr_history into this.
	(CallFunctionDialog::add_to_history): Append expressions to
	history, rather than prepend them.
	(CallFunctionDialog::Priv::on_ok_button_clicked_signal): New
	signal handler.
	(CallFunctionDialog::Priv::Priv): Connect
	CallFunctionDialog::Priv::on_ok_button_clicked_signal to the
	ok_button clicked signal. Update to the m_call_expr_history ->
	call_expr_history rename.
	(CallFunctionDialog::Priv::exists_in_history)
	(CallFunctionDialog::Priv::clear_history): Update against
	renaming.
	(CallFunctionDialog::Priv::get_history): Clear the output parm
	before appending the history elements to it.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::call_function): Let the CallFunctionDialog do the
	history updating work.

2010-09-08  Dodji Seketeli <dodji@redhat.com>

	Set breakpoint view columns resizable
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::build_tree_view): Set all the colums
	resizable and reorderable. Set their header clickable too. Cleanup.

2010-09-08  Dodji Seketeli <dodji@redhat.com>

	Be more tolerant with buffers with wrong content
	* src/uicommon/nmv-source-editor.cc (move_where_marker_to_line)
	(set_visual_breakpoint_at_line): Do not throw when the buffer
	doesn't contain the requested line. Just return false.

2010-09-07 23:08:49 -0700  Hubert Figuiere <hub@figuiere.net>

	Cleanup nmv-gdbmi-parser.cc (Bug #574072)
	* nmv-gdbmi-parser.{h,cc}: Ensure lines are wrapped at 80
	Replace m_priv->input.raw () by RAW_INPUT
	Add emacs modlines

2010-09-08  Dodji Seketeli <dodji@redhat.com>

	Small indentation cleanup
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::Priv::get_supported_encodings)
	(DBGPerspective::Priv::load_file): Fix indentation.

2010-09-08  Dodji Seketeli <dodji@redhat.com>

	Do not save composite buffer names to session
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::record_and_save_session): Do not save non
	persistent files into the saved session.

2010-09-08  Dodji Seketeli <dodji@redhat.com>

	Simplify file searching API and worfklow
	* src/common/nmv-env.[h,cc] (find_file_absolute_or_relative): Remove
	this ugly API.
	* src/common/nmv-asm-utils.h (FindFileAndReadLine): Simplify this
	API.
	(class ReadLine): Likewise.
	(find_file): Make this API look less like Belzebuth.
	* nmv-ui-utils.[h,cc] (find_file_or_ask_user): Rename the awful
	find_absolute_path_or_ask_user into this and make its API more
	maintainable. Make it use env::find_file instead of the now
	[luckily] defunct find_file_absolute_or_relative. Update comment.
	(find_file_and_read_line): Use find_file_or_ask_user instead of
	the defunct find_absolute_path_or_ask_user.
	* nmv-source-editor.h (add_asm, load_asm): Simplify the APIs and
	implementation of these as they need to be less weird now that the
	underlying file searching API looks more reasonable.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	():
	(DBGPerspective::load_asm): New helper fn.
	(DBGPerspective::Priv::find_file): Renamed
	DBGPerspective::find_absolute_path into this and move if from
	DBGPerspective to DBGPerspective::Priv.
	(DBGPerspective::Priv::find_file_or_ask_user): Renamed
	DBGPerspective::find_absolute_path_or_ask_user into this and move
	it here.
	(DBGPerspective::Priv::is_asm_title): Moved
	DBGPerspective::is_asm_title to here.
	(DBGPerspective::Priv::build_find_file_search_path)
	(DBGPerspective::Priv::is_persistent_file): New functions.
	(DBGPerspective::get_current_source_editor)
	(DBGPerspective::get_or_append_source_editor_from_path)
	(DBGPerspective::switch_to_source_code): Use
	DBGPerspective::Priv::find_file_or_ask_user.
	(DBGPerspective::do_unmonitor_file): Use
	DBGPerspective::Priv::is_asm_title.
	(DBGPerspective::open_asm, DBGPerspective::switch_to_asm): Use
	DBGPerspective::load_asm.

2010-09-08  Dodji Seketeli <dodji@redhat.com>

	Remove dead code
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(find_file_in_source_dirs): Remove unused function.

2010-09-08  Dodji Seketeli <dodji@redhat.com>

	Show frame obj name when there is no debug info
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_call_stack): Get the name of the library the
	frame comes from. Stick it into Frame::library.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStackCols::Index): Reorganize the members of this enum.
	(CallStack::Priv::build_widget): Add a "binary" column that
	contains the name of the binary the frame symbol comes from. This
	is only set if when no debug info is present. Make the columns
	be resizable and reorderable.
	(CallStack::Priv::append_frames_to_tree_view): Set the "binary"
	column to the Frame::library() content.

2010-08-29 14:48:29 -0700  Hubert Figuiere <hub@figuiere.net>

	Merge the Call Stack and Variables into one tab: Context. (Closes: #424060)
	* nmv-dbg-perspective.cc: Change the UI to merge the tabs.
	* menus.xml: Change the actions for the code changes.
	* nemiver-dbgperspective.schemas: New gconf key to save the paned value.

2010-09-07  Claude Paroz <claude@2xlibre.net>

	Fix glade prefix in POTFILES.in

2010-09-07  Claude Paroz <claude@2xlibre.net>

	Add gettext/glade prefix to .ui files in POTFILES.in

2010-09-07  Dodji Seketeli <dodji@redhat.com>

	Left over from previous commit
	* src/persp/dbgperspective/nmv-registers-view.cc (Priv::Priv):
	Remove unnecessary assignation.

2010-09-07  Christophe Augier <christophe.augier@gmail.com>

	Properly initialize RegistersView (Closes: #622796)
	* src/persp/dbgperspective/nmv-registers-view.cc
	(RegistersView::Priv::first_run): New member flag.
	(RegistersView::Priv::finish_handling_debugger_stopped_event):
	Remove the previous static first_run flag from here as it is now a
	member of RegistersView::Priv.
	(RegistersView::clear): Flag the object as needing initialization
	after we cleared it.

2010-09-07  Dodji Seketeli <dodji@redhat.com>

	Bump version to 0.8.0
	* configure.ac: Bump version to 0.8.0

2010-08-25 20:35:57 -0700  Hubert Figuiere <hub@figuiere.net>

	Remove libglademm dependency and replace with GtkBuilder (Closes: #590817)
	* configure.ac: remove libglademm detection
	* glade/*: renamed to ui/*
	* src/persp/dbgperspective/glade/*.glade: renamed to src/persp/dbgperspective/ui/*.ui
	* */Makefile.am: adjust following the renaming of glade to ui.
	* */*.{h,cc}: replace anything Glade with GtkBuilder.

2010-09-06  Dodji Seketeli <dodji@redhat.com>

	Never disassemble an empty address range
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(on_conf_key_changed_signal): The number of instructions to
	disassemble should never be 0, otherwise we'd ask GDB for zero
	instrs to disassemble. Not great.
	(disassemble_and_do, disassemble_around_address_and_do): Assert that.

2010-09-06  Dodji Seketeli <dodji@redhat.com>

	fuzzy address search when looking from insns
	* src/uicommon/nmv-source-editor.h (assembly_buf_addr_to_line):
	Add a bool to approximate the address we were asked for, when
	needed.
	(scroll_to_address): Likewise.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::get_smallest_range_containing_address):
	Return range values even when the result is not
	common::Range::VALUE_SEARCH_RESULT_EXACT. Add comment.
	(assembly_buf_addr_to_line): Add a bool to approximate the address
	we were asked for, when needed. Add comment.
	(scroll_to_address): Likewise.
	(move_where_marker_to_address): Likewise.
	(remove_visual_breakpoint_from_address): Adapt to
	assembly_buf_addr_to_line change.
	(set_visual_breakpoint_at_address): Likewise.
	(place_cursor_at_address): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc (set_where):
	Add a bool to approximate the address to set the
	where pointer to in case the IP address isn't present in the
	assembly.
	(apply_decorations_to_asm): Likewise. Propagate the address
	approximation request to set_where.
	(switch_to_asm): Likewise. Use apply_decorations_to_asm directly instead of
	apply_decoration. Propage the address approximation request.
	(create_source_editor): Adapt to the change in
	SourceEditor::assembly_buf_addr_to_line.
	(on_breakpoint_go_to_source_action): Adapt to the change in
	SourceEditor::scroll_to_address.
	(on_debugger_asm_signal2, on_debugger_asm_signal3)
	(on_debugger_asm_signal4): When we received the asm from the
	engine, approximate the IP address when decorating or scrolling to
	the instructions. This should hopefully prevent us -- in a robust
	way -- from infinite recursion when the IP address is not present
	in the asm. Why the IP address is not present in the asm will be
	something to address in the engine. In the mean time we must be
	liberal in what we accept.
	(pump_asm_including_address): Pass the address by reference.

2010-09-06  Dodji Seketeli <dodji@redhat.com>

	Fix Asm::empty
	* src/common/nmv-asm-instr.h (Asm::empty): Don't forget the case
	of when the asm is a pure asm instr.

2010-09-06  Dodji Seketeli <dodji@redhat.com>

	Add a bunch of operators to Address
	* src/common/nmv-address.[cc|h] (operator<, operator>, operator<=)
	(operator>=, operator==(const Address&)): New operators.
	(operator==(size_t), operator== (const std::string)): Turn these
	operators into member operators, instead of friend.

2010-09-05  Dodji Seketeli <dodji@redhat.com>

	Update POTFILE.in after moving files around
	* po/POTFILES.in (glade/locatefiledialog.glade)
	(src/uicommon/nmv-locate-file-dialog.cc): These are the
	destination of the moving of
	src/persp/dbgperspective/glade/locatefiledialog.glade and
	src/persp/dbgperspective/nmv-locate-file-dialog.cc

2010-09-05  Dodji Seketeli <dodji@redhat.com>

	Add more comments to nmv-range.h
	* src/common/nmv-range.h: Add comments.

2010-09-05  Dodji Seketeli <dodji@redhat.com>

	Use a fuzzy matching scheme when searching an @
	* src/common/nmv-range.h (Range::ValueSearchResult): New enum.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::get_smallest_range_containing_address): New
	function.
	(address_2_line): Use it. When asked the line matching an address
	@, if @ is not present in the buffer, find the range of addresses
	that encloses @, and return the line matching the uppper bound of
	that address range.

2010-09-05  Dodji Seketeli <dodji@redhat.com>

	Disassemble only from addresses given by GDB
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(disassemble_around_address_and_do): Don't try to disassemble at
	addresses that are "before" the address we were asked to
	disassemble, after all. Starting at the wrong address can lead to
	mis-disassembling.

2010-09-05  Dodji Seketeli <dodji@redhat.com>

	Don't barf when the @ of a bp isn't available yet
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(apply_decorations_to_asm): Don't emit error logs when a breakpoint
	can't be decorated because its address is not within the range of
	addresses currently being displayed. Add some comments.

2010-09-05  Dodji Seketeli <dodji@redhat.com>

	Disassemble breakpoint locations on demand
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(on_breakpoint_go_to_source_action): In disassembly mode, if the
	user double clicks on a breakpoint descriptor in the status
	notebook and if that breakpoint address is not within the range of
	addresses currently displayed, disassemble the memory aroung the
	breakpoint address and scroll to there.

2010-08-29  Dodji Seketeli <dodji@redhat.com>

	Forgot to add nmv-asm-utils.cc in a previous commit
	* src/common/nmv-asm-utils.cc: New file

2010-08-29  Dodji Seketeli <dodji@redhat.com>

	Do not hang on disass 1st insn of a function.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(pump_asm_including_address): Call
	disassemble_around_address_and_do, not disassemble_and_do.
	(DBGPerspective::disassemble_around_address_and_do): Always try to
	disassemble one insn before the @ we were asked to
	disassemble. Otherwise, sometimes, we might miss one insn being
	around the @ we were asked to start disassemble from. That miss
	triggers an infinite loop where we look for the insn at the
	starting @ of the range in the resulting asm. As that insn is
	missing, we try to disass it again. It's missing again so we try
	to disass it again etc ...

2010-08-29  Dodji Seketeli <dodji@redhat.com>

	Move core asm handling lower in the stack.
	* src/dbgengine/nmv-asm-utils.h: Move content from here to ...
	* common/nmv-asm-utils.h: ... here.
	* common/nmv-asm-utils.cc: New file.
	* src/common/Makefile.am: Add nmv-asm-utils.[h|cc] to the build
	system.
	* src/dbgengine/Makefile.am: Remove nmv-asm-utils.[h|cc] from the
	build system.
	* src/dbgengine/nmv-gdbmi-parser.cc: Don't include nmv-asm-utils.h
	anymore.
	* tests/test-disassemble.cc: Include common/nmv-asm-utils.h
	instead of just nmv-asm-utils.h.
	* tests/test-gdbmi.cc: Likewise.
	* src/common/nmv-env.h (find_file, find_file_absolute_or_relative)
	(read_file_line): Declare ...
	* src/common/nmv-env.cc (find_file, find_file_absolute_or_relative)
	(read_file_line): ... new functions.
	* src/common/nmv-str-utils.h (is_buffer_valid_utf8)
	(ensure_buffer_is_in_utf8): Declare ...
	* src/common/nmv-str-utils.cc (is_buffer_valid_utf8)
	(ensure_buffer_is_in_utf8): ... new functions.
	* src/common/nmv-ustring.h (UString::split_to_list): Declare new function.
	* src/common/nmv-ustring.cc (split_base): New function template.
	(UString::split): Use the new splite_base function template.
	(UString::split_to_list): Define new function. Uses splite_base.
	* src/uicommon/nmv-dialog.[h|cc]: Moved here from
	src/persp/dbgperspective/nmv-dialog.[h|cc].
	(Dialog::Priv::Priv): Support loading glade file from the "global"
	glade install dir of Nemiver as well as from the plugins glade
	install dir.
	* glade/locatefiledialog.glade: Moved here from
	src/persp/dbgperspective/glade/locatefiledialog.glade.
	* glade/Makefile.am: Add locatefiledialog.glade file to build system.
	* src/uicommon/nmv-locate-file-dialog.[h|cc]: Moved here from
	src/persp/dbgperspective/nmv-locate-file-dialog.[h|cc].
	* src/uicommon/Makefile.am: Add nmv-dialog.[h|cc] and
	nmv-locate-file-dialog.cc to the build system.
	* src/uicommon/nmv-ui-utils.cc|h (ask_user_to_select_file)
	(find_absolute_path_or_ask_user, find_file_and_read_line): New
	functions. Moved here from DBGPerspective and hacked to fit in here.
	* src/uicommon/nmv-source-editor.cc|h
	(SourceEditor::get_file_mime_type)
	(SourceEditor::setup_buffer_mime_and_lang)
	(SourceEditor::create_source_buffer)
	(SourceEditor::load_file, SourceEditor::add_asm)
	(SourceEditor::load_asm): New functions. Mostly the result of
	moving their counterparts from DBGPerspective to here. They got
	also hacked to use new support functions from the common::env and
	ui_utils namespace.
	* src/persp/dbgperspective/glade/locatefiledialog.glade: Moved to
	glade/locatefiledialog.glade.
	* src/persp/dbgperspective/glade/Makefile.am: Remove
	locatefiledialog.glade from the build system here.
	* src/persp/dbgperspective/Makefile.am: Remove nmv-dialog.[cc|h] and
	nmv-locate-file-dialog.[h|cc] from the build system here.
	* src/persp/dbgperspective/nmv-dbg-perspective.h (load_asm): Remove.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc (log_asm_insns)
	(get_file_mime_type, setup_buffer_mime_and_lang)
	(create_source_buffer, load_file, load_asm, write_asm_instr)
	(write_asm_instr, add_asm, read_file_line): Remove these
	functions. Actually they got moved to lower level layers in the
	stack, i.e, mostly into nmv-source-editor.cc, nmv-ui-utils.cc, and
	nmv-env.cc.
	(get_global_search_paths): get_source_dirs got renamed into this.
	(DBGPerspective::Priv::session_search_paths): Renamed
	DBGPerspective::Priv::search_paths into this.
	(DBGPerspective::Priv::global_search_paths): Renamed
	DBGPerspective::Priv::source_dirs into this.
	(Priv::get_supported_encodings): New function.
	(Priv::load_file): New function. Use get_supported_encodings and
	the new SourceEditor::load_file.
	(find_absolute_path): Use the new
	common::env::find_file_absolute_or_relative.
	(find_absolute_path_or_ask_user): Use the new
	ui_utils::find_absolute_path_or_ask_user.
	(get_or_append_asm_source_editor): Use the new
	SourceEditor::create_source_buffer.
	(find_file_in_source_dirs): Use the new common::env::find_file.
	(open_file_real): Use the Priv::load_file, instead of the new
	defunct load_file.
	(open_asm): Use the new SourceEditor::load_asm instead of the
	defunct load_asm.
	(switch_to_asm): use the new
	SourceEditor::setup_buffer_mime_and_lang and SourceEditor::load_asm.
	(switch_to_source_code): Use the new
	SourceEditor::get_file_mime_type,
	SourceEditor::setup_buffer_mime_and_lang and Priv::load_file.
	(reload_file): Use the Priv::load_file.
	(ask_user_to_select_file): Use the new
	ui_utils::ask_user_to_select_file.

2010-08-22  Dodji Seketeli <dodji@gnome.org>

	Update as Asm types changed
	* src/dbgengine/nmv-asm-utils.h: Mechanical replacement of
	IDebugger::AsmInstr, IDebugger::MixedAsmInstr, IDebugger::Asm and
	IDebugger::DisassembleInfo by common::AsmInstr,
	common::MixedAsmInstr, common::Asm and common::DisassembleInfo.
	* src/dbgengine/nmv-dbg-common.h: Likewise.
	* src/dbgengine/nmv-gdb-engine.cc: Likewise.
	* src/dbgengine/nmv-gdb-engine.h: Likewise.
	* src/dbgengine/nmv-gdbmi-parser.cc: Likewise.
	* src/dbgengine/nmv-gdbmi-parser.h: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.h: Likewise.
	* tests/test-disassemble.cc: Likewise.
	* tests/test-gdbmi.cc: Likewise.

2010-08-22  Dodji Seketeli <dodji@gnome.org>

	Move asm types to src/common
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Asm)
	(IDebugger::AsmInstr, IDebugger::MixedAsmInstr, IDebugger::Asm)
	(IDebugger::DisassembleInfo): Move these types to ...
	* src/common/nmv-asm-instr.h: ... here.
	* src/common/Makefile.am: Add the new nmv-asm-instr.h to the build
	system.

2010-09-06  Dodji Seketeli <dodji@redhat.com>

	Search from current insert point (Closes: #628886)
	* src/uicommon/nmv-source-editor.cc (do_search): By default search
	from the current insertion point, if it exists.

2010-09-01  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-08-29  Dodji Seketeli <dodji@gnome.org>

	Fix follow-fork-mode thinko
	* src/dbgengine/nmv-gdb-engine.cc (Priv::launch_gdb_and_set_args):
	Always set follow-fork mode.

2010-08-28  Mario Blättermann <mariobl@gnome.org>

	[i18n] Updated German translation

2010-08-27  Dodji Seketeli <dodji@redhat.com>

	Selecting a frame w/o debug info disassembles it
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_frame_selected_signal): Support disassembling
	when selecting a frame that has no debug info.

2010-08-25  Petr Kovar <pknbe@volny.cz>

	Update Czech translation by Marek Cernocky

2010-08-22  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-08-21  Dodji Seketeli <dodji@gnome.org>

	Mark more strings for translation (Closes: 626079)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::init_actions): Mark "Toggle _Breakpoint" and
	"Enable/Disable Breakpoint" strings as translatable. Update their
	comments.

2010-08-21  Dodji Seketeli <dodji@gnome.org>

	Support multibytes string parsing (Closes: #62730)
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_c_string_body): When parsing strings, don't
	expect one byte == one character. Rather, eat up bytes that aren't
	characters.
	* tests/test-gdbmi.cc (test_str3): New test.
	(init_unit_test_suite): Add the new test_str3 test to the suite.

2010-08-21  Dodji Seketeli <dodji@gnome.org>

	String thinko (Closes: #625706)
	* src/persp/dbgperspective/glade/preferencesdialog.glade: String
	should not be in French, but rather in English.

2010-08-16  Leonid Kanter <leon@asplinux.ru>

	added Russian translation from Alex 'mainframe' Z <alex.mainframe@gmail.com>

2010-08-14  Christian Kirbach <Christian.Kirbach@googlemail.com>

	Updated German translation

2010-08-13  Yinghua Wang <wantinghard@gmail.com>

	Add Simplified Chinese translation.

2010-08-07  Dodji Seketeli <dodji@gnome.org>

	Add more logging
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::get_breakpoint_number,
	DBGPerspective::toggle_breakpoint): Add logging.

2010-08-07  Dodji Seketeli <dodji@gnome.org>

	Handle assembly buffer when deleting breakpoints
	* src/uicommon/nmv-source-editor.h
	(SourceEditor::remove_visual_breakpoint_from_line): Change
	declaration to return a boolean.
	(SourceEditor::remove_visual_breakpoint_from_address): New
	function declaration.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::remove_visual_breakpoint_from_line): Return a
	boolean.
	(SourceEditor::remove_visual_breakpoint_from_address): New
	function.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::delete_visual_breakpoint): Handle assembly buffer.

2010-08-07  Dodji Seketeli <dodji@gnome.org>

	Lookup files in the inferior's directory
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::find_file_in_source_dirs): Lookup files in the
	directory of the binary too.

2010-08-04  Petr Kovar <pknbe@volny.cz>

	Update Czech translation by Marek Cernocky

2010-07-31  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-07-29  Dodji Seketeli <dodji@gnome.org>

	Avoid breaking in main twice when restarting
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(execute_program): Don't reset breakpoints into main when
	restarting a program.

2010-07-28  Jonathon Jongsma <jonathon@quotidian.org>

	Fix the sourceview configure check for breakpoint setting

2010-07-24  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-07-24  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-07-24  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-07-24  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-07-24  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-07-22  Dodji Seketeli <dodji@redhat.com>

	Ask the user to locate a given file only once
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::find_absolute_path_or_ask_user): Add a new parm
	to avoid asking the user to locate files she choosed to ignore
	once.
	(DBGPerspective::read_file_line): Turn back to asking the user to
	locate the file here. She'll have to do it only once for each file.

2010-07-22  Dodji Seketeli <dodji@redhat.com>

	Don't query mixed asm files (Closes: #624971)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::read_file_line): Don't try to ask the user if we
	don't find the file path otherwise it can turn out to be extremely
	annoying.

2010-07-22  Dodji Seketeli <dodji@redhat.com>

	Fix error when showing mixed asm/source
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::address_2_line): Do not return returns the
	previous address. This is useless and can lead to issues with
	mixed source/assembly, where the previous line can be a source
	one.
	(SourceEditor::assembly_buf_addr_to_line_previous): Remove this
	useless function definition.
	* src/uicommon/nmv-source-editor.h
	(SourceEditor::assembly_buf_addr_to_line_previous): Remove fn declaration.

2010-07-19  Dodji Seketeli <dodji@redhat.com>

	Fix clicking in the gutter with gsv >= 2.10
	* configure.ac (WITH_SOURCEVIEWMM_2_10): New macro defined when
	Nemiver is compiled with a version of gtksourceview-2 >= 2.10.
	* src/uicommon/nmv-source-editor.cc
	(nemiver::on_line_mark_activated_signal): New callback.
	(nemiver::SourceView::SourceView): Use it. Connect to the
	line-mark-activated signal if we are compiled with a
	gtksourceview-2 >= 2.10
	(nemiver::SoureView::do_custom_button_press_event_handling): Don't
	compile this function if we compile against a gtksourceview-2 < 2.10.
	(nemiver::SourceView::on_button_press_event): Don't call
	do_custom_button_press_event_handling if we compile against
	gtksourceview-2 < 2.10

2010-07-18  Dodji Seketeli <dodji@redhat.com>

	Fix compilation with gcc 4.5
	* fork-parent.cc (main): Use the simpler execv instead of execve
	and pass a non-null second argument to make gcc 4.5 happy.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Allow pumping just one asm instruction.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::disassemble_and_do): Add a new parm to pump addresses
	tight. I.e. to pump just one instruction.
	(DBGPerspective::load_file): Likewise. Adjust when calling disassemble_and_do.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Handle restart when a child process is involved
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): Unconditionnaly delete the
	breakpoints that were previously set whether we are starting a new
	program or restarting the previous one.  When restarting the
	previous program without setting new breakpoints, make sure to
	re-set the breakpoints there were in effect before the
	restart. When starting a new program, do not bother about the
	breakpoints in effect for the previous program. They have been
	deleted and rightly so.
	(DBGPerspective::run): When asked for, properly restart the
	previous program if we have its path. Remove unnecessary cruft.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Don't loose track when following a child process
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::load_program): Do
	not stop on SIGHUP not pass it to target. This is useful to avoid
	loosing track when following the child process during a fork/exec
	combination.

2010-06-22  Dodji Seketeli <dodji@redhat.com>

	Allow breaking on fork/exec syscalls
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(Priv::SetBreakpointDialog::Priv): Add combo box entries to break
	on fork, vfork and exec syscalls.
	* test/fork-child.cc: New test.
	* test/fork-parent.cc: Likewise.
	* tests/Makefile.am: Add the files to the build system.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_breakpoint): Don't require the addr attribute
	to be present in breakpoint results.

2010-05-06  Dodji Seketeli <dodji@gnome.org>

	Support follow-fork-mode setting (Closes: #581377)
	* src/common/nmv-env.cc (CONF_KEY_FOLLOW_FORK_MODE): Define new
	gconf key.
	* src/persp/dbgperspective/nmv-conf-keys.h: Declare new key
	CONF_KEY_FOLLOW_FORK_MODE.
	* src/dbgengine/nmv-gdb-engine.cc (CONF_KEY_FOLLOW_FORK_MODE):
	declare new key.
	(struct GDBEngine::Priv)<follow_fork_mode>: New attribute.
	Initialize it to "parent".
	(GDBEngine::Priv::launch_gdb_and_set_args): Set the default
	follow-fork-mode when launching GDB.
	(GDBEngine::Priv::set_debugger_parameter): Factorize this out
	from ...
	(GDBEngine::set_debugger_parameter): ... here. Use the new
	GDBEngine::Priv::set_debugger_parameter.
	(GDBEngine::Priv::read_default_config,
	GDBEngine::Priv::on_conf_key_changed_signal): New fns.
	(GDBEngine::Priv::on_conf_key_changed_signal):
	(GDBEngine::Priv::get_conf_mgr): Do not create our own conf mgr
	here. Rather, use the one passed to us at GDBEngine::do_init time.
	(GDBEngine::do_init): Connect to the value_changed_signal of the
	conf manager we are initialized with.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::do_init): Don't
	pass safeptrs by reference.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::do_init): Likewise.
	* src/persp/dbgperspective/glade/preferencesdialog.glade: Add
	UI to set follow-fork-mode.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc
	(PreferencesDialog::Priv::on_follow_fork_mode_toggle_signal,
	PreferencesDialog::Priv::update_follow_fork_mode_key):
	New fns.
	(PreferencesDialog::Priv::init): Get the radio buttons to set the
	follow-fork-mode. Connect their toggled signal to the new
	PreferencesDialog::Priv::on_follow_fork_mode_toggle_signal
	(PreferencesDialog::Priv::update_widget_from_debugger_keys):
	Pull the CONF_KEY_FOLLOW_FORK_MODE key value and initialize the
	follow-fork-mode radio buttons with it.
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas:
	Add a new string key /apps/nemiver/dbgperspective/follow-fork-mode.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Do not try to unmonitor disassembly content.
	* nmv-dbg-perspective.cc (DBGPerspective::is_asm_title): New function.
	(DBGPerspective::do_unmonitor_file): Use it.
	(DBGPerspective::get_asm_title): Cleanup.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Better handling of frame setting.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::create_source_buffer): New function.
	(DBGPerspective::set_where): Remove the frame file path parm from
	this function. It now only needs the Frame. Adjust the body of the
	function to call the proper overload of DBGPerspective::set_where
	depending on if the frame has debug info or not. Make sure all the
	overloads of DBGPerspective::set_where bring the proper source
	editor to the front.
	(DBGPerspective::on_debugger_stopped_signal): Use the new
	simpler DBGPerspective::set_where.
	(DBGPerspective::on_frame_selected_signal): Likewise.
	(DBGPerspective::open_asm): No need to bring the source editor to
	the front anymore. Also, factorize ...
	(DBGPerspective::get_or_append_asm_source_editor): ... out.
	Use DBGPerspective::create_source_buffer.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Fix address overflowing during disassembling
	* src/common/nmv-range.h (Range::min, Range::max): Use size_t
	instead of int for the parm type. This prevents overflowing the
	addresses when trying to disassemble.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Avoid printing unnecessary error messages
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::assembly_buf_addr_to_line): Do not necessarily spit error
	messages when returning false here.
	(SourceEditor::assembly_buf_addr_to_line_previous): Likewise.
	(SourceEditor::assembly_buf_line_to_addr): Likewise.

2010-07-17  Dodji Seketeli <dodji@redhat.com>

	Fix a thinko
	* src/persp/dbgperspective/nmv-dbg-perspective.cc (Priv::Priv):
	Properly initialize num_instr_to_disassemble.

2010-05-07  Dodji Seketeli <dodji@redhat.com>

	Fix mixed asm handling
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::write_asm_instr): Return a boolean when a non
	empty asm line has been writen. Line with just '\n' are
	considered empty. Also, when writing mixed asms, sometime, GDB
	refers to source line 0, with an empty asm instrs set. This is weird
	since line numbers should start at 1. So ignore asm instrs at
	line 0. Do not add '\n' at the end of non empty lines. '\n' is
	added between two lines, though.
	(DBGPerspective::add_asm): Do not add '\n' after empty lines.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::line_2_address): Don't consider non-number
	strings as addresses.

2010-04-28  Dodji Seketeli <dodji@gnome.org>

	Support mixed asm insns with empty insn list
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Asm::empty): New fn.
	(IDebugger::Asm::instr): If the Asm is a mixed src/asm insn that
	contains an empty list of asm instr, throw an exception.
	* src/dbgengine/nmv-gdb-engine.cc
	(OnDisassembleHandler::do_handle): Do not crash if a mixed
	src/asm instruction contains an empty asm instr list.
	* tests/test-gdbmi.cc (test_disassemble): Add a regression test
	in which a mixed src/asm has an empty asm insns list.

2010-04-28  Dodji Seketeli <dodji@gnome.org>

	Flag pending breakpoints as such
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::update_breakpoint): If the breakpoint
	has an empty address, it means it's pending. Write a PENDING
	string in the bp's address column. This fixes a regression
	introduced during the move to the new Address type.

2010-04-27  Dodji Seketeli <dodji@gnome.org>

	Support BP setting to an address
	* src/persp/dbgperspective/glade/setbreakpointdialog.glade:
	Add UI to set a breakpoint to a binary address.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.h:
	(enum SetBreakpointDialog::Mode)<MODE_BINARY_ADDRESS>: New enum
	member.
	(SetBreakpointDialog::address): Declare accessor for the binary address.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc
	(SetBreakpointDialog::Priv::Priv): Initialize the new
	address entry and binary address radio button widgets of the
	breakpoint setting dialog.
	(SetBreakpointDialog::Priv::update_ok_button_sensitivity):
	Handle the new MODE_BINARY_ADDRESS.
	(SetBreakpointDialog::Priv::on_radiobutton_changed): Update
	sensitivity for the address entry widget whenever the state of
	one of the radio buttons changes. Remove useless code.
	(SetBreakpointDialog::Priv::mode): Handle the new
	MODE_BINARY_ADDRESS.
	(SetBreakpointDialog::address): Define new accessors.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::set_breakpoint_from_dialog): Handle setting a
	breakpoint to an address.

2010-04-27  Dodji Seketeli <dodji@gnome.org>

	Validate decimal and hexa numbers
	* src/common/nmv-str-utils.h (string_is_decimal_number): Declare
	new fn.
	* src/common/nmv-str-utils.cc (string_is_decimal_number): Define
	new fn.
	(string_is_number): Validate decimal and hexa numbers using
	string_is_decimal_number and string_is_hexa_number.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::analyse_mixed_asm_instrs): Adjust. Use
	str_utils::string_is_decimal_number to validate decimal numbers,
	instead of the former string_is_number that now validate decimal
	and hexa numbers.

2010-04-27  Dodji Seketeli <dodji@gnome.org>

	Make sure Addresses are valid
	* src/common/nmv-address.cc (Address::operator=,
	Address::Address(const string&)): Validate the
	the address string.

2010-04-27  Dodji Seketeli <dodji@gnome.org>

	Debugger preference dialog cleanup
	* src/persp/dbgperspective/glade/preferencesdialog.glade:
	Make the labels appear on the left of the data entry widgets.

2010-04-26  Dodji Seketeli <dodji@gnome.org>

	refactor session cleaning actions for new inferior
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_program): Factorize session cleaning
	actions when starting a new inferior.

2010-04-26  Dodji Seketeli <dodji@gnome.org>

	Don't clear search dir paths when restarting the inferior
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::execute_last_program_in_memory): Do not clear
	session data when restarting the same inferior. E.g. do not
	clear the search dirs path.

2010-04-26  Dodji Seketeli <dodji@gnome.org>

	Support asm single stepping
	* src/dbgengine/nmv-i-debugger.h (IDebugger::step_over_asm):
	Renamed IDebugger::step_instruction into this.
	(IDebugger::step_in_asm): Declare new fn.
	* src/dbgengine/nmv-gdb-engine.h: Likewise.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::step_over_asm):
	Renamed GDBEngine::step_instruction into this.
	(GDBEngine::step_in_asm): Define new fn.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStackCols::address): New column definition.
	(CallStackCols::CallStackCols): Add the new column.
	(CallStack::Priv::build_widget): Append a new graphical
	address column.
	(CallStack::Priv::append_frames_to_tree_view): Populate the new
	address column. Do not show the address in the location column
	when the frame has no location.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_step_in_asm_action,
	DBGPerspective::on_step_over_asm_action,
	DBGPerspective::step_in_asm, DBGPerspective::step_over_asm): New fns.
	(DBGPerspective::get_current_source_editor): Add a flag to
	decide whether to load a new source editor if the notebook is
	empty.
	(DBGPerspective::on_debugger_command_done_signal): Adjust for
	IDebugger::step_instruction --> IDebugger::step_over_asm rename.
	(DBGPerspective::init_actions): Add new actions to do asm step
	into, asm step over. Add <control>-A shortcut for "switch to
	asm" and <control><shift>-A for switch to source.
	(DBGPerspective::get_source_editor_from_path): Avoid
	dereferencing an iterator that points to the end of a container.
	(DBGPerspective::apply_decorations_to_source): Use pointer
	comparison to compare the source editor to decorate with the
	current source editor. Before this change we where comparing the
	file paths. That can lead to some misses when we got the source
	editor from a non absolute path that got resolved by the user.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::get_first_asm_address,
	SourceEditor::Priv::get_last_asm_address): New fns.
	(SourceEditor::get_assembly_address_range): Use them.
	* src/persp/dbgperspective/menus/menus.xml: Add
	StepInAsmMenuItem and StepOverAsmMenuItem menu items.

2010-04-25  Dodji Seketeli <dodji@redhat.com>

	Show source code lines in mixed asm/src mode
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_stopped_signal): Make sure to pump
	more asm insns in if necessary.
	(DBGPerspective::read_file_line): New fn.
	(DBGPerspective::write_asm_instr): Turn this into a member
	function now. Also, for  mixed asm/source asm, show the actual
	source code line. If not possible, then show the source code
	line markers.
	(DBGPerspective::set_where,
	DBGPerspective::pump_asm_including_address,
	DBGPerspective::disassemble_and_do): Add logging.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::move_where_marker_to_line): Likewise.

2010-04-25  Dodji Seketeli <dodji@redhat.com>

	Be more liberal when parsing asm instrs
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::analyse_pure_asm_instrs): Accept TUPLEs that have
	less than the 4 usual results: address, func-name, offset,
	instr. Some instrs like NOP can have only address and instr.
	Also, don't die on unknown RESULTs. Added a comment.
	(GDBMIParser::analyse_mixed_asm_instrs): Update this likewise.
	Added a comment.
	* tests/test-gdbmi.cc: Add a new test case reported by Luca
	Bruno at
	http://mail.gnome.org/archives/nemiver-list/2010-April/msg00003.html

2010-04-25  Dodji Seketeli <dodji@redhat.com>

	Adjust test-disassemble.cc after Asm type change.
	* tests/test-disassemble.cc (on_instructions_disassembled_signal1):
	Adjust due to the IDebugger::AsmInstr -> IDebugger::Asm switch.

2010-04-25  Dodji Seketeli <dodji@redhat.com>

	Initial front end support of mixed asm/src mode
	* src/persp/dbgperspective/glade/preferencesdialog.glade: Add
	debugger preferences: Asm style, nb of instrs to disasm and path
	to debugger.
	* src/persp/dbgperspective/nmv-conf-keys.h (CONF_KEY_ASM_STYLE_PURE,
	CONF_KEY_GDB_BINARY, CONF_KEY_DEFAULT_NUM_ASM_INSTRS): Declare
	new GCONF keys.
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(DGBPerspective::load_asm): Update for the IDebugger::AsmInstr to
	IDebugger::Asm switch.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBG_PERSPECTIVE_ASM_DOMAIN): Define new logging domain for asm
	stuff.
	(CONF_KEY_ASM_STYLE_PURE, CONF_KEY_DEFAULT_NUM_ASM_INSTRS):
	define new gconf keys.
	(log_asm_insns): New function to dump asm insns being slammed
	into a source buffer.
	(DBGPerspective::on_debugger_asm_signal1,
	DBGPerspective::on_debugger_asm_signal2,
	DBGPerspective::on_debugger_asm_signal3,
	DBGPerspective::on_debugger_asm_signal4,
	DBGPerspective::load_asm,
	DBGPerspective::open_asm,
	DBGPerspective::switch_to_asm,
	DBGPerspective::add_asm): Update for the IDebugger::AsmInstr to
	IDebugger::Asm switch.
	(DBGPerspective::on_conf_key_changed_signal): Listen to changes
	of the value of GConf keys CONF_KEY_DEFAULT_NUM_ASM_INSTRS and
	CONF_KEY_ASM_STYLE_PURE.
	(DBGPerspective::append_source_editor): Monitor only the changes
	of source type buffers, because asm type buffers' content don't
	come from an on-disk file.
	(DBGPerspective::read_default_config): Read the value of GConf
	keys CONF_KEY_DEFAULT_NUM_ASM_INSTRS, CONF_KEY_ASM_STYLE_PURE.
	(write_asm_instr): New fn.
	(DBGPerspective::disassemble_and_do,
	DBGPerspective::disassemble_around_address_and_do): Fetch at least
	N asm instructions. N being the value of the gconf key
	CONF_KEY_DEFAULT_NUM_ASM_INSTRS. Call the debugger engine
	disassembler with the right asm style (pure asm or mixed
	src/asm), depending on the value of the CONF_KEY_ASM_STYLE_PURE
	key.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc
	(PreferencesDialog::Priv::on_asm_style_toggled_signal,
	PreferencesDialog::Priv::on_num_asms_value_changed_signal,
	PreferencesDialog::Priv::on_gdb_binary_file_set_signal): New
	signal handlers.
	(PreferencesDialog::Priv::init): Add some comments.
	Initialize the value of the pure/mixed asm radio buttons, the
	debfault num asm instrs spin button and the gdb binary path
	chooser button.
	(PreferencesDialog::Priv::update_asm_style_keys,
	PreferencesDialog::Priv::update_default_num_asm_instrs_key,
	PreferencesDialog::Priv::update_gdb_binary_key,
	PreferencesDialog::Priv::update_widget_from_debugger_keys): New fns.
	(PreferencesDialog::Priv::update_widget_from_conf): Call
	PreferencesDialog::Priv::update_widget_from_debugger_keys.
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas:
	Add new keys: /apps/nemiver/dbgperspective/asm-style-pure,
	and /apps/nemiver/dbgperspective/default-num-asm-instrs.

2010-04-25  Dodji Seketeli <dodji@redhat.com>

	Clean up Address type and adjust client code
	* src/common/nmv-address.h
	(Address::operator const std::string& () const): Remove.
	(Address::to_string() const): New fn.
	(Address::operator<< (Stream &a_os, const Address &a)): New
	stream operator template.
	(Address::Address(const std::string&)): Make this explicit to avoid
	ambiguity when streaming a string to an ostream.
	* src/common/nmv-address.cc: Adjust.
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_frame,
	GDBMIParser::parse_breakpoint, GDBMIParser::parse_call_stack):
	Adjust to the Address changes.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Breakpoint): Make
	the m_address member be of Address type.
	(IDebugger::Breakpoint::address, IDebugger::Frame::address): Add a
	non-const fn overload.
	(IDebugger::Frame::has_empty_address): Adjust to the Address
	change.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc
	(BreakpointsView::Priv::update_breakpoint): Likewise.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::append_frames_to_tree_view): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::get_frame_breakpoints_address_range,
	DBGPerspective::set_where, DBGPerspective::create_source_editor,
	DBGPerspective::apply_decorations_to_asm): Likewise.
	* src/uicommon/nmv-source-editor.cc
	(SourceEditor::Priv::address_2_line): Likewise.

2010-04-25  Dodji Seketeli <dodji@redhat.com>

	Backend support for mixed src/asm disassembly
	* src/common/nmv-env.cc (CONF_KEY_GDB_BINARY): New gconf key
	definition.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::MixedAsmInstr,
	IDebugger::Asm): New type.
	(many declarations): Don't use IDebugger::AsmInstr anymore, but
	rather IDebugger::Asm that is a type which basically is an union
	of AsmInstr and MixedAsmInstr.
	(IDebugger::disassemble, IDebugger::disassemble_lines): Add a
	a_pure_asm parm to discriminate between pure asm and mixed
	source/asm disassembling queries.
	* src/dbgengine/nmv-gdb-engine.h: Adjust.
	* src/dbgengine/nmv-gdb-engine.cc (many places): Adjust to the
	IDebugger::Asm usage.
	(GDBEngine::disassemble, GDBEngine::disassemble_lines): Use the new
	a_pure_asm parm.
	* src/dbgengine/nmv-dbg-common.h: Adjust to the
	IDebugger::AsmInstr -> IDebugger::Asm switch.
	* src/dbgengine/nmv-gdbmi-parser.h
	(GDBMIParser::analyse_pure_asm_instrs,
	GDBMIParser::analyse_mixed_asm_instrs): New fns.
	(GDBMIParser::parse_asm_instruction_list): Adjust to the
	IDebugger::AsmInstr -> IDebugger::Asm switch.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::analyse_pure_asm_instrs): Factorize out this from
	GDBMIParser::parse_asm_instruction_list.
	(GDBMIParser::analyse_mixed_asm_instrs): New fn.
	(GDBMIParser::parse_result_record): Adjust to the
	IDebugger::AsmInstr -> IDebugger::Asm switch.
	(GDBMIParser::parse_asm_instruction_list): Likewise.
	Support parsing pure /and/ mixed src/asm instructions.
	* tests/test-gdbmi.cc b/tests/test-gdbmi.cc: Use the new
	dbgengine/nmv-asm-utils.h.
	(test_disassemble): Add a test for mixed src/asm.

2010-04-25  Dodji Seketeli <dodji@redhat.com>

	Add proper streaming operators for asm insns
	* src/dbgengine/nmv-asm-utils.h: New file.
	* src/dbgengine/Makefile.am: Add it to build system.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(operator<<(std::ostream&, const IDebugger::AsmInstr&)): Remove
	because a template of this is now available in the newly added
	nmv-asm-utils.h above.

2010-04-24  Dodji Seketeli <dodji@redhat.com>

	Detect when a string is a number
	* src/common/nmv-str-utils.[cc|] (string_is_number,
	string_is_hexa_number):  New fns.

2010-04-11  Dodji Seketeli <dodji@redhat.com>

	Support disassembly and switching to/from asm view
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Breakpoint):
	make members m_address, m_function, m_expression and m_condition
	use std::string instead of UString. It's un-necessary for these
	to be in utf8. Update their accessors.
	(IDebugger::Frame): Likewise for members m_function_name, and
	m_args and m_library. Make m_address use the new type Address
	instead of UString.
	(IDebugger::Frame::has_empty_address): New function.
	(IDebugger::set_breakpoint): New overload to set a bp at an
	address.
	* src/dbgengine/nmv-gdb-engine.h: Adjust.
	* src/dbgengine/nmv-gdb-engine.cc: Adjust. All addresses are
	typed with the Address type now.
	(GDBEngine::set_breakpoint): New definition.
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_frame,
	GDBMIParser::parse_call_stack, ):
	Adjust to use Address instead of UString.
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::append_frames_to_tree_view): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_asm_signal1,
	DBGPerspective::on_debugger_asm_signal2,
	DBGPerspective::on_debugger_asm_signal3,
	DBGPerspective::on_debugger_asm_signal4,
	DBGPerspective::get_or_append_source_editor_from_path,
	DBGPerspective::open_file_real,
	DBGPerspective::pump_asm_including_address,
	DBGPerspective::is_breakpoint_set_at_address,
	DBGPerspective::breakpoint_and_frame_have_same_file,
	DBGPerspective::get_frame_breakpoints_address_range,
	DBGPerspective::disassemble_and_do,
	DBGPerspective::disassemble_around_address_and_do,
	DBGPerspective::apply_decorations,
	DBGPerspective::apply_decorations_to_asm,
	DBGPerspective::add_asm, write_asm_instr): New fns.
	(DBGPerspective::bring_source_as_current,
	DBGPerspective::load_disassembly,
	DBGPerspective::get_breakpoint_number,
	DBGPerspective::delete_breakpoint,
	DBGPerspective::toggle_breakpoint,
	DBGPerspective::append_visual_breakpoint,
	DBGPerspective::set_where): New overloads. Often refactor
	related overloads to re-use each others.
	(DBGPerspective::get_asm_title): Renamed
	DBGPerspective::get_disassembly_title.
	(DBGPerspective::load_asm): Renamed
	DBGPerspective::load_disassembly. Refactor to use
	DBGPerspective::add_asm.
	(DBGPerspective::open_asm): Renamed DBGPerspective::open_disassembly.
	If the source editor was populated and the where pointer is set,
	then bring the source editor to front.
	(DBGPerspective::switch_to_asm): Renamed
	DBGPerspective::switch_disassembly. Clear the decoration of the
	previous source editor, before switching to the new one.
	Do not set the current line and apply the decoration.
	(DBGPerspective::switch_to_source_code):
	(DBGPerspective::set_breakpoint): Use Address instead of
	UString.
	(DBGPerspective::apply_decorations_to_source): Renamed
	DBGPerspective::apply_decoration_to_text. Make this to act only
	on source code editor.
	(DBGPerspective::on_switch_to_asm_action): Renamed
	DBGPerspective::on_switch_to_disassembly_action.
	(DBGPerspective::on_sv_markers_region_clicked_signal): Renamed
	DBGPerspective::on_source_view_markers_region_clicked_signal.
	Add a SourceEditor* parm to know which editor the source view
	marker was clicked on. When the user clicks on the bp's margin,
	set the breakpoint, wether we are in asm view or text view. In
	assembly view, properly set the bp to the @ of the ligne
	clicked. In source view, properly set the bp to the line # where
	the user clicked.
	(DBGPerspective::on_breakpoint_go_to_source_action): Re-factorize and
	simply logic. Use the new
	DBGPerspective::get_or_append_source_editor_from_path. Handle
	source and asm buffers. If user wanted the source buffer and no
	source could be found, fall back to disassembling instead.
	(DBGPerspective::on_debugger_stopped_signal): Support updating
	the "where pointer" in asm and source mode. If we couldn't set
	the where pointer in source mode (probably b/c we couldn't find
	the source file), then disassemble around the current IP value
	and set the where pointer to the current IP value.
	(DBGPerspective::on_frame_selected_signal): Support setting the
	where pointer either on source or asm view.
	(DBGPerspective::find_absolute_path): Also look for a file of
	the same basename in the search directories before giving up.
	(DBGPerspective::append_source_editor): When trying to add a
	source editor with an empty file name to the notebook, use the
	patch of the source editor as file name.
	(DBGPerspective::get_current_source_editor): When the source
	notebook is empty, try to open the source file corresponding to the
	current frame.
	(DBGPerspective::switch_to_source_code): Clear the decoration
	of the old view before switching to the new one. When applying
	decorations, scroll to the where marker.
	(DBGPerspective::disassemble): Refactor and use the new
	DBGPerspective::disassemble_and_do function
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(IDBGPerspective::load_asm): New fun.
	* src/uicommon/nmv-source-editor.h (SourceEditor::BufferType):
	New type.
	Also declare the new member functions defined above.
	* src/uicommon/nmv-source-editor.cc (struct Line2AddrFunc):
	Remove.
	(SourceEditor::Priv::get_buffer_type,
	SourceEditor::Priv::get_markers,
	SourceEditor::Priv::address_2_line,
	SourceEditor::Priv::line_2_address,
	SourceEditor::get_buffer_type,
	SourceEditor::set_visual_breakpoint_at_address,
	SourceEditor::scroll_to_address,
	SourceEditor::get_assembly_address_range,
	SourceEditor::move_where_marker_to_address,
	SourceEditor::place_cursor_at_line,
	SourceEditor::place_cursor_at_address): New fns.
	(SourceEditor::Priv::NonAssemblyBufContext): Make this hold
	source markers.
	(SourceEditor::Priv::AssemblyBufContext): Likewise. Move
	current_line and current_column here too. Add a current_address
	too.
	(SourceEditor::Priv::switch_to_assembly_source_buffer): If
	called when we are already switched to asm buffer, don't barf.
	(SourceEditor::Priv::switch_to_non_assembly_source_buffer):
	Don't barf if called when we are already switched to source
	buffer.
	(SourceEditor::Priv::on_signal_insertion_moved): Protect with
	try/catch.
	(SourceEditor::Priv::update_line_col_info_from_iter,
	SourceEditor::current_line): Handle both asm and source buffers.
	(SourceEditor::move_where_marker_to_line,
	SourceEditor::unset_where_marker,
	SourceEditor::remove_visual_breakpoint_from_line
	SourceEditor::clear_decorations,
	SourceEditor::SourceEditor::is_visual_breakpoint_set_at_line): Remove
	support for gsvmm 1.xx.
	(SourceEditor::set_visual_breakpoint_at_line): Support gtk+ line
	numbering scheme i.e, line nums starting at 0, instead of 1 like
	GDB.
	(SourceEditor::set_path, SourceEditor::get_path,
	SourceEditor::get_file_name): Support this for asm
	and source bufs.
	(SourceEditor::assembly_buf_addr_to_line): Renamed
	SourceEditor::assembly_buf_loc_to_line. Use
	SourceEditor::Priv::assembly_buf_addr_to_line.
	(SourceEditor::assembly_buf_line_to_addr): Renamed
	SourceEditor::assembly_buf_line_to_loc. Use
	SourceEditor::Priv::line_2_address.
	* tests/test-disassemble.cc (on_stopped_signal): Adjust to
	IDebugger::Frame::function yielding an std::string rather than
	an UString.
	(test_main): Call _exit to avoid a crash at exit.
	* tests/test-gdbmi.cc b/tests/test-gdbmi.cc (tes_stack0): Use
	the new IDebugger::Frame::has_empty_address function.

2010-04-10  Dodji Seketeli <dodji@redhat.com>

	Fix parsing empty asm instrs list.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_asm_instruction_list): Gently handle empty
	asm instructions list.

2010-04-10  Dodji Seketeli <dodji@redhat.com>

	Fix disassembling implementation.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::disassemble):
	Fix absolute addressing of the address range's end.

2010-04-10  Dodji Seketeli <dodji@redhat.com>

	Rename the IDebugger::BreakPoint into IDebugger::Breakpoint
	* src/dbgengine/nmv-i-debugger.h (*): Rename BreakPoint into
	Breakpoint.
	* src/dbgengine/nmv-dbg-common.h: Adjust.
	* src/dbgengine/nmv-gdb-engine.[h|cc: Likewise.
	* src/dbgengine/nmv-gdbmi-parser.[h|cc]: Likewise.
	* src/persp/dbgperspective/menus/menus.xml: Likewise.
	* src/persp/dbgperspective/nmv-breakpoints-view.[h|cc]: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.[cc|h]: Likewise.
	* src/persp/dbgperspective/nmv-sess-mgr.[h|cc]: Likewise.
	* tests/test-breakpoint.cc: Likewise.
	* tests/test-gdbmi.cc: Likewise.
	* tests/test-var-path-expr.cc: Likewise.
	* tests/test-watchpoint.cc: Likewise.

2010-04-10  Dodji Seketeli <dodji@redhat.com>

	Update the Address type
	* src/common/nmv-address.h (Address::empty,
	Address::operator size_t () const, Address::string_size,
	operator==(const Address&, const std::string&),
	operator==(const Address&, size_t), operator[](size_t),
	Address::clear):
	Declare new functions.
	* src/common/nmv-address.cc (Address::empty,
	Address::operator size_t () const, Address::string_size,
	operator==(const Address&, const std::string&),
	operator==(const Address&, size_t), operator[](size_t)):
	Define new functions.
	(Address::Address (const std::string &a)): Chomp the address
	string.
	(Address::operator= (const std::string &a_addr)): Chomp the
	newly assigned string.
	(Address::size): Make this

2010-04-10  Dodji Seketeli <dodji@redhat.com>

	Add new range type
	* src/common/nmv-range.h: New range type declaration/definition.
	* src/common/Makefile.am: Add it to the build system.

2010-04-10  Dodji Seketeli <dodji@redhat.com>

	Support original-location attr on pending breakpoints.
	* src/common/nmv-str-utils.h (extract_path_and_line_num_from_location):
	Remove use of UString in the declaration.
	(chomp): Turn this into a template.
	* src/common/nmv-str-utils.cc (extract_path_and_line_num_from_location):
	Adjust and make it much more robust.
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_breakpoint):
	Adjust to recent (GDB 7?) behaviour wrt PENDING breakpoints.
	Now, the original location is in the original-location
	attribute.

2010-03-07  Dodji Seketeli <dodji@redhat.com>

	ASM <-> Source code switching preliminary support
	* src/uicommon/nmv-source-editor.h (clear_decorations): New
	interface.
	(SourceEditor::*): Renamed all methods that had "composite" in
	their names into method that have "assembly" in their name
	instead.
	* src/uicommon/nmv-source-editor.cc (*):
	Same similar renaming as above.
	Go further by renaming members that have "comp" in their names
	by members that have "asm" in their names instead.
	(SourceEditor::clear_decorations): New definition.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_disassemble_action,
	DBGPerspective::on_switch_to_disassembly_action,
	DBGPerspective::on_debugger_disassembled_signal,
	DBGPerspective::switch_to_disassembly,
	DBGPerspective::switch_to_source_code,
	DBGPerspective::disassemble,
	DBGPerspective::find_absolute_path_or_ask_user,
	DBGPerspective::remove_visual_decorations_from_text): New fns
	declarations and definitions.
	(DBGPerspective::find_absolute_path,
	DBGPerspective::ask_user_to_select_file): Extract these
	functions from DBGPerspective::append_visual_breakpoint.
	(DBGPerspective::append_visual_breakpoint): Use the new
	DBGPerspective::find_absolute_path and
	DBGPerspective::ask_user_to_select_file.
	(DBGPerspective::init_actions): Add menu actions DisAsmMenuItemAction,
	SwitchToAsmMenuItemAction, SwitchToSourceMenuItemAction. Used
	the new DBGPerspective::on_disassemble_action, and
	DBGPerspective::switch_to_source_code as the callbacks for this
	menu actions.
	(DBGPerspective::open_disassembly): If the disassembly tab
	exists already, re-use it.
	(DBGPerspective::open_file): Don't yell if the file path is empty.
	* src/persp/dbgperspective/menus/menus.xml: Add new "Show assembly",
	"Switch to assembly" and "Switch to source" menu items to the
	"debug" menu.

2010-01-10  Dodji Seketeli <dodji@redhat.com>

	Start preping debug perspective to ask for disassembly
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(IDBGPerspective::load_disassembly): New iface.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::get_disassembly_title,
	DBGPerspective::load_disassembly,
	DBGPerspective::open_disassembly): New local methods.
	(DBGPerspective::append_source_editor): Add source editor
	related signal setup here ...
	(DBGPerspective::open_file): ... and remove it from here.
	Also, split ...
	(DBGPerspective::create_source_editor): ... from open_file.
	(DBGPerspective::get_file_mime_type): Split from this and ...
	(DBGPerspective::setup_buffer_mime_and_lang): ... this ...
	(DBGPerspective::load_file): ... from here.

2010-01-10  Dodji Seketeli <dodji@redhat.com>

	March towards composite SourceEditor
	* src/uicommon/nmv-source-editor.cc (SourceEditor::Priv): Move
	SourceEditor::Priv::NonCompositeBufContext::line_col_label here.
	(SourceEditor::Priv::NonCompositeBufContext): Update this
	contructor and split it in two constructors. Also add a
	default constructor.
	(SourceEditor::Priv::CompositeBufContext): Add line to addr
	converters and constructors.
	(SourceEditor::Priv::register_composite_source_buffer): This is
	not a template anymore.
	(SourceEditor::Priv::update_line_col_label,
	SourceEditor::Priv::init): Update access to line_col_label.
	(SourceEditor::Priv::Priv): Initialize line_col_label, update
	access SourceEditor::Priv::non_comp_ctxt as its constructor
	signature changed. Updated the constructors accordingly. Mark
	them explicit as they are no converting constructors.
	(SourceEditor::SourceEditor): Add a flag to know whether the
	source buffer is composite or not.
	(SourceEditor::register_composite_source_buffer): This is no
	longer a template.
	(SourceEditor::composite_buf_loc_to_line,
	SourceEditor::composite_buf_line_to_loc, Line2AddrFunc::operator,
	Addr2LineFunc::operator): New methods.
	* src/uicommon/nmv-source-editor.h (SourceEditor::SourceEditor):
	Declare explicit. Add a flag for composite buffers.
	(SourceEditor::register_composite_source_buffer): No more a
	template.
	(SourceEditor::composite_buf_loc_to_line,
	SourceEditor::composite_buf_line_to_loc): New methods.

2010-01-10  Dodji Seketeli <dodji@redhat.com>

	Iron out the disassembling interface
	* src/dbgengine/nmv-gdb-engine.cc
	(OnDisassembleHandler::do_handle): Call back into the slot
	passed in parameter to the disasemble method invocation.
	(GDBEngine::disassemble): Overhaul. An overload of this uses has
	a slot in parameter. Make the other overloads use it.
	(GDBEngine::disassemble_lines): Renamed the disassemble
	invocation that takes lines in parameter (instead of address)
	into this.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::disassemble):
	Update declarations.
	(GDBEngine::disassemble_lines): Declare new method.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::AsmInstr):  Store
	addresses in strings for now. Might want to change that later to
	store them in a size_t. This is easier for now.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::parse_asm_instruction_list): Address and string
	are now represented in strings.
	* tests/test-disassemble.cc: Update to the ironed out interface.

2010-01-10  Dodji Seketeli <dodji@redhat.com>

	Const-ify some parms in IDebugger.
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::instructions_disassembled_signal): Const-ify the
	IDebugger::DisassembleInfo parameter.

2010-01-10  Dodji Seketeli <dodji@redhat.com>

	More functions to common::str_utils namespace
	* src/common/nmv-str-utils.[cc|h]: (hexa_to_int, int_to_string, split,
	split_set, join, chomp, get_number_of_lines, get_number_of_words,
	printf, vprintf): Ported these here from UString. The plan is to
	remove these from fat UString and adjust client code to make it
	use these instead.

2010-01-10  Dodji Seketeli <dodji@redhat.com>

	New Address type.
	* src/common/Makefile.am: Add nmv-address.[h|cc] to build system
	* src/common/nmv-address.[cc|h]: New files.

2009-12-21  Dodji Seketeli <dodji@redhat.com>

	Started preparing SourceEditor for asm support
	* src/uicommon/nmv-source-editor.h (register_composite_source_buffer,
	register_non_composite_source_buffer, get_composite_source_buffer,
	get_non_composite_source_buffer, switch_to_composite_source_buffer,
	switch_to_non_composite_source_buffer): Declare this new methods of
	SourceEditor.
	* src/uicommon/nmv-source-editor.cc (struct SourceEditor::Priv):
	Reorganised this to hold two contexts: one for composite buffers,
	one for non-composite buffers. Updated the rest of the code to
	match this reorg. The composite buffer code is not yet used, but
	the non-composite one works as before.
	(class SourceEditor::*): Implement the new methods of SourceEditor
	and update the existing one according to the new organisation in
	contexts.

2009-09-20  Dodji Seketeli <dodji@redhat.com>

	Add disassembling backend support
	* src/common/nmv-ustring.h,cc (UString::hexa_to_int): New entry point.
	* src/dbgengine/nmv-dbg-common.h: Make ResultRecord carry
	assembly instructions list.
	* src/dbgengine/nmv-gdbmi-parser.cc,h:
	(operator<<): New streaming operator for IDebugger::AsmInstr.
	(GDBMIParser::parse_asm_instruction_list): New function.
	(GDBMIParser::parse_result_record ): Parse asm instruction lists.
	* src/dbgengine/nmv-gdb-engine.[cc|h],nmv-i-debugger.h:
	(IDebugger::disassemble,
	Added IDebugger::instructions_disassembled_signal): New entry points.
	Wrote a first implementation for these, based on the new
	GDB/MI parsing code that handles instruction disassembling.
	Added new types IDebugger::AsmInstr and IDebugger::DisassembleInfo.
	* tests/test-gdbmi.cc (test_disassemble): New test.
	(test_file_list): Add test_disassemble to the list of tests.
	* tests/Makefile.am,tests/test-disassemble.cc: added a new
	regression test for the disassembling stuff. This does IDebugger
	to debug a program and tries to disassemble parts of it.
	* tests/test-disassemble.cc: New test file.
	* tests/Makefile.am: Add new test above to the build system.

2010-06-20  Dodji Seketeli <dodji@redhat.com>

	Second attempt at fixing testvarwalker
	* src/dbgengine/nmv-gdb-engine.cc
	(OnVariableTypeHandler::can_handle): Look for the "ptype " marker
	in both debugger console and debugger log. Depending on the
	version of GDB, sometimes it's in the debugger console, sometimes
	in the debugger log.
	(OnVariableTypeHandler::do_handle): Remove unnecessary assert.

2010-06-19  Dodji Seketeli <dodji@redhat.com>

	Skip unknown output records.
	* src/dbgengine/nmv-gdbmi-parser.h
	(GDBMIParser::skip_output_record): Declare new fn.
	* src/dbgengine/nmv-gdbmi-parser.cc
	(GDBMIParser::skip_output_record): Define it.
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::on_gdb_stdout_signal): Use it.

2010-06-19  Dodji Seketeli <dodji@redhat.com>

	Style cleanups.
	* src/dbgengine/nmv-gdbmi-parser.cc (parse_output_record): Minor
	style cleanup.

2010-06-19  Dodji Seketeli <dodji@redhat.com>

	Fix runtestvarwalker hang
	* src/dbgengine/nmv-gdb-engine.cc
	(GDBEngine::Priv::on_gdb_stdout_signal): Style cleanup.
	(OnVariableTypeHandler::can_handle): Look for "ptype " string in
	the debugger console output, not the debugger log output.
	(OnVariableTypeHandler::can_handle): Likewise, use the content of
	the debugger console output, not the debugger log output.

2010-06-17  Matej Urbančič <mateju@svn.gnome.org>

	Updated Slovenian translation

2010-06-16  Mario Blättermann <mariobl@gnome.org>

	[i18n] Updated German doc translation

2010-06-15  Mario Blättermann <mariobl@gnome.org>

	[i18n] Updated German doc translation

2010-05-31  Petr Kovar <pknbe@volny.cz>

	Update Czech translation by Marek Cernocky

2010-05-28  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-05-25  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-05-24  Mario Blättermann <mariobl@gnome.org>

	Updated German translation

2010-05-23  Seemanta Dutta <seemanta@gmail.com>

	Adding a popup when quitting nemiver. (Closes: #553217)
	* src/persp/dbgperspective/nmv-dbg-perspective.h
	(DBGPerspective::agree_to_shutdown): Declare
	new fn.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::agree_to_shutdown): Define new fn.
	* src/persp/nmv-i-perspective.h (IPerspective::agree_to_shutdown):
	New function declaration.
	* src/workbench/nmv-workbench.cc
	(Workbench::query_for_shutdown): New function.
	(Workbench::on_delete_event): Call it.
	(Workbench::on_quit_menu_item_action): Likewise.

2010-05-21  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2010-05-21  Prema <premum@gmail.com>

	GnomeGoal: CorrectDesktopFile (Closes: #618506)
	* data/nemiver.desktop.in: Per
	http://live.gnome.org/GnomeGoals/CorrectDesktopFiles, _Name should
	contain only the brand name of the application, and the new
	X-GNOME-FullName can contain the concatenation of _Name and
	_GenericName.

2010-05-17 10:32:04 -0300  Henrique P. Machado <hpmachado@gnome.org>

	Updated Brazilian Portuguese Translation

2010-05-01  Dodji Seketeli <dodji@gnome.org>

	Find dialog is no more modal
	* src/persp/dbgperspective/glade/findtextdialog.glade: Don't
	make the dialog modal.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_find_text_response_signal): New signal
	handler.
	(DBGPerspective::get_find_text_dialog): Connect the new signal
	handler above to the "signal_reponse" signal of the find text" dialog.
	When the user clicks on a button of the dialog, the search is
	driven by DBGPerspective::on_find_text_response_signal.
	(DBGPerspective::find_in_current_file): Do not drive the search
	here -- in a modal way -- anymore.
	* src/persp/dbgperspective/nmv-dialog.[cc|h] (Dialog::show,
	Dialog::signal_response): New fns.
	* src/persp/dbgperspective/nmv-find-text-dialog.[cc|h]
	(FindTextDialog::clear_selection_before_search): New fn.

2010-05-01  Dodji Seketeli <dodji@gnome.org>

	Be mercyful with empty noteboks
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::get_current_source_editor): Don't cry when the
	source view notebook is empty.

2010-04-27  Dodji Seketeli <dodji@gnome.org>

	Avoid READY state once detached (Closes: #419504)
	* src/dbgengine/nmv-gdb-engine.cc
	(OnCommandDoneHandler::do_handle): Once we are detached from the
	target, don't get back to READY state just because we got a
	random response from GDB.

2010-04-27  Dodji Seketeli <dodji@gnome.org>

	Disallow impossible BP actions (Closes: #607782)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::get_num_notebook_pages): Renamed
	DBGPerspective::get_n_pages into this.
	(DBGPerspective::on_debugger_not_started_signal,
	DBGPerspective::close_current_file, DBGPerspective::close_opened_files,
	DBGPerspective::execute_session, DBGPerspective::execute_program,
	DBGPerspective::attach_to_program,
	DBGPerspective::load_core_file): Adjust.
	(DBGPerspective::update_src_dependant_bp_actions_sensitiveness): New fn.
	(DBGPerspective::on_debugger_stopped_signal,
	DBGPerspective::append_source_editor,
	DBGPerspective::close_file): Use it, and adjust for the get_n_pages ->
	get_num_notebook_pages rename.

2010-04-18  Olav Vitters <olav@vitters.nl>

	Fix doap file

2010-03-28  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-03-26  Bruno Brouard <annoa.b@gmail.com>

	Updated French translation

2010-03-16  Jorge González <jorgegonz@svn.gnome.org>

	Updated Spanish translation

2010-03-07  Luca Bruno <lucab@debian.org>

	New revision 0.7.3-2

2010-03-07  Luca Bruno <lucab@debian.org>

	Updated Standards-Version to 3.8.4

2010-03-07  Luca Bruno <lucab@debian.org>

	Fix FTBFS with gcc-4.5 (Closes: #565093)

2010-03-02  Dominique Leuenberger <dominique-gnomezilla@leuenberger.net>

	More GCC 4.5 fixes, #611588
	* src/langs/nmv-cpp-ast.cc (Token::operator=): Token::Token is
	the name of the constructor, not of the type.

2010-02-28  Konstantinos Poulios <poulios.konstantinos@gmail.com>

	Unnecessary scrollbars in variable popup, #610808
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_popup_var_insp_size_request):
	It looks like add both horizontal and vertical toolbars prevents
	them from honouring the Gtk::POLICY_AUTOMATIC policy.
	Furthermore, it appears we never clip the popup time
	horizontaly (yet).
	So do not add any horizontal clipboard for now.
	Also, fixup the padding logic.

2010-02-27  Dodji Seketeli <dodji@redhat.com>

	Fix build with gcc 4.5
	* src/common/nmv-object.cc: Class name is Object, not
	Object::Object.

2010-02-27  Romain Tartière <romainl@blogreen.org>

	Remove useless header utmp.h
	* src/uicommon/nmv-terminal.cc: Don't include useless
	header utmp.h

2010-02-27  Thorsten Vollmer <thorsten@thvo.de>

	Require and properly detect gtkmm24 version 2.16
	* configure.ac: Define HAVE_GTKMM_2_16 if we have at least
	gtkmm24 version 2.16.
	* src/uicommon/nmv-ui-utils.h: Use Gtk::Action::set_is_important
	only if HAVE_GTKMM_2_16 is defined.

2010-02-04  Petr Kovar <pknbe@volny.cz>

	Add Czech help translation by Marek Cernocky

2010-01-18  Marek Černocký <marek@manet.cz>

	Update Czech translation

2010-01-14  Joe Hansen <joedalton2@yahoo.dk>

	Added Danish translation

2010-01-14  Kenneth Nielsen <k.nielsen81@gmail.com>

	Added da to list of languages

2010-01-11  Petr Kovar <pknbe@volny.cz>

	Add Czech translation by Marek Cernocky

2010-01-11  Petr Kovar <pknbe@volny.cz>

	Updated Czech translation by Marek Cernocky

2010-01-06  Matej Urbančič <mateju@svn.gnome.org>

	Added sl for Slovenian translation

2010-01-06  Andrej Žnidaršič <andrej.znidarsic@gmail.com>

	Updated Slovenian translation

2009-12-20  Luca Bruno <lucab@debian.org>

	New nemiver upstream version 0.7.3-1

2009-12-13  Dodji Seketeli <dodji@redhat.com>

	Display "source file not found" error msg only once (Closes: #604436)
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::set_breakpoint):
	Don't list breakpoints after setting it a breakpoint.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::append_visual_breakpoint): Don't try to get the
	source editor of an empty source path.
	One message box saying we couldn't find the source file is enough.

2009-12-12  Mario Blättermann <mariobl@gnome.org>

	Updated German translation

2009-12-12  Takeshi AIHANA <takeshi.aihana@gmail.com>


2009-12-07  Dodji Seketeli <dodji@redhat.com>

	Updated configure.ac for 0.7.4
	* ChangeLog: Updated for 0.7.3.
	* configure.ac: Bumped version number to 0.7.4

2009-12-07  Dodji Seketeli <dodji@redhat.com>

	Automatically regenerate ChangeLog for 0.7.3
	* ChangeLog: Regenerate.

2009-12-07  Dodji Seketeli <dodji@redhat.com>

	Update configure status message
	* configure.ac: use AC_MSG_NOTICE to display configure status
	message. That makes it be logged in config.log, at least.

2009-12-06  Dodji Seketeli <dodji@redhat.com>

	Updated NEW file for 0.7.3

2009-11-15  Dodji Seketeli <dodji@redhat.com>

	Update NEW file
	* NEWS: update for 0.7.3

2009-12-06  Dodji Seketeli <dodji@redhat.com>

	Handle ":" in pending bp attrs (Closes: #602074)
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_breakpoint):
	Handle ':' appearing in the middle of the content of the 'pending'
	attribute of breakpoint objects. This is tricky since normally, ':'
	appearing at the end of the string delimits the file path and the
	line number when the breakpoint has been set to a linux - as opposed
	to a breakpoint set on a function.
	* tests/test-gdbmi.cc (test_breakpoint_table, test_breakpoint): Add
	new test cases.

2009-11-22  Tom Hughes <tom@compton.nu>

	Let inferior use launch terminal (Closes: #602072)
	* src/dbgengine/nmv-i-debugger.h (IDebugger::set_tty_path): Declare
	new interface entry point.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::set_tty_path): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::Priv::set_tty_path): New
	method.
	(GDBEngine::load_program, GDBEngine::attach_to_target,): Use it.
	(GDBEngine::set_tty_path): Implementation of the new
	IDebugger::set_tty_path interface. Uses GDBEngine::Priv::set_tty_path.
	* src/main.cc (static GOptionEntry entries): Add a new entry for a new
	--use-launch-terminal command line option.
	(process_gui_options): Let the debug perspective be aware when the
	user wants the inferior to use the terminal from which Nemiver was
	launched.
	(main): Try to release the current controlling terminal when we want the
	inferior to use it.
	* src/persp/dbgperspective/nmv-conf-keys.h
	(CONF_KEY_USE_LAUNCH_TERMINAL): Declare constant for the 'use launch
	terminal' conf key.
	* src/persp/dbgperspective/nmv-dbg-perspective.h:
	(IDBGPerspective::uses_launch_terminal): Declare new accessors.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(CONF_KEY_USE_LAUNCH_TERMINAL): Define conf key constant.
	(DBGPerspective::get_terminal_name,
	DBGPerspective::uses_launch_terminal): New accessors.
	(DBGPerspective::on_conf_key_changed_signal,
	DBGPerspective::read_default_config): Handle
	CONF_KEY_USE_LAUNCH_TERMINAL key.
	(DBGPerspective::execute_program, DBGPerspective::attach_to_program):
	Use the terminal path the user wants, not necessarily the one of the
	graphical terminal embedded in the GUI.
	* src/persp/dbgperspective/glade/preferencesdialog.glade: Add a UI to
	set the "use launch terminal" key.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc:
	(PreferencesDialog::Priv::on_launch_terminal_toggled_signal,
	PreferencesDialog::Priv::update_use_launch_terminal_key): New
	methods.
	(PreferencesDialog::Priv::init): When the 'use launch terminal'
	check button is checked, set the 'use launch terminal' conf key
	accordingly.
	(PreferencesDialog::Priv::update_widget_from_editor_keys):
	Populate the 'use launch terminal' check button state according to the
	'use launch terminal' conf key. Set it to false by default.
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas:
	(apps/nemiver/dbgperspective/use-launch-terminal): New key. Set to
	false by defaulf.

2009-11-22  Dodji Seketeli <dodji@redhat.com>

	Do not blindly truncate types (Closes: #602074)
	* src/persp/dbgperspective/nmv-variables-utils.cc:
	(set_a_variable_node_type): Add a flag to indicate whether the type
	should be truncated or not. Truncate multi-line types to the first
	line in all cases. Set the truncation limit to 50 instead of 15
	characters.
	(update_a_variable_real, update_a_variable_node,
	update_unfolded_variable, update_a_variable,
	update_a_variable_real, append_a_variable): Add a flag to indicate
	whether the type should be truncated or not. Eventually Pass it down to
	set_a_variable_node_type.
	* src/persp/dbgperspective/nmv-variables-utils.h:
	(set_a_variable_node_type, update_a_variable_node,
	update_unfolded_variable, update_a_variable, append_a_variable):
	Update these declarations to add a flag indicating whether the type
	should be truncated or not.
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.cc:
	(GlobalVarsInspectorDialog::Priv::update_a_global_variable,
	GlobalVarsInspectorDialog::Priv::append_a_global_variable):
	Do not truncate the type in the global variables inspector dialog.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	(LocalVarsInspector::Priv::append_a_local_variable,
	LocalVarsInspector::Priv::append_a_function_argument,
	LocalVarsInspector::Priv::update_a_function_argument,
	LocalVarsInspector::Priv::update_a_local_variable,
	LocalVarsInspector::Priv::on_variable_unfolded_signal,
	LocalVarsInspector::Priv::on_variable_assigned_signal):
	Do not truncate the type in the local variables inspector widget.
	* src/persp/dbgperspective/nmv-var-inspector.cc:
	(VarInspector::Priv::set_variable,
	VarInspector::Priv::on_variable_unfolded_signal,
	VarInspector::Priv::on_variable_assigned_signal):
	Do truncate the type in this variable widget used in the popup variable
	inspector and variable inspector (modal) dialog.

2009-11-22  Dodji Seketeli <dodji@redhat.com>

	Escape strings saved in sessions (Closes: #579569)
	* src/common/nmv-sql-statement.cc (SQLStatement::escape_string):
	Overhaul.
	* src/persp/dbgperspective/nmv-sess-mgr.cc (SessMgr::store_session):
	Use SQLStatement::escape_string to escape sub-strings to build sql
	requests.

2009-11-22  Dodji Seketeli <dodji@redhat.com>

	Cleanup long cmdline switches
	* src/main.cc (static GOptionEntry entries): changed --listsessions
	into --list-sessions, --purgesessions into --purge-sessions and
	--logdebuggeroutput into --log-debugger-output.

2009-11-21  Dodji Seketeli <dodji@redhat.com>

	Properly handle empty cmd line
	* src/main.cc (parse_command_line): Make it clear that this edits
	the command line and lets it become the command like of the
	inferior. So handle the case where there is no inferior on the
	command line, i.e. when nemiver is launched with no argument.
	(process_gui_options): Do not try to debug an inferior when there
	is none.

2009-11-15  Dodji Seketeli <dodji@redhat.com>

	Do not update variables twice (closes: #601819)
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	(LocalVarsInspector::Priv::update_a_local_variable): Add a new flag
	to control whether we want to recursively update members variables
	or not. By default, we just update the members variables
	recursively, though.
	(LocalVarsInspector::Priv::on_local_variable_updated_signal):
	When using GDB/MI Variable objects backend, we receive one
	notification per variable which value has changed. So when updating the
	graphical representation of an IDebugger::Variable, we shall not
	recursively update the members of the variable. Otherwise we update
	some variable nodes several times hence loosing the information
	necessary to highlighting these variable nodes.
	* src/persp/dbgperspective/nmv-variables-utils.cc ():
	(update_a_variable_real): Add a flag to recursively update (or not)
	the members of the variable. Add comments.
	(update_a_variable): Likewise. Pass the flag to update_a_variable_real.
	Add comments.
	(update_a_variable_node): Add comments.
	* src/persp/dbgperspective/nmv-variables-utils.h:
	(update_a_variable): Add a flag to recursively update (or not)
	the members of the variable.

2009-11-13  Hans Vercammen <hveso3@gmail.com>

	Small typo causing test build failure
	* tests/Makefile.am: Compile threads.cc, not threads.c

2009-11-08  Dodji Seketeli <dodji@redhat.com>

	Update call stack on thread sel (Closes: #601199)
	* src/persp/dbgperspective/nmv-call-stack.cc:
	(CallStack::Priv::handle_update): Break out from
	CallStack::Priv::on_debugger_stopped_signal.
	(CallStack::Priv::on_thread_selected_signal): New signal handler.
	Use the new CallStack::Priv::handle_update.
	(CallStack::Priv::connect_debugger_signals): Update the call
	stack when a new thread is selected.
	(CallStack::Priv::on_debugger_stopped_signal): Use the new
	CallStack::Priv::handle_update.
	(finish_update_handling): Renamed finish_handling_debugger_stopped_event
	into this.
	(CallStack::Priv::on_expose_event_signal): Adjust.
	* tests/threads.cc: New test.
	* tests/Makefile.am: Add new test to build system.

2009-10-27  Dodji Seketeli <dodji@redhat.com>

	Restore call stack initial window (Closes: #599768)
	* src/persp/dbgperspective/nmv-call-stack.cc:
	(CallStack::Priv::on_debugger_stopped_signal): Restore the initial
	call stack window when we are not in a frame paging transaction.
	(struct CallStack::Priv::append_frames_to_tree_view): Fix typo.

2009-10-17  Mario Blättermann <mariobl@gnome.org>

	Updated German translation

2009-10-17  Takeshi AIHANA <takeshi.aihana@gmail.com>


2009-10-15  Dodji Seketeli <dodji@redhat.com>

	Fix command line parsing (Closes: #591327)
	* src/main.cc (init_option_context): Flag unknown options as
	parsing errors.
	(parse_command_line): Split the command line in two parts. One
	is made of options for Nemiver itself. The other one is made of the
	options for the inferior program. Then make the glib option parser
	parse only the first part.
	(process_non_gui_command_line): No need to pass any argument to this
	function. Remove them.
	(process_non_gui_options): Renamed process_non_gui_command_line into this.
	(process_gui_command_line): The last argument to this function is
	useless.  Remove it. The command line passed to this function is
	now the command line containing the invocation of the inferior only.
	Adjust accordingly.
	(process_gui_options): Renamed process_gui_command_line into this.
	(main): Adjust.

2009-10-08  Claude Paroz <claude@2xlibre.net>

	Updated French translation

2009-09-20  Dodji Seketeli <dodji@redhat.com>

	Style cleanup
	* src/dbgengine/nmv-gdb-engine.cc,h: Trim lines to 80 chars.
	'=' operator should be surrounded by space.
	* src/dbgengine/nmv-i-debugger.h: Likewise.

2009-09-20  Dodji Seketeli <dodji@redhat.com>

	Update Coding style
	* coding-style.txt: Shorten lines to < 80 characters and cleanup.

2009-09-20  Dodji Seketeli <dodji@redhat.com>

	Big style cleanup
	* lots-of-files: Remove space before ";". There should always be
	space around operator '='.

2009-09-19  Dodji Seketeli <dodji@redhat.com>

	Preselect process to attach to (Closes: #595667)
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc:
	(ProcListDialog::Priv::Priv): Set the OK button as the default widget
	for the dialog. Make pressing enter in the filter entry activate the
	default widget of the dialog.
	(ProcListDialog::Priv::on_filter_entry_changed): If the filtered
	result set amounts to only one row, select that row.
	(ProcListDialog::Priv::is_row_visible): Count the number row that is
	going to be part of the filtered result set.

2009-09-15  Dodji Seketeli <dodji@redhat.com>

	Update BP saving into session (Closes: #595083)
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::BreakPoint::is_read_watchpoint,
	IDebugger::BreakPoint::is_write_watchpoint): New entry points.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::record_and_save_session): Save breakpoint ignore
	count in the session.Schedule watchpoints to be recorded in the session.
	(DBGPerspective::execute_session): Load the watchpoints and set
	them.
	(DBGPerspective::append_breakpoints): Do not discriminate the type of
	breakpoint to add to the perspective at this point.
	(DBGPerspective::append_breakpoint): Watchpoints being special type of
	breakpoints, they should be added to the list of breakpoints as well.
	Though, only standard types of breakpoints should be visually added to
	the source editor.
	(DBGPerspective::execute_program): Set breakpoints ignore counts on
	breakpoints.
	* src/persp/dbgperspective/nmv-sess-mgr.h:
	(ISessMgr::BreakPoint::ignore_count): New method.
	(ISessMgr::WatchPoint): New type.
	(ISessMgr::Session::watchpoints): New method.
	* src/persp/dbgperspective/nmv-sess-mgr.cc:
	(SessMgr::store_session): Save breakpoint ignore count and
	watchpoints in the session DB.
	(SessMgr::load_session): Load breakpoints ignore count and
	watchpoints from the session DB.
	* src/persp/dbgperspective/sqlscripts/sqlite/create-tables.sql:
	Bumped schema version number to 1.4. Add new watchpoints table, add
	ignorecount column to the breakpoints table.
	* src/persp/dbgperspective/sqlscripts/sqlite/drop-tables.sql: Add
	watchpoints table to the list of tables to drop.

2009-09-17  Luca Bruno <lucab@debian.org>

	New nemiver version 0.7.2-1

2009-09-17  Luca Bruno <lucab@debian.org>

	New upstream version 0.7.1-1

2009-09-15  Dodji Seketeli <dodji@redhat.com>

	Support ignore count at breakpoint setting time
	* src/dbgengine/nmv-i-debugger.h (IDebugger::set_breakpoint): Add a
	parameter to set ignore count.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::set_breakpoint):
	Adjust.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::set_breakpoint): Use
	-break-insert now that it can fully replace the "break" cli command.
	Let this function specify the ignore count as well.

2009-09-15  Dodji Seketeli <dodji@redhat.com>

	Use -break-after to set ignore count
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::set_breakpoint_ignore_count):
	Use the kosher -break-after MI command instead of the "ignore" gdb cli command.

2009-09-15  Dodji Seketeli <dodji@redhat.com>

	Support editing breakpoint condition
	* src/dbgengine/nmv-i-debugger.h (BreakPoint::clear): Set
	BreakPoint::type to its proper default value.
	(IDebugger::set_breakpoint_condition): Declare new entry point.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::set_breakpoint_condition):
	Likewise.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::set_breakpoint_condition):
	Define new entry point.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	(BreakpointsView::Priv::build_tree_view): Make the cell of the
	breakpoint condition editable and update the breakpoint condition
	when the value changes.
	(BreakpointsView::Priv::on_breakpoint_condition_edited): New method.

2009-09-13  Dodji Seketeli <dodji@redhat.com>

	Bump version to 0.7.3
	* configure.ac: Bump version number to 0.7.3

2009-09-12  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog
	* ChangeLog: Updated

2009-09-12  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog
	* ChangeLog: Automatic update.

2009-09-12  Dodji Seketeli <dodji@redhat.com>

	Update NEWS
	* NEWS: Update for 0.7.2

2009-08-26 11:50:22 -0300  Jonh Wendell <jwendell@gnome.org>

	Updated Brazilian Portuguese translation

2009-08-12  Dodji Seketeli <dodji@redhat.com>

	Don't clobber cmdline arguments (Close: #591327)
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::load_program): Inferior arguments are now passed
	as a vector of strings.
	* src/dbgengine/nmv-gdb-engine.h:
	(GDBEngine::load_program): Adjust.
	src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::load_program): Adjust.
	(quote_args): Quote all args starting from index 0.
	(GDBEngine::Priv::launch_gdb): Swap the order of the
	two last parameters.
	(GDBEngine::Priv::launch_gdb_and_set_args): The prog path
	and the args are now passed in two distinct variables.
	Args are still in vector of strings.
	(GDBEngine::step_out): Really pass the command to GDB.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::execute_program): Prog path and args are now
	distinct. Args are passed as a vector of strings.
	(DBGPerspective::record_and_save_session): Command line arguments
	are now separated by a special separator at serialization time.
	(DBGPerspective::execute_session): Consider the new special command
	line arguments separator when de-serializing the command line
	arguments.
	(DBGPerspective::execute_program,
	DBGPerspective::connect_to_remote_target): Adjust
	* src/main.cc (process_gui_command_line,
	process_gui_command_line): Adjust.
	* tests/test-breakpoint.cc (test_main): Likewise.
	* tests/test-deref.cc (test_main): Likewise.
	* tests/test-local-vars-list.cc (test_main): Likewise.
	* tests/test-types.cc (test_main): Likewise.
	* tests/test-var-list.cc (test_main): Likewise.
	* tests/test-var-path-expr.cc (test_main): Likewise.
	* tests/test-var-walker.cc (test_main): Likewise.
	* tests/test-varobj-walker.cc (test_main): Likewise.
	* tests/test-vars.cc (test_main): Likewise.
	* tests/test-watchpoint.cc (test_main): Likewise.

2009-08-11  Dodji Seketeli <dodji@redhat.com>

	Various cleanups
	* src/persp/dbgperspective/nmv-call-stack.cc: Cosmetic cleanups.

2009-08-11  Dodji Seketeli <dodji@redhat.com>

	Add more logs
	* src/uicommon/nmv-source-editor.cc:
	(SourceEditor::move_where_marker_to_line,
	SourceEditor::set_visual_breakpoint_at_line): Add more logs.

2009-08-11  Dodji Seketeli <dodji@redhat.com>

	Update state when thread id changes.
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::Priv::cur_thread_num,
	GDBEngine::Priv::cur_frame_address): New attributes.
	(GDBEngine::Priv::Priv): On thread stop, record the current frame
	address. Do the same on thread selection, and when threads are
	listed.
	(GDBEngine::Priv::queue_command,
	GDBEngine::Priv::list_frames): Move the code of
	GDBEngine::queue_command and GDBEngine::list_frames here.
	(GDBEngine::Priv::on_thread_selected_signal,
	GDBEngine::Priv::on_stopped_signal,
	GDBEngine::Priv::on_frames_listed_signal): New event handlers.
	(OnThreadSelectedHandler::can_handle): Be ready to better detect
	When a thread is selected.
	(OnFramesListedHandler::do_handle): Record frame address here.
	FIXME: this is redundant with what's done in
	on_frames_listed_signal.
	(GDBEngine::get_current_frame_address,
	GDBEngine::get_mi_thread_and_frame_location,
	GDBEngine::get_mi_thread_location,
	GDBEngine::get_current_thread): New entry points.
	(GDBEngine::queue_command,
	GDBEngine::list_frames): Tunnel these to
	GDBEngine::Priv::queue_command and GDBEngine::Priv::list_frames.
	Also did various cosmetic cleanups.
	* src/dbgengine/nmv-gdb-engine.h:
	(GDBEngine::get_current_frame_address,
	GDBEngine::set_current_frame_address,
	GDBEngine::get_mi_thread_location,
	GDBEngine::get_current_thread): Declare these.
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::get_current_thread): New entry point.

2009-08-11  Dodji Seketeli <dodji@redhat.com>

	Various cosmetic cleanups
	* src/dbgengine/nmv-gdb-engine.cc: Usual style cleanups.

2009-08-11  Dodji Seketeli <dodji@redhat.com>

	Change IDebugger::thread_selected_signal signature
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::thread_selected_signal): Change signature.
	The frame is now a pointer.
	* src/dbgengine/nmv-gdb-engine.h: Adjust.
	* src/dbgengine/nmv-gdb-engine.cc: Likewise.
	* src/persp/dbgperspective/nmv-thread-list.cc: Likewise.

2009-08-11  Dodji Seketeli <dodji@redhat.com>

	Don't ignore "thread-selected" async records
	* src/dbgengine/nmv-gdbmi-parser.h:
	(GDBMI::parse_thread_selected_async_output): Declare New entry point.
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(GDBMI::parse_thread_selected_async_output): Implement it.
	(GDBMIParser::parse_out_of_band_record): Support parsing
	thread-selected asynchronous record. Various cleanups.
	* src/dbgengine/nmv-dbg-common.h:
	(OutOfBandRecord::clear): Set default thread id value to -1.

2009-08-05  Dodji Seketeli <dodji@redhat.com>

	Create varobjs for a given frame (Closes: #590833)
	* (GDBEngine::create_variable): Let the -var-create
	command always specify the frame number, instead of the "*"
	that says "current frame". This is better because we don't always
	know what the current frame is for GDB. This was creating subtle
	bugs where Nemiver could not create varobjs for some variables.

2009-08-05  Dodji Seketeli <dodji@redhat.com>

	Display no msg dialog when gconf is down
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_shutdown_signal): Let error messages
	go to the terminal only.
	* src/workbench/nmv-workbench.cc:
	(Workbench::get_configuration_manager, Workbench::init_window):
	Likewise.

2009-08-02  Dodji Seketeli <dodji@redhat.com>

	Support breakpoint ignore counts (Closes: #588251)
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::BreakPoint::ignore_count): New accessor.
	(IDebugger::set_breakpoint_ignore_count): New entry point.
	(IDebugger::enable_breakpoint, IDebugger::disable_breakpoint,
	IDebugger::delete_breakpoint): Move all the breakpoint related
	functions to group them together.
	* src/dbgengine/nmv-gdb-engine.h:
	(GDBEngine::set_breakpoint_ignore_count): New entry point.
	(GDBEngine::enable_breakpoint, GDBEngine::disable_breakpoint,
	GDBEngine::delete_breakpoint): Move these functions around to group
	them together.
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::enable_breakpoint, GDBEngine::disable_breakpoint,
	GDBEngine::delete_breakpoint): Move these functions around to group
	them together.
	(GDBEngine::set_breakpoint_ignore_count): Implement this new entry
	point.
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(GDBMIParser::parse_result_record): Style cleanup.
	(GDBMIParser::parse_breakpoint): Take the ignore count into account.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	(BPColumns): add ignore_count and is_standard fields.
	(get_bp_cols): Renamed get_pb_columns into this.
	(BreakpointsView::Priv::build_tree_view): Adjust.
	Append an editable "ignore count" column. If the breakpoint is not
	standard (e.g. if it's a watchpoint), do not let its "ignore count"
	column  be editable. When the user edits the ignore count, call the
	debugger engine to really set the ignore count.
	(BreakpointsView::Priv::update_breakpoint): Update the ignore_count
	and is_standard columns.
	(BreakpointsView::Priv::on_breakpoint_ignore_count_edited): New
	function.
	(BreakpointsView::Priv::on_breakpoint_enable_toggled):Moved all the
	signal handlers around to group them together.

2009-08-03  Dodji Seketeli <dodji@redhat.com>

	Bump version 0.7.2
	* configure.ac: Bump to 0.7.2

2009-08-01  Dodji Seketeli <dodji@redhat.com>

	Automatic ChangeLog update for 0.7.1
	* ChangeLog: Update for 0.7.1

2009-08-01  Dodji Seketeli <dodji@redhat.com>

	Update NEWS for 0.7.1
	* NEWS: Update.

2009-08-01  Dodji Seketeli <dodji@redhat.com>

	Don't set important Actions on older GTK+s
	* src/uicommon/nmv-ui-utils.h (ActionEntry::to_action):
	Gtk::Action::set_is_important didn't exist before GTK+ 2.16.
	So don't call it for older versions.

2009-08-01  Dodji Seketeli <dodji@redhat.com>

	Kill build warnings
	* src/uicommon/ephy-spinner.c (ephy_spinner_cache_get_type,
	ephy_spinner_get_type):
	Adjust to new layout of GTypeInfo.
	(ephy_spinner_cache_get_images): Unsigned is always >=0.
	(icon_theme_changed_cb): Make gcc quietly accept the unused
	parameter.
	* src/common/nmv-proc-utils.cc (launch_program): Check the return
	value of dup.

2009-08-01  Dodji Seketeli <dodji@redhat.com>

	Adjsut to new ActionEntry layout
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	(BreakpointsView::Priv::init_actions): Adjust to the new
	ActionEntry layout that now has an ActionEntry::is_important
	member.
	* src/persp/dbgperspective/nmv-call-stack.cc:
	(CallStack::Priv::init_actions): Likewise.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	(LocalVarsInspector::Priv::init_actions): Likewise.
	* src/persp/dbgperspective/nmv-var-inspector.cc:
	(VarInspector::Priv::init_actions): Likewise.

2009-07-29  Dodji Seketeli <dodji@redhat.com>

	Support "text besides icons" visual setting
	* src/uicommon/nmv-ui-utils.h:
	(ActionEntry): add an "is_important" boolean.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::init_actions): Set "run" and and "continue"
	actions as being "important".
	* src/workbench/nmv-workbench.cc:
	(Workbench::init_actions): Adjust.

2009-07-29  Dodji Seketeli <dodji@redhat.com>

	Var popup tip shouldn't be too small by default
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_popup_var_insp_size_request): Don't make the
	variable popup tip be too small for simple scalar types, otherwise
	users are obliged to scroll to see the value for those simple
	cases.

2009-07-25  Luca Bruno <lucab@debian.org>

	New version 0.7.0-1

2009-07-24  Luca Bruno <lucab@debian.org>

	Updated Standards-Version to 3.8.2

2009-07-24  Luca Bruno <lucab@debian.org>

	dh_scroolkeeper is deprecated now, removed.

2009-07-18  Dodji Seketeli <dodji@redhat.com>

	Prevent var popup tip from overflowing (again)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::source_view_to_root_window_coordinates): New function.
	(DBGPerspective::on_popup_var_insp_size_request): Another shot at
	trying to clip the size of the scrolled window of the popup tip to
	prevent it from overflowing past the limits of the screen.
	This time, consider the position of the mouse of as being the top
	of the popup tip. Previously, we were trying to get the extents of
	the X window associated to the popup tip. The prolem with that
	approach is that when the widget is not yet mapped, we can't do the
	clipping computation. In those situations, the popup tip would
	overflow. The benefit of the new approach is that we can always get
	the position of the pointer.
	Also, do not bother trying to clip the popup tip widget's width.
	Only the height has proven being worthwile.
	(DBGPerspective::try_to_request_show_variable_value_at_position):
	Factor out the transformation from source view coordinate system to
	root window coordinate system. As a result, use
	DBGPerspective::source_view_to_root_window_coordinates.
	* tests/Makefile.am: Add new big-var.c to build system.
	* tests/big-var.c: New program helpful to test popup tip
	overflowing cases.

2009-07-18  Dodji Seketeli <dodji@redhat.com>

	Minor style cleanups
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::get_call_stack, DBGPerspective::get_breakpoints_scrolled_win):
	Minor style cleanups.

2009-07-18  Dodji Seketeli <dodji@redhat.com>

	Support compiling C programs
	* configure.ac: support compiling C programs with $CC.

2009-07-16  Dodji Seketeli <dodji@redhat.com>

	Keep default conf values when gconf is down
	* src/confmgr/nmv-gconf-mgr.cc (GConfMgr::get_key_value<overloads>):
	Do not set the out parameter when gconf is down.

2009-07-16  Dodji Seketeli <dodji@redhat.com>

	Don't fall appart when gconfd is down
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::Priv::get_debugger_full_path): Catch exceptions raised
	when accessing the configuration bus.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::Priv::ensure_buffer_is_in_utf8,
	DBGPerspective::on_shutdown_signal,
	DBGPerspective::on_file_content_changed, DBGPerspective::init_body,
	DBGPerspective::read_default_config,
	DBGPerspective::debugger): Likewise.
	* src/workbench/nmv-workbench.cc:
	(Workbench::get_configuration_manager,
	Workbench::init_window,Workbench::save_window_geometry): Likewise.

2009-07-12  Mario Blättermann <mariobl@gnome.org>

	Added de to DOC_LINGUAS

2009-07-12  Mario Blättermann <mariobl@gnome.org>

	Added German doc translation

2009-07-12  Mario Blättermann <mariobl@gnome.org>

	Updated German translation

2009-07-12  Dodji Seketeli <dodji@redhat.com>

	Renamed variable handling types
	* src/persp/dbgperspective/nmv-local-vars-inspector.[cc|h]:
	Renamed nmv-local-vars-inspector2.[cc|h] into this.
	Renamed LocalVarsInspector2 into LocalVarsInspector as well.
	* src/persp/dbgperspective/nmv-var-inspector.[cc|h]: Renamed
	nmv-var-inspector2.[cc|h] into this. Renamed VarInspector2 into
	VarInspector.
	* po/POTFILES.in: Adjust.
	* src/persp/dbgperspective/Makefile.am: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Likewise.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc: Likewise.

2009-07-12  Dodji Seketeli <dodji@redhat.com>

	Unconditionally switch to variable objects
	* configure.ac: Remove the handling of --with-varobjs from
	configure.
	* src/persp/dbgperspective/nmv-local-vars-inspector.[cc|h]: Remove.
	* src/persp/dbgperspective/nmv-var-inspector.[cc|h]: Remove.
	* src/persp/dbgperspective/Makefile.am: Removed
	nmv-local-vars-inspector.[cc|h], nmv-var-inspector.[cc|h].
	* po/POTFILES.in: Remove nmv-local-vars-inspector.cc.
	Add nmv-var-inspector2.cc.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc (lots):
	Remove WITH_VAROBJS macro. Unconditionally use
	LocalVarsInspector2 instead of LocalVarsInspector.
	(DBGPerspective::try_to_request_show_variable_value_at_position):
	Unconditionally create variable object.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.[cc|h]:
	Remove use of the conditional macro WITH_VAROBJS.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: Remove
	use of the conditional macro WITH_VAROBJS. Unconditionally use
	VarInspector2 instead of VarInspector.
	* src/persp/dbgperspective/nmv-var-inspector2.[cc|h]: Remove
	conditional macro WITH_VAROBJS.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc: Likewise.
	* tests/Makefile.am: Likewise.
	* tests/test-var-path-expr.cc: Likewise.
	* tests/test-watchpoint.cc: Likewise.

2009-07-11  Dodji Seketeli <dodji@redhat.com>

	Support restarting when gdb dies (Closes: #588313)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_engine_died_signal): New function.
	(DBGPerspective::init_debugger_signals): Connect to the
	IDebugger::engine_died_signal. When it fires, update the
	state of the perspective and display a message to the user
	saying GDB died.
	(DBGPerspective::execute_last_program_in_memory): New function.
	(DBGPerspective::execute_program): Sometimes it's necessary to
	just re-set the breakpoints. For instance, when GDB just died.
	Also, in the inferior starting process, do not try to delete
	breakpoints if GDB is dead.
	(DBGPerspective::run): When GDB died, make sure to restart it
	before trying to restart the inferior.

2009-07-10  Dodji Seketeli <dodji@redhat.com>

	Beware original-location in bpts (Closes: #588256)
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_breakpoint):
	When "original-location" RESULT value has a string that does not
	of the form <file-path>:<line-num>, consider that it carries
	neither a file-path nor a line number.
	* tests/test-gdbmi.cc (test_breakpoint): update test.

2009-07-03  Dodji Seketeli <dodji@redhat.com>

	Support multiple address bpts (Closes: #587697)
	* src/common/Makefile.am: Add nmv-str-utils.[cc|h] to the build
	system
	* src/common/nmv-str-utils.h (extract_path_and_line_num_from_location):
	Declare ...
	* src/common/nmv-str-utils.cc (extract_path_and_line_num_from_location):
	... New entry point.
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_breakpoint):
	When we got an empty file name, check if we have a RESULT which
	name is "original-location". If we do, extract the file name and
	line number from that RESULT and stick those into the breakpoint.
	* tests/test-gdbmi.cc b/tests/test-gdbmi.cc: New test.

2009-07-03  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Bump to 0.7.1
	* configure.ac: Update to 0.7.1

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Updated ChangeLog
	* ChangeLog: Automatic update

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog
	* ChangeLog: Automatic ChangeLog

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog
	* ChangeLog: Automatic update.

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Automatically update ChangeLog
	* ChangeLog: update automatically

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Update NEW file
	* NEWS: update for 0.7.0 release

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Ignore unknown RESULT in -var-list-children output
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_var_list_children):
	When parsing the result of -var-list-children,
	ignore the MI RESULTs that we don't know about. This fixes
	a parsing error we have when parsing the result of
	-var-list-children with pretty printers enabled. It triggers
	the presence of a 'displayhint' MI RESULT. We know ignore it.
	* tests/test-gdbmi.cc (test_var_list_children): New test.
	* tests/test-vars.cc (on_changed_variables_listed_signal):
	Make this more robust wrt libstdc++ versions.

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Add GDBMIParser::parse_gdbmi_string_result
	* src/dbgengine/nmv-gdbmi-parser.cc,h (GDBMIParser::parse_gdbmi_string_result):
	New entry point.

2009-07-02  Dodji Seketeli <dodji@redhat.com>

	Try harder to hide the popup tip when necessary
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_motion_notify_event_signal): If the variable
	popup tip is visible and the mouse if out of it, hide the said popup tip.
	(DBGPerspective::hide_popup_tip_if_mouse_is_outside): New function.

2009-07-01  David Planella <david.planella@gmail.com>

	Updated Catalan translation

2009-06-15  Dodji Seketeli <dodji@redhat.com>

	Keep popup tip under control (Closes: #585657)
	*src/uicommon/nmv-popup-tip.cc: (PopupTip::Priv::Priv):
	No need to paint the popup tip window on expose event.
	Allow the popup tip window to be resized.
	(PopupTip::Priv::paint_window,
	PopupTip::Priv::on_expose_event_signal): Removed.
	(PopupTip::add_child): Rename this into PopupTip::set_child.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_popup_var_insp_size_request,
	DBGPerspective::on_popup_tip_hide,
	DBGPerspective::pack_popup_var_inspector_in_new_scr_win): New
	functions.
	(DBGPerspective::get_popup_tip): Put the variable inspector inside
	scrolled window and pack the scrolled window inside the popup tip.
	Force the scrolled window to be wide enough so that we can see the
	var inspector members without having to scroll too much. Though,
	make sure scroll window doesn't overflow the borders of the screen.
	Destroy the popup tip when it goes hidden, otherwise, subsequent
	uses of it on variables with difference size can exhibit some space
	allocation issues. For instance, when used later on a smaller
	variable, too much extra space is allocated to the popup tip.

2009-06-15  Dodji Seketeli <dodji@redhat.com>

	Don't overrun frames vector (Closes: #585516)
	* src/dbgengine/nmv-i-debugger.h: Properly initialise
	IDebugger::Frame
	* src/persp/dbgperspective/nmv-call-stack.cc
	(CallStack::Priv::update_selected_frame): Do not overrun
	frames vector.

2009-06-12  Javier Jardon <javierjc1982@gmail.com>

	Use AM_SILENT_RULES for nicer compilation output
	* configure.ac: Use AM_SILENT_RULES when present.

2009-06-05  Dodji Seketeli <dodji@redhat.com>

	Allow pointer variable values to be editable
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::is_variable_editable):
	Allow pointer variable values to be editable.

2009-06-02  Dodji Seketeli <dodji@redhat.com>

	Don't enable contextual menu in popup tip
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc:
	(VarInspectorDialog::Priv::build_dialog): Enable contextual the menu.
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarInspector2::enable_contextual_menu,
	VarInspector2::is_contextual_menu_enabled): New methods.
	(VarInspector2::Priv::Priv): By default, disalow contextual menu.
	(VarInspector2::Priv::on_button_press_signal): Show the contextual
	menu only if we are allowed to.

2009-06-02  Dodji Seketeli <dodji@redhat.com>

	Factorize variable printing
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::gen_white_spaces,
	LocalVarsInspector2::Priv::dump_variable_value): Remove these.
	(LocalVarsInspector2::Priv::on_visited_variable_signal): Use
	nemiver::debugger_utils::dump_variable_value instead of our
	previous own stuff.
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarInspector2::Priv::gen_white_spaces,
	VarInspector2::Priv::dump_variable_value): Remove these.
	(VarInspector2::Priv::on_visited_variable_signal): Use
	nemiver::debugger_utils::dump_variable_value instead of our
	previous own stuff.

2009-06-02  Dodji Seketeli <dodji@redhat.com>

	Don't loop forever on cycles (Closes: #584464)
	* src/dbgengine/nmv-i-var-walker.h:
	(IVarWalker::set_maximum_member_depth,
	IVarWalker::get_maximum_member_depth): New abstract
	ifaces.
	* src/dbgengine/nmv-var-walker.cc (VarWalker::set_maximum_member_depth,
	VarWalker::get_maximum_member_depth): New concrete implementations.
	* src/dbgengine/nmv-varobj-walker.cc (VarobjWalker::set_maximum_member_depth,
	VarobjWalker::get_maximum_member_depth): Likewise.
	(VarobjWalker::on_variable_unfolded_signal: Add a max depth guard to avoid
	looping forever on some huge datastructures.
	(VarobjWalker::do_walk_variable_real): Likewise. Don't
	dereference pointers, otherwise we might cycle forever on
	datastructures that have cycles. Make sure to pass the right
	variable to the visited_variable_signal.

2009-06-02  Dodji Seketeli <dodji@redhat.com>

	Allow compound variable detection
	* src/dbgengine/nmv-i-lang-trait.h (ILangTrait::is_variable_compound):
	New abstract interface.
	* src/dbgengine/nmv-cpp-trait.cc:
	(CPPTrait::is_variable_compound): New iface implementation.
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::get_language_trait): Return a reference, not a pointer.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::get_language_trait,
	GDBEngine::dereference_variable): Adjust.
	* tests/test-cpptrait.cc (test_debugger): Adjust use of
	IDebugger::get_language_trait.
	* tests/test-deref.cc (on_variable_type_set_signal): Likewise.

2009-06-02  Dodji Seketeli <dodji@redhat.com>

	Add debugger utilities to dump variable values
	* src/dbgengine/nmv-debugger-utils.cc,h:
	(gen_white_spaces, dump_variable_value): New functions.
	* src/dbgengine/Makefile.am: Add nmv-debugger-utils.cc,h to the build
	system. It's build into a static library, libdebuggerutils.la.

2009-06-02  Dodji Seketeli <dodji@redhat.com>

	Hide var tooltip appropriatly (Closes: #545596)
	* src/uicommon/nmv-popup-tip.cc:
	(PopupTip::Priv::Priv): Hide the popup tip window whenever
	mouse or keyboard focus leaves said window.
	(PopupTip::Priv::on_leave_notify_event,
	PopupTip::Priv::on_signal_focus_out_event): New methods.
	(PopupTip::PopupTip): Gently ask window managers to treat the
	popup tip as a popup menu.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::show_underline_tip_at_position,
	DBGPerspective::get_popup_tip): Make sure
	the var inspector is created before accessing it.
	(DBGPerspective::restart_mouse_immobile_timer,
	DBGPerspective::stop_mouse_immobile_timer): This the wrong level
	to try to hide the popup tip.
	(DBGPerspective::get_popup_var_inspector): New method.
	(DBGPerspective::hide_popup_tip): Removed this.

2009-06-02  Dodji Seketeli <dodji@redhat.com>

	Allow the ',' separator in NMV_LOG_DOMAINS env var
	* src/common/nmv-log-stream.cc:
	(LogStream::Priv::load_enabled_domains_from_env): Allow
	use of ',' and space as separators in the content of the
	nmv_log_domains environment variable.
	* src/common/nmv-ustring.cc,h:
	(UString::split_set): New method.

2009-05-31  Dodji Seketeli <dodji@redhat.com>

	Variable popup now uses a VarInspector2
	* src/uicommon/nmv-popup-tip.cc:
	(PopupTip::Priv::Priv): Set a notebook in the popuptip window.
	The notebook contains a label for when the tip has to display text, and a
	custom widget for when the tip has to display a custom widget.
	Don't use the (ugly) gtk tooltip style.
	(PopupTip:PopupTip): Don't set any text by defauilt.
	(PopupTip::text): To show text, just display the notebook tab that
	contains the text label.
	(PopupTip::add_child): New method to set a custom widget.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_variable_created_for_tooltip_signal,
	DBGPerspective::hide_popup_tip): New
	methods.
	(DBGPerspective::try_to_request_show_variable_value_at_position):
	Show the popup tip exactly at the position of the cursor.
	If varobjs support is on, create a variable object backed variable,
	hand it to a VarInspector2 and pack the inspector into a popup tip.
	(DBGPerspective::restart_mouse_immobile_timer,
	DBGPerspective::on_button_pressed_in_source_view_signal,
	DBGPerspective::stop_mouse_immobile_timer): Only hide the popup
	tip when the mouse moves out of it.

2009-05-31  Dodji Seketeli <dodji@redhat.com>

	Contextual menu item to copy local variable value
	* src/persp/dbgperspective/menus/localvarsinspectorpopup.xml:
	Add a menu item to copy variable values to clipboard.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarInspector2::Priv::init_actions): Add menu actions
	to copy variable values to clipboard. Use a local UIManager, not
	the one of the debugging perspective.
	(LocalVarInspector2::Priv::get_local_vars_inspector_menu):
	Use the local UIManager to build the menu, not the load_menu
	method of the debugging perspective.
	(LocalVarInspector2::Priv::get_ui_manager,
	(LocalVarInspector2::Priv::gen_white_spaces,
	LocalVarInspector2::Priv::dump_variable_value,
	LocalVarInspector2::Priv::get_module_manager,
	LocalVarInspector2::Priv::create_varobj_walker,
	LocalVarInspector2::Priv::get_varobj_walker,
	LocalVarInspector2::Priv::on_visited_variable_signal,
	LocalVarInspector2::Priv::on_variable_value_copy_to_clipboard_action,
	LocalVarInspector2::Priv::): New methods.

2009-05-30  Dodji Seketeli <dodji@redhat.com>

	Don't delete varobjs if not attached to target
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::is_attached_to_target): If the debugger is not running,
	then its not attached to the target.
	* src/dbgengine/nmv-varobj-walker.cc:
	(VarobjWalker::delete_varobj_if_necessary): New method.
	(VarobjWalker::~VarobjWalker): Don't delete the variable object if
	the debugger is not attached to the target.

2009-05-30  Dodji Seketeli <dodji@redhat.com>

	New nmv_abort_on_throw environment variable
	* src/common/nmv-exception.h:
	When nmv_abort_on_throw is set, abort on throw.
	This is useful to debug some nasty issues.

2009-05-30  Dodji Seketeli <dodji@redhat.com>

	Support copying variable value to the clipboard
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarsInspector2::Priv::init_actions): Don't make the array of
	ActionEntry be static. It triggers side effects when the
	LocalVarInspector2 is instantiated (and the menu used) more
	than once.
	Use a UIManager local to this class, not the one of the
	debugging perspective. Add a new menu entry to copy the value of a
	variable. This uses a varobj powered variable walker for cases
	where the variable is a compound variable and thus must be unfolded
	so that its member needs to be retrieved from the debugger.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::init_actions): Don't make the array of ActionEntry
	be static.
	(DBGPerspective::load_menu): Allow this to be called twice with the
	same menu file.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::init_actions): Don't make the array of
	ActionEntry be static.

2009-05-30  Dodji Seketeli <dodji@redhat.com>

	New varobj aware variable walker
	* configure.ac: Generate src/dbgengine/varobjwalker.conf from
	src/dbgengine/varobjwalker.conf.in
	* src/dbgengine/nmv-gdb-engine.cc:
	(OnCreateVariableHandler::can_handle): Add more logging.
	* src/dbgengine/nmv-i-var-walker.h: Cleanup the IVarWalker iface.
	Remove some needless references from the APIs.
	* src/dbgengine/nmv-var-walker.cc: Adjust API implementations.
	* src/dbgengine/nmv-varobj-walker.cc: New implementation of
	the IVarWalker interface. This one walks a variable that is backed
	by GDB/MI a Variable Object and recursively unfolds it.
	* src/dbgengine/Makefile.am: Add nmv-varobj-walker.cc to the build
	system.
	* src/dbgengine/varobjwalker.conf.in: The conf file of the
	new varobjwalker DynMod.
	* tests/test-varobj-walker.cc: New test for the varobj-walker.
	* tests/Makefile.am: Add the new test-varobj-walker.cc to the build
	system.

2009-05-26  Dodji Seketeli <dodji@redhat.com>

	Unbreak pointer dereferencing with --disable-varobjs
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	(get_context_menu): Load the menu file from
	localvarsinspectorpopup.todelete.xml.

2009-05-26  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-05-25  Dodji Seketeli <dodji@redhat.com>

	New menu to set a watchpoint on a local variable
	* src/persp/dbgperspective/menus/localvarsinspectorpopup.todelete.xml:
	This menu file is now the one used by the now-ancient LocalVarsInspector
	widget. When that widget is removed, this file oughts to be removed
	as well.
	* src/persp/dbgperspective/menus/localvarsinspectorpopup.xml: New
	menu file. Used by LocalVarsInspector2.
	* src/persp/dbgperspective/menus/Makefile.am:
	Added localvarsinspectorpopup.todelete.xml and
	localvarsinspectorpopup.xml menu files to the build system.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::init_actions,
	(LocalVarsInspector2::Priv::get_local_vars_inspector_menu,
	LocalVarsInspector2::Priv::popup_local_vars_inspector_menu,
	LocalVarsInspector2::Priv::on_variable_path_expression_signal,:
	LocalVarsInspector2::Priv::on_variable_path_expression_signal_set_wpt,
	LocalVarsInspector2::Priv::on_variable_path_expr_copy_to_clipboard_action,
	LocalVarsInspector2::Priv::on_create_watchpoint_action):
	New methods.
	(LocalVarsInspector2::Priv::on_button_press_signal): Popup the
	context menu when the user right clicks on a variable node.

2009-05-25  Dodji Seketeli <dodji@redhat.com>

	VarInspector2 got a new "copy-varable-path" menu
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarInspector2::Priv::Priv): A reference to IPerspective is now
	stored into the inspector. It must be passed at construction time.
	(VarInspector2::Priv::init_actions): New method that setups menu
	actions so that we can have a menu proposing to copy the path
	expression of variable node to the gtk clipboard. As we have access
	to the perspective, we can access the ui_manager through the
	workbench, yay.
	(VarInspector2::Priv::build_widget):
	Call VarInspector2::Priv::init_actions.
	(VarInspector2::Priv::connect_to_signals): Setup the
	on_button_press_signal slot for when we right click on a variable
	node.
	(VarInspector2::Priv::get_var_inspector_menu): New method. Load the
	contextual menu from its varinspectorpopup.xml menu file.
	(VarInspector2::Priv::popup_var_inspector_menu): New method. Pops
	the menu up.
	(VarInspector2::Priv::on_button_press_signal): New slot. Popups the
	new contextual menu.
	(VarInspector2::Priv::on_variable_path_expr_copy_to_clipboard_action):
	New method.
	(VarInspector2::Priv::on_variable_path_expression_signal): New
	method.
	(VarInspector2::VarInspector2): The constructor now takes a
	reference to IPerspective.
	* src/persp/dbgperspective/nmv-var-inspector2.h:
	(VarInspector2::VarInspector2): Likewise.
	* src/persp/dbgperspective/menus/varinspectorpopup.xml:
	This menu file is now used by VarInspector2.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc,h:
	Pass a reference of the perspective to the dialog. That reference
	is then passed to the VarInspector2 widget.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::inspect_variable): Adjust to pass a
	reference of the perspective to the var inspector dialog.
	(DBGPerspective::set_watchpoint_using_dialog): Likewise for the
	watchpoint dialog.

2009-05-25  Dodji Seketeli <dodji@redhat.com>

	Cosmetic cleanups in CallStack
	* src/persp/dbgperspective/nmv-call-stack.cc:
	(CallStack::Priv::popup_call_stack_menu): Cosmetic cleanups.

2009-05-25  Dodji Seketeli <dodji@redhat.com>

	Move CallStack::Priv::load_menu to IPerspective.
	* src/persp/nmv-i-perspective.h: (IPerspectrive::load_menu): New
	New entry point.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc,h:
	(DBGPerspective::load_menu): New entry point.
	* src/persp/dbgperspective/nmv-call-stack.cc:
	(CallStack::Priv::load_menu): Remove this.
	CallStack::Priv::(get_call_stack_menu): Rather use the
	new IPerspective::load_menu method.

2009-05-24  Dodji Seketeli <dodji@redhat.com>

	Allow getting the workbench from a perspective
	* src/persp/nmv-i-perspective.h (IDebugger::get_workbench):
	New abstract interface.
	* src/persp/dbgperspective/nmv-dbg-perspective.h:
	(DBGPerspective::get_workbench): Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::get_workbench): New implementation.

2009-05-24  Dodji Seketeli <dodji@redhat.com>

	Show watchpoint expressions in breakpoint views
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	(struct BPColumns::expression): New member.
	(BPColumns::BPColums): Add the new BPColumns::expression member.
	(BreakpointsView::Priv::build_tree_view): Create a column for
	expressions.
	(BreakpointsView::Priv::update_breakpoint): Update expression
	column.

2009-05-24  Dodji Seketeli <dodji@redhat.com>

	Shorten too long lines
	* src/dbgengine/nmv-dbg-common.h: Split lines longer than 80
	characters.

2009-05-23  Dodji Seketeli <dodji@redhat.com>

	New IDebugger::query_variable_path_expr.
	* src/dbgengine/nmv-i-debugger.h
	(IDebugger::Variable::path_expression): New accessor for the
	path expression of a variable.
	(IDebugger::query_variable_path_expr): Declare new abstract interface entry
	point.
	(GDBEngine::query_variable_path_expr): Declare new concrete
	interface entry point.
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::query_variable_path_expr): New implementation of
	IDebugger::query_variable_path_expr. Sends
	-var-info-path-expression to GDB.
	(OnCommandDoneHandler::do_handle): Notify client code whenever
	we receive the reply of -var-info-path-expression.
	* tests/test-var-path-expr.cc: New test.
	* tests/Makefile.am: Add the new test to the build system.

2009-05-23  Dodji Seketeli <dodji@redhat.com>

	Parse the result of -var-info-path-expression
	* src/dbgengine/nmv-dbg-common.h:
	(Output::ResultRecord::m_path_expression,
	Output::ResultRecord::m_has_path_expression): New members.
	(Output::ResultRecord::clear): Clear the new members we just added.
	(Output::ResultRecord::path_expression,
	Output::ResultRecord::has_path_expression): New accessor for the new
	members.
	* src/dbgengine/nmv-gdbmi-parser.h:
	(GDBMIParser::parse_var_path_expression): Declare ...
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(GDBMIParser::parse_var_path_expression): ... function.
	(GDBMIParser::parse_result_record): Wire the parsing of variable
	path expression here, in ^DONE records.

2009-05-21  Dodji Seketeli <dodji@redhat.com>

	Fix typo in configure.ac
	* configure.ac: The help message should say
	--enable-symsvis, not --enable-symvis.

2009-05-21  Dodji Seketeli <dodji@redhat.com>

	Conditionally compile test-watchpoint.cc
	* configure.ac: Define the automake VAROBJS variable that is
	defined when varobjs support is enabled.
	* tests/Makefile.am: Only compile the watchpoint test if varobjs
	are supported.

2009-05-21  Dodji Seketeli <dodji@redhat.com>

	Cleanup test-breakpoint.cc
	* tests/test-breakpoint.cc: Use the usual exception macros.

2009-05-21  Dodji Seketeli <dodji@redhat.com>

	Unbreak the build
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc: Properly nest
	ifdefs.

2009-05-21  Dodji Seketeli <dodji@redhat.com>

	Add regression test for watchpoints
	* tests/test-watchpoint.cc: New test.
	* tests/Makefile.am: Integrate the new test to the build system.

2009-05-21  Dodji Seketeli <dodji@redhat.com>

	Unbreak the build with --disable-varobjs
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Protect use of
	features depending on varobjs support with #ifdef WITH_VAROBJS.
	* src/persp/dbgperspective/nmv-var-inspector.cc:
	(VarInspector::Priv::set_variable): Add a new boolean parameter to control
	the expansion of the added variable.
	(VarInspector::set_variable): Likewise.
	(VarInspector::inspect_variable): Likewise.

2009-05-18  Dodji Seketeli <dodji@redhat.com>

	Allow VarInspector2 to expand the variable it appended
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarInspector2::Priv::set_variable): Add a new param to expand the
	variable to its first level if it has children.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: Expand
	variable shown in the inspector.

2009-05-17  Dodji Seketeli <dodji@redhat.com>

	Add watchpointdialog.glade to po/POTFILES.in
	* po/POTFILES.in: Add src/persp/dbgperspective/glade/watchpointdialog.glade
	to the list of files to consider for i18n.

2009-05-17  Dodji Seketeli <dodji@redhat.com>

	Various cleanups.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.h: Cosmetic
	cleanup.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: Likewise.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.h: Don't
	forward declare IDebugger.

2009-05-17  Dodji Seketeli <dodji@redhat.com>

	Update the breakpoint view to show watchpoints
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	(BreakpointsView::Priv::build_tree_view): Add a new 'Type' column
	to discriminate standard breakpoints from watchpoints.
	(BreakpointsView::Priv::on_debugger_stopped_signal): Consider watchpoints
	alongside standard breakpoints.
	When we stop because a watchpoint got out of scope, erase the
	watchpoint graphical representation from the view.
	(BreakpointsView::Priv::erase_breakpoint): New entry point.

2009-05-17  Dodji Seketeli <dodji@redhat.com>

	Initial backend support for setting watchpoints
	* src/dbgengine/nmv-i-debugger.h (class IDebugger::BreakPoint):
	New IDebugge::BreakPoint::Type enum to discriminate different types
	of breakpoints e.g. watchpoint and standard breakpoints.
	(IDebugger::BreakPoint::expression): New accessors for the
	expression that triggered the watchpoint.
	(IDebugger::BreakPoint::type): New accessors for the type of
	Breakpoint.
	(IDebugger::set_watchpoint): Declare new abstract entry point.
	* src/dbgengine/nmv-gdb-engine.h (DGBEngine::set_watchpoint):
	Declare new concrete entry point.
	* src/dbgengine/nmv-gdb-engine.cc (OnStoppedHandler::do_handle):
	Consider IDebugger::WATCHPOINT_SCOPE types of breakpoints when
	notifying the user.
	(GDBEngine::set_watchpoint): New implementation of
	IDebugger::set_watchpoint.
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_attribute):
	Add a new overload that represents an attribute using the
	GDBMIResult type. Make the old overload use this new one.
	(GDBMIParser::parse_stopped_async_output): use the
	new GDBMIParser::parse_attribute overload. Do some style cleanup.
	(GDBMIParser::parse_out_of_band_record): Recognize the wpnum
	attribute that is present when the inferior stopped because a
	watchpoint triggered.
	Use the IDebugger::BreakPoint::expression accessor to store the
	expression that triggered the watchpoint.
	Set the new IDebugger::BreakPoint::type property so that we can
	tell the difference between a standard breakpoint and a watchpoint.

2009-05-17  Dodji Seketeli <dodji@redhat.com>

	Remove dead code from gdbmi parser
	* src/dbgengine/nmv-gdbmi-parser.cc: Remove functions that were
	later re-implemented as methods the GDBMIParser class.
	* src/dbgengine/nmv-gdbmi-parser.h: Likewise. Transfert the
	comments from the removed free form functions to their method
	peers.

2009-05-17  Dodji Seketeli <dodji@redhat.com>

	Initial support to set watchpoints
	* src/persp/dbgperspective/glade/watchpointdialog.glade: New glade
	file.
	* src/persp/dbgperspective/glade/Makefile.am: Add the glade file to
	the build system.
	* src/persp/dbgperspective/nmv-watchpoint-dialog.h: Declare ...
	* src/persp/dbgperspective/nmv-watchpoint-dialog.cc ... the new
	type WatchpointDialog.
	* src/persp/dbgperspective/Makefile.am: Add the new files to the
	build system.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Bring up the
	the new watchpoint dialog when the user hits <control>-T.
	* src/persp/dbgperspective/menus/menus.xml: Add a new menu item for
	setting watchpoints.

2009-05-05  Luca Bruno <lucab@debian.org>

	New nemiver upstream version 0.6.7-1

2009-05-05  Luca Bruno <lucab@debian.org>

	New upstream version 0.6.6-1

2009-05-03  Dodji Seketeli <dodji@redhat.com>

	Support variable value editing in LocalVarsInspector2 (Closes: #581169)
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::init_graphical_signals): Install the
	Priv::on_cell_edited_signal slot.
	(LocalVarsInspector2::Priv::on_tree_view_selection_changed_signal):
	If the selected variable is editable, then make the cell editable.
	(LocalVarsInspector2::Priv::on_cell_edited_signal): New slot.
	Assign the variable according to what the user typed.
	(LocalVarsInspector2::Priv::on_variable_assigned_signal): New slot.
	Graphically update the variable value upon assignment.

2009-05-03  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-05-03  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Update release message
	* Makefile.am: Update release blurb.

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Bump to 0.7.0
	* configure.ac: Update to 0.7.0 for development.

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog
	* ChangeLog: Automatically update.

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Update NEWS file
	* NEWS: Mention significant changes since 0.6.6

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog
	* ChangeLog: automatically regenerate

2009-05-02  Dodji Seketeli <dodji@redhat.com>

	Remove reference to non-generated tests
	* tests/Makefile.am: Remove references to runtestoverloads and
	runtestglobalvariables to make automake happy.

2009-05-01 17:49:36 -0400  Hubert Figuiere <hub@figuiere.net>

	Fix a breakage if built without gtkhex
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_going_to_run_target_signal):
	get_memory_view is only if memoryview is compiled.

2009-05-01 17:47:53 -0400  Hubert Figuiere <hub@figuiere.net>

	Only include <gtk/gtk.h> (Closes: #581047)
	* src/uicommon/ephy-spinner-tool-item.h: only include gtk/gtk.h
	See http://live.gnome.org/GnomeGoals/CleanupGTKIncludes

2009-05-01 13:38:57 -0400  Hubert Figuiere <hub@figuiere.net>

	Fix a typo
	* git-commit-messages.README: fix a typo

2009-05-01  Dodji Seketeli <dodji@redhat.com>

	Make LocalVarsInspector2 properly show selected frame's arguments
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::finish_handling_debugger_stopped_event):
	Remember the current frame. List the frame arguments of the current
	frame, not of the frame which index is 0.
	(LocalVarsInspector2::show_local_variables_of_current_function):
	Make this accept a frame in parameter. This is the frame
	the function needs to fetch the arguments for. It's not clean to do
	this but we have no easy way to fetch the arguments of the "current"
	function, unfortunately.

2009-05-01  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-05-01  Dodji Seketeli <dodji@redhat.com>

	Properly list arguments of the selected frame, not of the top most only
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc,h:
	(LocalVarsInspector::Priv::finish_handling_debugger_stopped_event):
	Remember the current frame. List the frame arguments of the current
	frame, not of the frame which index is 0.
	(LocalVarsInspector::Priv::on_frames_params_listed_signal):
	Look for the arguments of the previously saved frame, not just for
	the frame at level 0.
	(LocalVarsInspector::show_local_variables_of_current_function):
	Make this accept a frame in parameter. This is the frame
	the function needs to fetch the arguments for. It's not clean to do
	this but we have no easy way to fetch the arguments of the "current"
	function, unfortunately.

2009-05-01  Dodji Seketeli <dodji@redhat.com>

	Add CallStack::current_frame entry point
	* src/persp/dbgperspective/nmv-call-stack.h,cc:
	(CallStack::current_frame): New entry point.

2009-05-01  Dodji Seketeli <dodji@redhat.com>

	Set IDebugger state before firing IDebugger::command_done_signal
	* src/dbgengine/nmv-gdb-engine.cc:
	(OnCommandDoneHandler::do_handle): Set internal state about current
	frame level and "being attached to target" before firing out the
	IDebugger::command_done_signal(). This ensures that IDebugger
	is in a consistent state when client code is notified.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Add new IDebugger::get_current_frame_level abstract API and implementation
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::get_current_frame_level): New abstract interface.
	* src/dbgengine/nmv-gdb-engine.h:
	(GDBEngine::get_current_frame_level,
	GDBEngine::set_current_frame_level): New concrete interfaces.
	* src/dbgengine/nmv-gdb-engine.cc:
	(OnStoppedHander::do_handle): Save the current frame level if we
	have the information.
	(OnCommandDoneHandler::do_handle): Once the 'select-frame'
	command was successfully done, save the requested frame level as
	the current frame level.
	(GDBEngine::select_frame): Embed the requested frame level in the
	Command as tag2.
	(GDBEngine::get_current_frame_level): New implementation.
	(GDBEngine::set_current_frame_level): Likewise.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Add a new integer tag to the Command type
	* src/dbgengine/nmv-dbg-common.h:
	(Command::tag2): new accessors.

2009-04-26  Dodji Seketeli <dodji@redhat.com>

	Preliminary support of variable editing in VarInspector2
	* src/dbgengine/nmv-i-debugger.h (IDebugger::is_variable_editable):
	New entry point abstract entry point declaration.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::is_variable_editable):
	New concrete entry point declaration ...
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::is_variable_editable):
	... Defined here.
	* src/persp/dbgperspective/nmv-variables-utils.h:
	(struct VariableColumns): Add a new hidden column at offset
	VARIABLE_VALUE_EDITABLE_OFFSET to hold the variable_value_editable flag
	about the editability of a variable.
	* src/persp/dbgperspective/nmv-vars-treeview.h:
	(VarsTreeView::ColumnIndex): New enum to hold the indexes the
	columns of the VarsTreeView.
	* src/persp/dbgperspective/nmv-vars-treeview.cc:
	(VarsTreeView::VarsTreeView): Connect the "editable" attribute
	of the cell renderer of the variable value with the new hidden flag
	of VariableColumns at VARIABLE_VALUE_EDITABLE_OFFSET offset.
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarInspector2::Priv::connect_to_signals): Connect
	VarInspector2::Priv::on_cell_edited_signal to the
	signal_edited of the text cell renderer of the variable values.
	(VarInspector2::Priv::on_cell_edited_signal): New signal handler.
	When the value of a given variable is edited, assign the variable
	to the new value.
	(VarInspector2::Priv::on_tree_view_selection_changed_signal):
	When a variable is selected, detected if the variable is editable
	or not, and set the editability property of the variable's value
	cell accordingly.
	(VarInspector2::Priv::on_variable_assigned_signal): New signal
	handler called when a variable gets assigned. Just update the
	variable node that got modified.

2009-04-25  Dodji Seketeli <dodji@redhat.com>

	Factorize the implementation of varobjs related entry points
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::create_variable): Modify signature so that we can
	share the implementation between the two overloads.
	(IDebugger::delete_variable): Likewise.
	(IDebugger::unfold_variable): Likewise.
	(IDebugger::assign_variable): Likewise.
	(IDebugger::evaluate_variable_expr): Likewise.
	* src/dbgengine/nmv-gdb-engine.h:
	(GDBEngine::create_variable): Adjust.
	(GDBEngine::delete_variable): Likewise.
	(GDBEngine::unfold_variable): Likewise.
	(GDBEngine::assign_variable): Likewise.
	(GDBEngine::evaluate_variable_expr): Likewise.
	(GDBEngine::list_changed_variables): Likewise.
	(GDBEngine::list_register_names): Remove default variable value
	from the function declaration.
	(GDBEngine::list_register_values): Likewise.
	(GDBEngine::list_changed_registers): Likewise.
	(GDBEngine::set_memory): Likewise.
	* src/dbgengine/nmv-gdb-engine.cc:
	(null_const_variable_slot, null_const_variable_list_slot): New
	functions.
	(GDBEngine::create_variable): Factorize the implementation
	between the two overloads.
	(GDBEngine::delete_variable): Likewise.
	(GDBEngine::unfold_variable): Likewise.
	(GDBEngine::assign_variable): Likewise.
	(evaluate_variable_expr): Likewise.
	(GDBEngine::list_changed_variables): Likewise.

2009-04-24  Dodji Seketeli <dodji@redhat.com>

	Properly un-highlight highlighted variables when stepping in a function
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::clear_local_variables): Clear
	the list of local vars to un-highlight.
	(LocalVarsInspector2::Priv::clear_function_arguments): Clear the
	the list of function arguments un-highlight.
	(LocalVarsInspector2::Priv::update_local_variables): When stepping
	in a function, make sure the variable that were highlighted during the
	previous step are properly un-highlighted during the current step.
	(LocalVarsInspector2::Priv::update_function_arguments): Likewise
	for function arguments.
	(LocalVarsInspector2::Priv::on_local_variable_updated_signal): When
	local a variable is updated (and highlihted) stash it on a shelf to
	un-highlight it during the coming step.
	(LocalVarsInspector2::Priv::on_function_args_updated_signal):
	Likewise for function arguments.

2009-04-24  Olav Vitters <olav@bkor.dhs.org>

	doap: fix short description

2009-04-23  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-04-22  Dodji Seketeli <dodji@redhat.com>

	Don't list all frame arguments from LocalVarsInspector2
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::finish_handling_debugger_stopped_event):
	Don't list all the frame arguments when we just want the arguments
	of the last one.
	(LocalVarsInspector2::show_local_variables_of_current_function):
	Likewise.

2009-04-22  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-04-22 00:16:01 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Clean up doap file
	* nemiver.doap: Fix name, remove comments

2009-04-22  Dodji Seketeli <dodji@redhat.com>

	DOAP file addition
	* nemiver.doap: New file.

2009-04-19  Dodji Seketeli <dodji@redhat.com>

	Implement call stack paging (Closes: #544116)
	* src/persp/dbgperspective/nmv-call-stack.cc:
	(CallStack::Priv::store_frames_in_cache): New entry point.
	(CallStack::Priv::append_frames_to_cache): Likewise.
	(CallStack::Priv::append_frame_args_to_cache): Likewise.
	(CallStack::Priv::format_args_string): Likewise.
	(CallStack::Priv::append_frames_to_tree_view): Likewise.
	(CallStack::Priv::update_frames_arguments): Likewise.
	(CallStack::Priv::update_call_stack): Likewise.
	(CallStack::Priv::update_selected_frame): Erasing the special
	"expand number of stack lines" row must be done immediately.
	(CallStack::Priv::finish_handling_debugger_stopped_event): Don't
	query the entirety of the call stack, rather, just range we need.
	(CallStack::Priv::on_frames_listed_signal): When in "frame paging"
	mode (that is, when the user asked for more frames), just append
	the received frames to the existing ones. Otherwise, clear the
	existing ones and set those we've just received.
	Also, don't query the entirety of the stack frame arguments. Just
	query the arguments of the frames we are interested in.
	(CallStack::Priv::on_frames_params_listed_signal): Don't reset
	the entire frame set. Just update the frames to add the arguments
	we received.
	(CallStack::Priv::on_config_value_changed_signal): We don't page
	the frames rendering anymore.
	(CallStack::Priv::on_call_stack_copy_to_clipboard_action): Clean
	this up. Reuse the new format_args_string() function to format
	function arguments.
	(CallStack::Priv::set_frame_list): Use the new
	append_frame_frames_to_tree_view.
	(CallStack::Priv::clear_frame_list): Properly clear frame and
	arguments cache. Restore the frame window range if need be.
	(CallStack::update_stack): Use the new
	CallStack::Priv::update_call_stack. This prevents from querying the
	whole stack set.
	(CallStack::clear): Use CallStack::Priv::clear_frame_list.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	(LocalVarsInspector::Priv::finish_handling_debugger_stopped_event):
	Only query the arguments of the current frame.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_going_to_run_target_signal): Don't forget
	to clear call stack, memory view and register view widgets.
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas:
	Set the default frame range size to 25.
	* tests/do-stack-overflow.cc: New test.
	* tests/Makefile.am: Add do-stack-overflow.cc to the build system.

2009-04-19  Dodji Seketeli <dodji@redhat.com>

	Allow IDebugger::list_frame to ask for a range of frames
	* src/dbgengine/nmv-i-debugger.h (IDebugger::list_frame): Add new
	two new parameters to allow asking for a range of frames,
	and not necessarily for all of them.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::list_frames): Adjust
	signature.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::list_frames): Adjust
	signature and pass on the right arguments to -stack-list-frames to
	for a frame window.

2009-04-19  Dodji Seketeli <dodji@redhat.com>

	Properly set frame level during call stack parsing
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_call_stack):
	Properly set IDebugger::Frame::level during the parsing.
	Also, don't cry when we reach "end of input" right after the
	parsing.
	* tests/test-gdbmi.cc (test_stack0): New test case for stack parsing.
	(init_unit_test_suite): Hook the new test case here.

2009-04-20  Dodji Seketeli <dodji@redhat.com>

	Don't clear the session when restarting with different args (Closes: 568822)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::execute_program): Do not clear breakpoints and other
	session info when the same program is re-launched.

2009-04-20  Dodji Seketeli <dodji@redhat.com>

	Don't quote empty arguments passed to the inferior
	* src/dbgengine/nmv-gdb-engine.cc (quote_args): Don't quote empty
	arguments. Otherwise, that can really change the behaviour of the
	inferior that would now see one more argument on its command line.

2009-04-20  Dodji Seketeli <dodji@redhat.com>

	Merge branch 'master' into varobjs-support

2009-04-19 22:46:17 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Quote arguments passed to gdb (Closes: #575889)
	* src/dbgengine/nmv-gdb-engine.cc: add a helper function that will
	properly shell-quote the arguments passed to gdb so that things
	won't get expanded twice (e.g. by the shell when invoking nemiver
	on the command line and then again when executing the program)

2009-04-19 21:42:49 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Merge branch 'ustring-cleanup'

2009-04-19 21:39:15 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Remove some more explicit UString constructors
	* src/dbgengine/nmv-i-debugger.h:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	The UString(std::string) constructor is not explicit any more so we don't
	need to explicitly 'cast' things anymore

2009-04-19 16:32:02 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Cleanup from last commit to make close_file() less fragile
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: move the
	update_file_maps() call to the end of the function so that we're not
	susceptible to memory corruption no matter what string we pass to
	this function, even though we've avoided the immediate problem by
	copying the string before passing it to this function

2009-04-19 14:57:28 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Fix critical warnings when closing a file (Closes: #578736)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: copy the path string out
	before passing it to close_file() because we will get memory corruption if
	we pass a reference to the std::map value, since close_file() modifies the
	map.

2009-04-18  Dodji Seketeli <dodji@redhat.com>

	Add some comments to variable utils calls.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::Priv::update_a_local_variable): Add some
	comments to the call to variable_utils::update_a_variable.
	* (LocalVarsInspector2::Priv::update_a_local_variable): Likewise.

2009-04-18  Dodji Seketeli <dodji@redhat.com>

	Beef up variables utils for variable search/updates
	* src/persp/dbgperspective/nmv-variables-utils.h:
	(variables_match, find_a_variable_descendent): Declare new entry
	points.
	* src/persp/dbgperspective/nmv-variables-utils.cc:
	(generate_path_to_descendent): New internal function.
	(walk_path_from_row): Likewise.
	(find_a_variable_descendent): New function.
	(variables_match): New function.
	(find_a_variable): During the search, consider all the members
	of the variable we are looking for. Use the new variables_match
	function for that. Add a comment to this function.
	(update_a_variable): Make sure we try to update the proper
	descendent variable member of the proper root variable.
	Use the new find_a_variable_descendent function for that.
	The name of this function might be misleading now. Changing that
	belongs to another commit I guess.

2009-04-18  Dodji Seketeli <dodji@redhat.com>

	Add more searching capabilities to IDebugger::Variable
	*  src/dbgengine/nmv-i-debugger.h:
	(IDebugger::Variable::get_member_at) : New entry point.
	(IDebugger::Variable::sibling_index): Likewise.
	(IDebugger::Variable::equals_by_value): Likewise.

2009-04-18  Dodji Seketeli <dodji@redhat.com>

	Make IDebugger::Variable non-copyable
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::Variable): declare the proper constructors and
	operators of the class private.

2009-04-18  Dodji Seketeli <dodji@redhat.com>

	Add == operator for pointers to SafePtr
	* src/common/nmv-safe-ptr.h: Add equality operator against
	pointers.
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::Variable::build_qname): Adjust. Don't use equality
	operator to test pointer nullity, rather use the bool () operator.

2009-04-18  Dodji Seketeli <dodji@redhat.com>

	Allow one one-line if clauses without braces
	* coding-style.txt: Allow one one-line if clauses without braces.

2009-04-16  Claude Paroz <claude@2xlibre.net>

	Updated French translation

2009-04-14 22:52:41 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Fix unused variable warning
	* tests/test-vars.cc: comment out a_cookie variable name to avoid a compiler
	warning

2009-04-14 22:17:48 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Fix string cleanup per Dodji's review
	* src/common/nmv-ustring.h: There's not really any reason to make the
	std::string constructor explicit anymore since it doesn't do locale
	conversion anymore.
	* src/dbgengine/nmv-gdb-engine.cc: use implicit conversion
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: remove TODO, style fix

2009-04-13  Landry Breuil <landry@fr.homeunix.org>

	Fixup includes for OpenBSD in nmv-dbg-perspective.cc
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: include
	sys/types and unistd.h for OpenBSD.

2009-04-13  Landry Breuil <landry@fr.homeunix.org>

	Fixup nmv-terminal.cc for OpenBSD
	* src/uicommon/nmv-terminal.cc: include utils.h, pty.h and unistd.h
	for OpenBSD.

2009-04-13  Landry Breuil <landry@fr.homeunix.org>

	Don't define GDBMITuple methods inline
	* src/dbgengine/nmv-gdbmi-parser.h: Move the definition of
	GDBMITuple from here ...
	* src/dbgengine/nmv-gdbmi-parser.cc: ... to here.
	We do this because otherwise gcc 3.3.5 won't compile this on
	OpenBSD.

2009-04-13  Dodji Seketeli <dodji@redhat.com>

	Mark new files for translation
	* po/POTFILES.in: Added nmv-local-vars-inspector2.cc and
	nmv-var-inspector2.cc.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Remove variable dereferencing code from LocalVarsInspector2
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc: Remove all
	the cruft related to variable dereferencing as it's now useless.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Use the variable object powered LocalVarsInspector2 in the debug perspective
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: When
	WITH_VAROBJS is defined, use LocalVarsInspector2, otherwise, use
	LocalVarsInspector.
	This entry adds variable objects support for local variables to the debug
	perspective.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	New LocalVarsInspector2 type using variable objects
	* src/persp/dbgperspective/nmv-local-vars-inspector2.[cc|h] New
	file. Okay does the same as (as been ported from)
	nmv-local-vars-inspector.cc, but it uses the new variable objects
	supported features of IDebugger. It's a bit smaller than it's
	predecessor. As a bonus point, it handles pointer dereferencing
	seemlessly. No need to do fancy stuff like "dereference pointer"
	now. Variable updating when stepping in the same function also
	seems to work better. For aggregate variables, querying is done
	lazily. It's when the user expands a variable node row that the
	children members of the row are queried from the backend. In
	theory, this should make the whole UI snappier when inspecting
	variables. However, each time we don't need variables, we now need
	to ask the backend to delete the "remote" variable object. This
	adds some more communication between the front end and backend, as
	far as variables lifetime is concerned.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Make VarInspector use the factorized update_unfolded_variable
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarInspector2::Priv::on_variable_unfolded_signal): Use the
	new nemiver::variables_utils::update_unfolded_variable instead of
	our own update_unfolded_variable.
	(VarInspector2::Priv::update_unfolded_variable): Remove this.
	Make sure to compile this, only with WITH_VAROBJS is defined.
	* src/persp/dbgperspective/nmv-var-inspector2.h:
	Make sure to compile this, only with WITH_VAROBJS is defined.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Factorize the support for updating unfolded variables
	* src/persp/dbgperspective/nmv-variables-utils.[h|cc]:
	(update_unfolded_variable): New function.
	This function can update the graphical node of a variable that got
	recently unfolded i.e., that recently gained member variables.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Make graphical variable finding be recursive
	* src/persp/dbgperspective/nmv-variables-utils.cc:
	(find_a_variable): Make the find be recursive, depth first.
	This way, this function can now find variable members as well.
	At the same time, don't error when we find an empty variable.
	Empty (dummy) variables can now exist in the tree. They exist when
	the parent variable node needs to be unfolded, but hasn't been
	unfolded yet. In that case, the parent node has a dummy (empty)
	variable that is there just so that an expander appears on the
	parent node, inviting the user to unfold it. Then, the UI can catch
	the node expansion event and sneak in the proper children node.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Cleanup the comment on IDebugger::root()
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::root): Update the comment.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Properly initialize Variable::m_num_expected_children
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::Variable::Variable): Don't forget to initialize
	m_num_expected_children.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Pass data to IDebugger::list_changed_variables by reference
	* src/dbgengine/nmv-i-debugger.h (IDebugger::list_changed_variables):
	Pass the list of variables (in the slot) by reference.
	* src/dbgengine/nmv-gdb-engine.[h|cc]:
	GDBEngine::list_changed_variables): Likewise.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Remove useless attribute (cleanup)
	* src/dbgengine/nmv-gdb-engine.cc:
	* (OnCreateVariableHandler::do_handle): Remove the "unused" attribute.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Add new IDebugger::get_current_frame_level abstract API and implementation
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::get_current_frame_level): New abstract interface.
	* src/dbgengine/nmv-gdb-engine.h:
	(GDBEngine::get_current_frame_level,
	GDBEngine::set_current_frame_level): New concrete interfaces.
	* src/dbgengine/nmv-gdb-engine.cc:
	(OnStoppedHander::do_handle): Save the current frame level if we
	have the information.
	(OnCommandDoneHandler::do_handle): Once the 'select-frame'
	command was successfully done, save the requested frame level as
	the current frame level.
	(GDBEngine::select_frame): Embed the requested frame level in the
	Command as tag2.
	(GDBEngine::get_current_frame_level): New implementation.
	(GDBEngine::set_current_frame_level): Likewise.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Add a new integer tag to the Command type
	* src/dbgengine/nmv-dbg-common.h:
	(Command::tag2): new accessors.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Populate Variable::num_expected_children at Variable parsing time
	* GDBMIParser::parse_variable: Don't forget to set
	IDebugger::Variable::num_expected_children, so that
	IDebugger::Variable::needs_unfolding() later works correctly.

2009-04-12  Dodji Seketeli <dodji@redhat.com>

	Properly parse empty result set of -var-update
	* GDBMIParser::parse_var_changed_list: Don't error when we get
	an empty set of changed variables.
	* tests/test-gdbmi.cc: New test for this case.

2009-04-11 21:56:20 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Don't automatically convert locale in UString constructor
	* src/common/nmv-ustring.cc: remove the automatic locale
	conversion from the UString(std::string) constructor.  This can be handy,
	but tends to introduce issues when you're not really careful.
	* src/dbgengine/nmv-gdb-engine.cc:
	* src/main.cc:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	* src/persp/dbgperspective/nmv-memory-view.h: go through and make sure we're
	not depending on the old constructor locale conversion behavior anywhere,
	and fix a few other locale-related issues

2009-04-10 22:17:25 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Start of Big overhaul of string / locale handling
	* src/common/nmv-ustring.h: make the UString(std::string) constructor
	explicit because we were getting a lot of unwanted implicit
	conversions.  This was compounded by the fact that this constructor
	actually does a locale conversion. So the combination of unwanted
	implicit conversions and charset conversion killed our gdbmi parsing
	performance in some areas.
	* src/common/nmv-log-stream.cc:
	* src/common/nmv-log-stream.h: Add some overloaded operator<< for char*
	and std::string so that when we log C strings or std::strings, they
	don't need to be converted to UStrings first.  Also, change the
	operator<<(UString) to operator<<(Glib::ustring) because otherwise
	attempting to log a Glib::ustring resulted in ambiguity and logging a
	UString as a Glib::ustring should be just fine
	* src/common/nmv-env.cc:
	* src/dbgengine/nmv-gdb-engine.cc:
	* src/dbgengine/nmv-gdbmi-parser.cc:
	* src/dbgengine/nmv-i-debugger.h:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	* src/persp/dbgperspective/nmv-locate-file-dialog.cc:
	* src/workbench/nmv-workbench.cc: fixed up all of the implicit
	conversions from std::string to UString that were exposed when making
	the constructor explicit

2009-04-05  Dodji Seketeli <dodji@redhat.com>

	Make the variable inspector dialog support variable objects
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::Variable::need_unfolding): New entry point.
	(IDebugger::Variable::*): Add some comments here and there.
	* src/persp/dbgperspective/nmv-variables-utils.cc (append_a_variable):
	When adding a variable that needs unfolding later, add a dummy child
	node to it, so that the user can see a tree row expander and click on it
	to unfold the variable. Later, when adding variable members to that
	variable that needs unfolding, delete the dummy node and add the
	proper children nodes.
	* src/persp/dbgperspective/nmv-var-inspector2.[cc|]: Added
	the VarInspector2 type that uses the variable objects backend to
	inspect variables.
	* src/persp/dbgperspective/Makefile.am: Add nmv-var-inspector2.[cc|h]
	to the build system.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: Use
	VarInspector2 when configured with --enable-varobjs.

2009-04-05  Dodji Seketeli <dodji@redhat.com>

	Rename list<VariableSafePtr> into VariableList
	* src/dbgengine/nmv-i-debugger.h:
	Rename list<VariableSafePtr> into VariableList for convenience and
	compacity. Adjust the rest of the file accordingly.

2009-04-05  Dodji Seketeli <dodji@redhat.com>

	Variables should have their values upon unfolding
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::unfold_variable):
	Tell GDB to give us the value of the variable it unfolds.

2009-04-05  Dodji Seketeli <dodji@redhat.com>

	Add a --enable-varobjs configure switch
	* configure.ac: Create --enable-varobjs configure switch. When
	switched on, the WITH_VAROBJS C macros is defined and usable in the
	source code to detect if the package has been configured with
	--enable-varobjs switch.

2009-04-04  Dodji Seketeli <dodji@redhat.com>

	Rename VarInspector2 into VarInspector
	* src/persp/dbgperspective/nmv-var-inspector.[cc|h]: Rename
	VarInspector2 into VarInspector.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: Adjust.

2009-04-04  Dodji Seketeli <dodji@redhat.com>

	Bumped version number to 0.6.7 for development
	* configure.ac: bumped version number to 0.6.7

2009-03-29  dodjirpm <dodjirpm@virtrawhide.localdomain>

	Don't link the 'docore' test with libnemivercommon.so
	* tests/Makefile.am:
	Don't link with libnemivercommon.so

2009-04-03  Dodji Seketeli <dodji@redhat.com>

	Some IDebugger/GDBEngine cleanup
	* src/dbgengine/nmv-gdb-engine.[cc|h],
	src/dbgengine/nmv-i-debugger.h: Added some comments. Don't pass
	IDebugger::VariableSafePtr by reference as signal template parameters.
	It just bypasses the reference counting. Also, a SafePtr is not bigger
	than the underlying pointer, so the is no need to do that in that case.

2009-04-03  Dodji Seketeli <dodji@redhat.com>

	Don't quote arguments of ptype and -data-evaluate-expression
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::evaluate_expression,
	GDBEngine::print_variable_value, GDBEngine::get_variable_value,
	GDBEngine::print_pointed_variable_value, GDBEngine::print_variable_type,
	GDBEngine::get_variable_type, GDBEngine::dereference_variable,
	GDBEngine::set_register_value): Do not quote the arguments of
	-data-evaluate-expression and ptype because that changes the type of
	the expression. See comments at
	http://bugzilla.gnome.org/show_bug.cgi?id=574212.
	* tests/test-types.cc: New regression test file to make sure we don't
	sure we don't regress again here.
	* tests/Makefile.am: Integrate test-types.cc

2009-04-04  Dodji Seketeli <dodji@redhat.com>

	Bumped version number to 0.6.7 for development
	* configure.ac: bumped version number to 0.6.7

2009-04-03  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog
	* ChangeLog: Update.

2009-04-03  Dodji Seketeli <dodji@redhat.com>

	Update NEWS file
	* NEWS: minor update

2009-04-01  Dodji Seketeli <dodji@redhat.com>

	Update release text
	* Makefile.am: The release is also available in tar.bz2 format.
	Update Nemiver project homepage and download links.

2009-03-29  Dodji Seketeli <dodji@redhat.com>

	Update NEWS file

2009-03-29  Dodji Seketeli <dodji@redhat.com>

	Update ChangeLog

2009-03-29  Dodji Seketeli <dodji@redhat.com>

	Bump version number to 0.6.6

2009-03-29  dodjirpm <dodjirpm@virtrawhide.localdomain>

	Don't link the 'docore' test with libnemivercommon.so
	* tests/Makefile.am:
	Don't link with libnemivercommon.so

2009-04-03  Dodji Seketeli <dodji@redhat.com>

	Some IDebugger/GDBEngine cleanup
	* src/dbgengine/nmv-gdb-engine.[cc|h],
	src/dbgengine/nmv-i-debugger.h: Added some comments. Don't pass
	IDebugger::VariableSafePtr by reference as signal template parameters.
	It just bypasses the reference counting. Also, a SafePtr is not bigger
	than the underlying pointer, so the is no need to do that in that case.

2009-04-03  Dodji Seketeli <dodji@redhat.com>

	Don't quote arguments of ptype and -data-evaluate-expression
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::evaluate_expression,
	GDBEngine::print_variable_value, GDBEngine::get_variable_value,
	GDBEngine::print_pointed_variable_value, GDBEngine::print_variable_type,
	GDBEngine::get_variable_type, GDBEngine::dereference_variable,
	GDBEngine::set_register_value): Do not quote the arguments of
	-data-evaluate-expression and ptype because that changes the type of
	the expression. See comments at
	http://bugzilla.gnome.org/show_bug.cgi?id=574212.
	* tests/test-types.cc: New regression test file to make sure we don't
	sure we don't regress again here.
	* tests/Makefile.am: Integrate test-types.cc

2009-03-26  Dodji Seketeli <dodji@redhat.com>

	Add support to list/assign/evaluate/query variable objects
	* src/dbgengine/nmv-dbg-common.h:
	(Output::ResultRecord::has_changed_var_list,
	Output::ResultRecord::changed_var_list): New entry points.
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::Variable::parent):  Make this return a proper SafePtr
	instead of a bare pointer.
	(IDebugger::Variable::has_parent,
	IDebugger::Variable::root,
	IDebugger::Variable::get_descendant,
	IDebugger::variable_expression_evaluated_signal,
	IDebugger::changed_variable_signals,
	IDebugger::assigned_variable_signal,
	IDebugger::assign_variable,
	IDebugger::evaluate_variable_expr,
	IDebugger::list_changed_variables): New entry points.
	* src/dbgengine/nmv-gdb-engine.h:
	(GDBEngine::variable_expression_evaluated_signal,
	GDBEngine::changed_variables_signal,
	GDBEngine::assigned_variable_signal): Declare new signal getters.
	(GDBEngine::assign_variable, GDBEngine::assign_variable,
	GDBEngine::list_changed_variables): Declare new entry points.
	* src/dbgengine/nmv-gdb-engine.cc:
	(OnStoppedHandler::do_handle): Add more logging.
	(OnResultRecordHandler::can_handle,
	OnResultRecordHandler::do_handle): Handle replies of assign-variable
	and evaluate-expression commands.
	(OnListChangedVariableHandler): New output handler for the
	list-changed-variables command.
	(GDBEngine::init_output_handlers): Setup the
	new OnListChangedVariableHandler.
	(GDBEngine::variable_expression_evaluated_signal,
	GDBEngine::changed_variables_signal,
	GDBEngine::assigned_variable_signal): Define new signal getters.
	(GDBEngine::unfold_variable): Send the proper command to GDB to make
	it list all the values of each variable node.
	(GDBEngine::assign_variable,
	GDBEngine::evaluate_variable_expr,
	GDBEngine::list_changed_variables): Define new entry points.
	* src/dbgengine/nmv-gdbmi-parser.h :
	(GDBMIParser::parse_var_changed_list): Declare new entry point.
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(GDBMIParser::parse_var_list_children): Add a comment to describe the
	function.
	(GDBMIParser::parse_var_changed_list): Define new entry point to parse
	the result of GDBEngine::list_changed_variables.
	(GDBMIParser::parse_result_record): Use the new
	GDBMIParser::parse_var_changed_list to parse the result record of the
	call GDBEngine::list_changed_variables.
	* tests/test-gdbmi.cc: Add tests for parsing the result of
	IDebugger::list_changed_list.
	* tests/test-vars.cc: Updated this varobjs test to be able to assign
	values to a variable, list/update changed children of a given variable
	object, get the value of a variable object.
	This entry adds Basically adds support to assign a value to a variable
	object, list/update changed children of a given variable object and
	get the value of a variable object.

2009-03-15  Dodji Seketeli <dodji@redhat.com>

	Initial backend support for GDB Variable Objects
	* nmv-dynamic-module.[cc|h] (DynamicModule::set_name,
	DynamicModule::get_name, load_iface_using_context, ): New entry
	points.
	* src/dbgengine/nmv-dbg-common.h (Command::has_slot, Command::set_slot,
	Command::get_slot, Command::number_of_variables_deleted,
	ResultRecord::has_variable_children,
	ResultRecord::has_variable_children): New entry points.
	* src/dbgengine/nmv-i-debugger.h (IDebugger::Variable::internal_name): New
	entry point to adapt the current variable type to gdb variable
	objects.
	(IDebugger::Variable::to_string): Print the internal name of the
	variable as well as its name.
	(IDebugger::variable_created_signal,
	IDebugger::variable_deleted_signal,
	IDebugger::variable_unfolded_signal,
	IDebugger::build_qualified_internal_name,
	IDebugger::Variable::num_expected_children,
	IDebugger::Variable::has_expected_children,
	IDebugger::create_variable,
	IDebugger::delete_variable,
	IDebugger::unfold_variable): New interfaces entry points.
	* src/dbgengine/nmv-gdb-engine.h (GDBEngine::variable_created_signal,
	GDBEngine::variable_deleted_signal,
	GDBEngine::variable_unfolded_signal, GDBEngine::create_variable,
	GDBEngine::delete_variable, GDBEngine::unfold_variable): Declare the
	implementation of the new interface entry points.
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::variable_created_signal,
	GDBEngine::variable_deleted_signal, GDBEngine::variable_unfolded_signal,
	GDBEngine::variable_unfolded_signal, GDBEngine::create_variable,
	GDBEngine::delete_variable, GDBEngine::unfold_variable): Implement the
	new interface entry points.
	(OnCreateVariableHandler, OnDeleteVariableHandler,
	OnUnfoldVariableHandler): New output handlers to act upon the result of
	GDBEngine::create_variable, GDBEngine::delete_engine and
	GDBEngine::unfold_variable
	(GDBEngine::init_output_handlers): Register the new output handlers.
	* src/dbgengine/nmv-gdbmi-parser.[cc,h] (GDBMIParser::parse_variable,
	GDBMIParser::parse_variables_deleted): New entry points to parse the
	GDB/MI result of variable object creation and deletion.
	(GDBMIParser::parse_var_list_children): New entry point to parse MI
	result of -var-list-children.
	(GDBMIParser::parse_result_record): Use GDBMIParser::parse_variable and
	GDBMIParser::parse_variables_delete, and
	GDBMIParser::parse_var_list_children to parse the output
	records of -var-list-create, -var-list-delete and -var-list-children.
	* tests/test-vars.cc: New test case to test (in live)
	IDebugger::create_variable, IDebugger::delete_variable,
	IDebugger::unfold_variable.
	* tests/Makefile.am: Add new test-vars.c to the build system.
	* tests/fooprog.cc: Adjust this test case.
	* tests/test-gdbmi.cc: Add test cases for parsing the result
	of IDebugger::create_variable, IDebugger::delete_variable,
	IDebugger::unfold_variable.

2009-03-20  Dodji Seketeli <dodji@redhat.com>

	Make sure to never save empty sessions
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::record_and_save_new_session,
	DBGPerspective::record_and_save_session): Don't save the
	session if no program is being debugged.

2009-03-18 23:49:46 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Save session when switching debugging contexts (Fixes: #575912)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: save current session
	before executing a saved session, when attaching to a running program,
	when attaching to a remote target, and when detaching from a target

2009-03-18  Dodji Seketeli <dodji@redhat.com>

	Fix MI parsing error with Archer (Closes: #575660)
	* src/dbgengine/nmv-gdbmi-parser.cc(GDBMIParser::parse_threads_list):
	Parse the new "current-thread-id" RESULT even though we don't use it
	for now. Be more robust wrt unknown RESULT entries as well.
	* tests/test-gdbmi.cc: Add new test.

2009-03-14  Luca Bruno <lucab@debian.org>

	New upstream version 0.6.5-1

2009-03-14  Luca Bruno <lucab@debian.org>

	Bumped Standards-Version to 3.8.1 (no changes needed)

2009-03-14  Luca Bruno <lucab@debian.org>

	Added new intltool build-dep

2009-03-13  Dodji Seketeli <dodji@redhat.com>

	Fix tests to work with Boost.Test 1.37
	* tests/Makefile.am (runtestbreakpoint,
	runtestderef, runtestlocalvarslist,
	runtestglobalvariables): Don't link the tests with
	libboost_test_exec_monitor.
	* tests/test-breakpoint.cc: Don't include
	boost/test/test_tools.hpp. To use this, we actually need
	to drag in more that what we would like. And that won't be
	available in boost <= 1.34. We should only use the minimal test
	functionality, embedded inline in boost/test/minimal.hpp.
	This is what boost recommends for tests that are not proper unit tests.
	So don't use BOOST_REQUIRE_MESSAGE either, as it is provided by
	boost/test/test_tools.hpp. We should just use BOOST_REQUIRE that is
	provided by boost/test/minimal.
	* tests/test-deref.cc: Likewise.
	* tests/test-global-variables.cc: Likewise.
	* tests/test-local-vars-list.cc: Likewise.

2009-03-13  Dodji Seketeli <dodji@redhat.com>

	Remove useless include file
	* src/langs/nmv-cpp-parser.h: Don't #include <tr1/memory> as
	it's already done by nmv-cpp-ast.h.

2009-03-13  Landry Breuil <landry@rhaalovely.net>

	Port nmv-cpp-ast.h to OpenBSD
	* src/langs/nmv-cpp-ast.h: For older versions of g++,
	use boost/tr1/memory.hpp instead of tr1/memory.

2009-03-13  Landry Breuil <landry@rhaalovely.net>

	Port nmv-sqlite-cnx-drv.cc to OpenBSD
	* src/dbdimpl/sqlite/nmv-sqlite-cnx-drv.cc: Add #include unistd.h
	for sleep().

2009-03-13  Landry Breuil <landry@rhaalovely.net>

	Port nmv-proc-utils.cc to OpenBSD
	* src/common/nmv-proc-utils.cc: Add missing #include util.h for
	OpenBSD.

2009-03-13  Landry Breuil <landry@rhaalovely.net>

	Port nmv-plugin.cc to OpenBSD
	* src/common/nmv-plugin.cc:
	(Plugin::EntryPoint::Loader::Loader): Don't use THROW() without
	parameter.

2009-03-12  Landry Breuil <landry@rhaalovely.net>

	Port nemiver::common::DynamicModule to OpenBSD
	* common/nmv-dynamic-module.h:
	(DynamicModule::lookup_interface): Use the template keyword
	to make the compiler lookup names insides types that are template
	instantiations. This is not mandated by the C++ spec, but g++ 3.3.5
	won't work without it.
	(DynamicModuleManager::load_iface): Likewise.

2009-03-12  Landry Breuil <landry@rhaalovely.net>

	Port nemiver::UString to OpenBSD
	* src/common/nmv-ustring.cc: Define strnlen for OpenBSD.

2009-03-12  Hans Vercammen <hveso3@gmail.com>

	Fix build with gcc 4.1.2 (Closes: #572704)
	* src/common/nmv-log-stream.cc: Add a hash functor for std::string
	to be used with ext/hash_map.

2009-03-11  Dodji Seketeli <dodji@redhat.com>

	Update ephy-spinner widget (Closes: #574915)
	* src/uicommon/ephy-spinner.[c|h]: updated to the version of svn
	commit r8695.

2009-03-11  Dodji Seketeli <dodji@redhat.com>

	Don't quote args of -data-evaluate-expression in a call (Closes: #574913)
	* src/dbgengine/nmv-gdb-engine.cc (GDBEngine::call_function):
	Don't quote the arguments of -data-evaluate-expression in the
	context of a function call, otherwise, GDB won't call the function.

2009-03-10 22:48:30 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Fix up style issue
	* src/common/nmv-ustring.cc: fix function style from empty() to empty ()

2009-03-10 22:40:23 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Fix issues from patch review (Closes: #527947)
	* src/dbgengine/nmv-gdbmi-parser.cc: only test for <> braces since those are
	the only cases I've seen so far.  We can add others if we come across
	other situations where we need to change our comma-parsing strategy.
	* tests/test-gdbmi.cc: Initialize parser with correct variable

2009-03-07 16:23:04 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Don't split member vars incorrectly if value has comma (Closes: #527947)
	* src/dbgengine/nmv-gdbmi-parser.cc: add a variable for keeping track of the
	'brace level'.  e.g., the characters '(', '[', and '<' increment the brace
	level and the characters ')', ']', and '>' decrement the brace level.  If
	the brace level is 0, treat a comma as a delimiter between member
	variables; if it is greater than zero, treat a comma as part of the
	variable value.  For this particular case, we only really need to check
	for <> braces, but I added () and [] as well.
	* tests/test-gdbmi.cc: add a regression test for correct var value parsing

2009-03-10  Dodji Seketeli <dodji@redhat.com>

	Don't quote '*' in -data-evaluate-expression arguments (Closes: #574212)
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::print_pointed_variable_value,
	GDBEngine::dereference_variable): Leave the '*' operator
	out of the quotes, otherwise, GDB thinks '*' is part of the
	name of the variable we are trying to de-reference.
	* tests/test-deref.cc: Adjust this test case to to make it more
	robust. Chain things up properly so that we are sure stepping
	really happens after we are done with variable inspecting.

2009-03-04 22:33:31 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Check for empty before isspace in UString::chomp() (Closes: #574214)
	* src/common/nmv-ustring.cc: in cases where a string is all whitespace, an
	out-of-range exception was being thrown, because we were checking for
	isspace before we were checking that the string was non-empty.  I switched
	the order of these comparisons so now we never examine whether the first
	character of an empty string is a space.  At the same time I switched from
	using size() to using !empty() since theoretically that should be slightly
	more efficient.

2009-03-04 21:58:07 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Quote arguments to -data-evaluate-expression, ptype (bug #574212)
	* src/dbgengine/nmv-gdb-engine.cc: surround all variable names passed to
	-data-evaluate-expression or ptype with single-quotes because gdb
	apparently requires fully-qualified C++ names (e.g. names that contain ::)
	to be quoted in order for it to understand things correctly

2009-03-04 00:23:19 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Improve global variable listing (Bug #573709)
	* src/dbgengine/nmv-gdb-engine.cc: Don't increment oobr_it upon entering the
	fetch_variable: label, rather require that the iterator is incremented
	before entering the label.  Previously, when dropping into the
	fetch_variable label from above, the oobr_it iterator was not incremented,
	but when jumping ot the fetch_variable label (from line 3507), the
	iterator was already pre-incremented, which resulted in skipped variables.
	With this patch, I do get some global variables to show up in the list,
	but not all of them, so there are likely other problems lurking still
	related to global variable listing.

2009-03-07 22:53:11 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Sort columns of process selection dialog displays warning (Closes: #534700)
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc: This seems rather hacky,
	but I believe it's the 'proper' way to do it in GTK+: wrap the base
	ListStore in a TreeModelFilter (which provides filtering capability but
	removes sorting capability), and then wrap the TreeModelFilter in a
	TreeModelSort, which adds sorting capability back...

2009-03-08 14:57:37 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Ellipsize filename in tab (Closes: #565645)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: set the source view's
	tab label to ellipsize the middle of the filename if the name is longer
	than 25 characters.  Making this changed caused the close button to expand
	strangely when the nemiver window was resized, so I packed the label and
	close button into a hbox instead of a Table, and packed the button with
	Gtk::PACK_SHRINK so it should never expand.

2009-03-07 22:36:42 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Scroll 'File Open' list to starting source file (Closes: #525512)
	* src/persp/dbgperspective/nmv-file-list.cc: In addition to expanding the
	treeview to the starting filename, also scroll the treeview to the
	directory containing the starting file

2009-03-07 14:30:35 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Fix File list so keyboard navigation scrolls list again (Closes: #564294)
	* src/persp/dbgperspective/nmv-file-list.cc: Put a ScrolledWindow around the
	TreeView so that it scrolls properly when the user navigates with the
	keyboard.  The loading indicator should be outside of the ScrolledWindow
	* src/persp/dbgperspective/nmv-open-file-dialog.cc: Packing the
	FileList widget inside of a ScrolledWindow should not be the responsiblity
	of the dialog, leave that to the FileList widget itself.

2009-03-06 00:12:47 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Give indication of activity in the 'open file' dialog (Closes #564294)
	* src/persp/dbgperspective/nmv-file-list.cc: Add a loading status label to
	the file list widget that simply displays a "loading files from target"
	message when we start listing the source files.  The label is hidden when
	the list of files is actually received and set in the widget.
	* src/persp/dbgperspective/nmv-open-file-dialog.cc: don't show_all() the
	file list widget or otherwise we can't hide the loading status label
	mentioned above

2009-03-08 14:07:38 -0500  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Make the 'View > Memory' conditionally used (Closes: #564832)
	* src/persp/dbgperspective/menus/memoryview-menu.xml: add a new UI
	definition with only memory view menu items
	* src/persp/dbgperspective/menus/menus.xml: remove the memoryview menu item
	from the main menus UI definition because it should not always be used
	* src/persp/dbgperspective/menus/Makefile.am: add new menu file to be installed
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: conditionally add the
	memoryview menu item UI definition if ENABLE_MEMORYVIEW is defined

2008-12-24 00:25:38 -0600  Jonathon Jongsma <jjongsma@gnome.org>

	Enable re-ordering of source file tabs (Closes: #545246)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Add handling for
	re-ordering notebook tabs if compiled against GTK+ 2.12 or later

2009-03-07 00:01:42 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Change serial input to a FileChooserButton (Closes: #436057)
	* src/persp/dbgperspective/glade/remotetargetdialog.glade:
	* src/persp/dbgperspective/nmv-remote-target-dialog.cc: Change input widget
	for selecting the serial line from Gtk::Entry to Gtk::FileChooserButton

2009-03-02  Dodji Seketeli <dodji@redhat.com>

	Update commit log policy
	* git-commit-messages.README: Change the format the commit summary
	to make it end with "(Closes: #<bug-number>)" when the commit
	relates to a bug filed in bugzilla.

2009-03-01 22:59:48 -0600  Jonathon Jongsma <jonathon.jongsma@collabora.co.uk>

	Update all of the screenshots for the manual
	* help/C/figures/*.png: take new screenshots with a relatively default theme
	and up-to-date UI

2009-03-02  Dodji Seketeli <dodji@redhat.com>

	Better accessor definition in gitlog2gnucl
	* gitlog2gnucl (class Entry): use attr_accessor to define
	accessors.

2009-03-01  Dodji Seketeli <dodji@redhat.com>

	Wire ChangeLog update into 'make release'
	* Makefile.am: Add an 'update-changelog' target.
	Wire it to the 'release' target.

2009-03-01  Dodji Seketeli <dodji@redhat.com>

	Update NEWS file for 0.6.5
	* NEWS: Update Fixes and Translations entries.
	The format of this file has changed now. It's more git-ish now.

2009-03-01  Dodji Seketeli <dodji@redhat.com>

	GPL-ize gitlog2gnucl
	* gitlog2gnucl: Add GPL license blurb to the file.

2009-03-01  Dodji Seketeli <dodji@redhat.com>

	Better gitlog2gnucl input/output handling
	* gitlog2gnucl (Entry#to_s): Insert a tab before the Summary line.
	(main): Teach git log to generate each commit entry starting with
	a "--START-ENTRY--" marker string and ending with a "--STAR-ENTRY--"
	marker string. Remove useless spaces from commit entry fields.
	(process_git_log): Use commit start/end marker string.
	Also, various fields now don't contain useless
	spaces anymore

2009-03-01  Dodji Seketeli <dodji@redhat.com>

	Update build system for releases from git
	* Makefile.am: Throw svn-isms away
	* configure.ac: Bump version to 0.6.5

2009-03-01  Dodji Seketeli <dodji@redhat.com>

	Write gitlog2gnucl to generate GNU ChangeLogs
	* git-commit-messages.README: New file. Describes the git commit
	message format from now on.
	* gitlog2gnucl: Script to generate a GNU ChangeLog from the Nemiver
	git logs.

2009-02-28  Luca Bruno <lucab@debian.org>

	Shorten compilation lines
	* configure.ac: Shorten compilation lines by regrouping
	PKG_CHECK_MODULES calls.
	* tests/Makefile.am: Adjust this.

2008-11-30  Luca Bruno <lucab@debian.org>

	Added patches/series for quilt, to avoid lintian warning

2009-02-22  Dodji Seketeli <dodji@redhat.com>

	Blind tentative at fixing the crash #571036
	* src/dbgengine/nmv-i-debugger.h:
	(IDebugger::Variable::build_qname): Be defensive to avoid crashing.
	This might help for bug #571036 even though I haven't been able
	to reproduce it.

2009-02-22  Dodji Seketeli <dodji@src.gnome.org>

	Merge branch 'fix-tests' into allfixes

2009-02-22  Dodji Seketeli <dodji@redhat.com>

	Fix compilation with gcc 4.3.3
	* src/dbgengine/nmv-i-debugger.h: Include <stdint.h> before using
	uint8_t. This otherwise wouldn't compile with gcc 4.3.3

2009-02-14  Dodji Seketeli <dodji@src.gnome.org>

	Persist the Variable inspector dialog history
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::inspect_variable): Save the history of the variable
	inspection dialog, and restaure it whenever a new dialog is
	instantiated.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc:
	(get_cols): New entry point to statically create the ListStore columns
	only once. There is no need to instantiate those columns each time
	a Dialog is instantiated.
	(VarInspectorDialog::Priv::exists_in_history): New entry point.
	(VarInspectorDialog::Priv::add_to_history): Likewise.
	(VarInspectorDialog::Priv::inspect_variable): Reuse the new
	VarInspectorDialog::Priv::add_to_history.
	(VarInspectorDialog::set_history): New entry point.
	(VarInspectorDialog::get_history): Likewise.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.h:
	(VarInspectorDialog::set_history VarInspectorDialog::get_history):
	Declare the new entry points.

2009-02-14  Dodji Seketeli <dodji@src.gnome.org>

	Avoid duplicates in call function dialog history.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::call_function): Avoid duplicates in call function
	dialog history.

2009-02-13  Gil Forcada Codinachs <gforcada@src.gnome.org>

	Updated Catalan translation by David Planella

2009-02-11  Daniel Nylander <dnylande@src.gnome.org>

	sv.po: Updated Swedish translation

2009-02-02  Dodji Seketeli <dodji@redhat.com>

	Make Nemiver compile on gtkmm 2.12
	* src/persp/dbgperspective/nmv-call-function-dialog.cc:
	(CallFunctionDialog::call_expression): Don't use
	ComboBoxEntry::get_active_text because it's not
	present in gtkmm 2.12.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc:
	(VarInspectorDialog::Priv::do_inspect_variable): Likewise.
	(VarInspectorDialog::Priv::on_var_name_changed_signal): Likewise.
	(VarInspectorDialog::variable_name): Likewise.

2009-02-02  Dodji Seketeli <dodji@redhat.com>

	Fix 568821 - "Call function" dialog should remember history
	* src/persp/dbgperspective/nmv-call-function-dialog.cc:
	(CallFunctionDialog::Priv::Priv): Use and initialize a
	Gtk::ComboBoxEntry instead of a Gtk::Entry.
	Store the history in a Gtk::ListStore.
	(CallFunctionDialog::Priv::exists_in_history): New entry point.
	(CallFunctionDialog::Priv::clear_history): Likewise.
	(CallFunctionDialog::Priv::add_to_history): Likewise.
	(CallFunctionDialog::Priv::get_history): Likewise.
	(CallFunctionDialog::set_history): Likewise.
	(CallFunctionDialog::get_history): Likewise.
	(CallFunctionDialog::add_to_history): Likewise.
	(CallFunctionDialog::call_expression): Add the call expression
	To history.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::call_function): Feed the CallFunctionDialog
	instance with call expression history, and update our own copy
	of that history before destroying the dialog.

2009-02-02  Dodji Seketeli <dodji@redhat.com>

	Better pretty print when calling functions.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::call_function): Go to the begining of the line,
	on new lines.

2009-01-31  Dodji Seketeli <dodji@redhat.com>

	Fix 569168 – Cannot locate source with a full file name
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::find_file_in_source_dirs): Don't forget the case
	when we are given an absolute path. This patch is from
	"Romain Tatière" <romain@blogreen.org>.

2009-01-31  Dodji Seketeli <dodji@redhat.com>

	Fix 570029 – Print a message on the terminal when the user calls a function
	* src/uicommon/nmv-terminal.[cc|h] (Terminal::feed): New entry point.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::call_function): Add a message to the terminal
	about the function we are calling.

2009-01-31  Dodji Seketeli <dodji@src.gnome.org>

	Fix #567175 - Listing Source files from target executable is broken
	* src/dbgengine/nmv-gdb-engine.cc (OnFileListHandler::do_handle):
	Add some logging.
	* src/dbgengine/nmv-gdbmi-parser.cc (parse_result_record): Fix style.
	(GDBMIParser::parse_file_list): Fix a fatal typo that was breaking
	file list parsing. Fix style as well.
	* tests/test-gdbmi.cc: Add regression test for the file list parsing.

2009-01-31  Dodji Seketeli <dodji@src.gnome.org>

	Fix 568785 - New: Add Debugger category to the desktop file

2009-01-31  Dodji Seketeli <dodji@src.gnome.org>

	Fix compilation breakage with gtksourceviewmm-1
	* src/persp/dbgperspective/nmv-preferences-dialog.cc:
	Include gtksourceviewmm/sourcestyleschememanager.h only when compiling
	with gtksourceviewmm2.
	Also, fix function calling style to comply with Nemiver's coding style.

2009-01-31  Dodji Seketeli <dodji@src.gnome.org>

	Remove config.h.in from Source Control Manamagement.

2008-12-28  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation

2008-12-25  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix a typo
	* src/dbgengine/nmv-i-debugger.h:
	(BreakPoint::state_to_string): fix a typo in the string representation of
	NOT_STARTED

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Bug 530910 – View -> "Show Errors" and "Show Output" should not be displayed

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Don't link fooprog test program against libnemivercommon, etc.

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Bug 564301 – Assertion when trying to open variable inspector
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Don't fail an assertion
	when trying to pop up the variable inspector dialog (F12) when there are no
	source files open (Bug #564301)

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Bug 553213 – tabs are in different order to Alt-1,2,3,4,5
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: fix the order of the
	<alt>-N keyboard shortcuts to match the order of the tabs (Bug #553213)
	* src/persp/dbgperspective/menus/menus.xml: re-order the UI menu as well

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Remember history in var inspector dialog (Bug #536259)
	* src/persp/dbgperspective/glade/varinspectordialog.glade:
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: remember the history
	of the variables inspected in the variable inspector dialog so that you
	don't have to re-type them if you want to go back to one that you viewed
	earlier.  This isn't a perfect solution since the history is lost when the
	dialog is closed.  I'm not sure if it would be better to somehow make the
	history outlive the dialog or if we should jsut change the lifetime of the
	dialog (so that we call show()/hide() rather than creating and destroying it
	every time it's shown)
	Bug #536259

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Hook up the color theme preference
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: hook up the sourceivew
	theme preference to the editor.  So now when the preference is changed, the
	opened source editor widgets will all be changed to the new scheme (as will
	any newly-opened files)

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add a preference for sourceview color theme
	* src/persp/dbgperspective/glade/preferencesdialog.glade:
	* src/persp/dbgperspective/nmv-conf-keys.h:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	* src/persp/dbgperspective/nmv-preferences-dialog.cc:
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas: add a
	preference to the preferences dialog to select a different style scheme for
	the source editor widget.  This is not hooked up to actually change the
	style in the application yet, but the preference exists.

2008-12-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix libtool wrapper detection for files with dashes (Bug #554405)
	* src/common/nmv-proc-utils.cc: change is_libtool_executable_wrapper a bit
	so that it doesn't interpret dashes in the filename as the dash between the
	filename and the libtool boilerplate.  This allows us to detect filenames
	with dashes as libtool wrapper scripts (Bug #554405)
	* tests/Makefile.am: dist the new test libtool wrapper
	* tests/test-libtool-wrapper-detection.cc: add a test for a libtool wrapper
	with a dash in the filename
	* tests/libtool-wrapper-with-dashes: Added example libtool wrapper witha
	dash in the filename that we can use in our unit test

2008-12-18  Leonardo Ferreira Fontenelle <leonardof@gnome.org>

	Improvements to the Brazilian Portuguese translation.
	* pt_BR.po: Improvements to the Brazilian Portuguese translation.

2008-12-18  Leonardo Ferreira Fontenelle <leonardof@gnome.org>

	Added pt_BR. Added Brazilian Portuguese translation by Richardo Ichizo,
	* LINGUAS: Added pt_BR.
	* pt_BR.po: Added Brazilian Portuguese translation by Richardo Ichizo,
	Enrico Nicoletto and Leonardo Ferreira Fontentelle. Thanks to Bruno
	Boaventura for some clarifications.

2008-12-16  Jonathon Jongsma <jjongsma@src.gnome.org>

	Change the 'restart' icon (Bug #526151)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: change the 'restart' icon
	from Stock::GOTO_FIRST to Stock::REFRESH (Bug #526151)

2008-12-11  Dodji Seketeli <dodji@src.gnome.org>

	Fix 564113 - GDB/MI parsing error
	* src/dbgengine/nmv-gdbmi-parser.cc (GDBMIParser::parse_result_record):
	Don't forget lines can end up abruptly.
	* tests/test-gdbmi.cc: Added a new regression test for this bug.
	This should close #564113.

2008-11-30  Dodji Seketeli <dodji@src.gnome.org>

	Fix 560662 - Support singular RESULT parsing.

2008-11-30  Dodji Seketeli <dodji@src.gnome.org>

	Refactor the parser and create GDBMParser as to fix #560662.
	* src/dbgengine/nmv-gdbmi-parser.cc,h (parse_attribute):
	make sure attributes like foo = ["bar", "baz"] can now be parsed.
	This is the most generic form of attribute (or GDB/MI Result) that
	we can have.
	Added a bunch of function to serialize MI datatypes.
	(parse_gdbmi_list): allow the presence of space after ',' in MI LISTs.
	(gdbmi_tuple_to_string): New entry point.
	(gdbmi_result_to_string): Likewise.
	(gdbmi_list_to_string): Likewise.
	(gdbmi_value_to_string): Likewise.
	(operator<<): Use the new serialisation entry points.
	* tests/test-gdbmi.cc (test_attr0):  Added a new test.
	(test_gdbmi_result): New test.
	Start GDBMIParser as a refactoring of the old parser
	First version of the GDBMIParser type.
	Debugged GDBMIParser and make GDBEngine switch to it.

2008-11-29  Luca Bruno <lucab@debian.org>

	Explicit DESTDIR variable

2008-11-29  Luca Bruno <lucab@debian.org>

	Use $(QUILT_STAMPFN) target instead of patch to avoid double configuration

2008-11-29  Luca Bruno <lucab@debian.org>

	New nemiver version 0.6.4

2008-11-26  Jonathon Jongsma <jjongsma@src.gnome.org>

	Enlarge the default size of the variable inspector dialog

2008-11-24  Dodji Seketeli <dodji@src.gnome.org>

	0.6.4 Released.

2008-11-23  Dodji Seketeli <dodji@src.gnome.org>

	Updated News

2008-11-23  Dodji Seketeli <dodji@src.gnome.org>

	Fix #562024 - cannot set breakpoint sometimes.

2008-11-22  Dodji Seketeli <dodji@src.gnome.org>

	Update NEWS and configure for 0.6.4

2008-11-22  Dodji Seketeli <dodji@src.gnome.org>

	Fix 561287 - crash when doing nemiver --purgesessions.
	* src/main.cc (process_command_line_non_gui): Rename this function into ...
	(process_non_gui_command_line): This one.
	(process_command_line): Rename this function into ...
	(process_gui_command_line): This one. Also, move the handling
	of the session purging from process_non_gui_command_line
	to here as this requires the workbench, debugging perspective
	and so the GUI. Yes that sucks. The session handling
	code should be moved outside of the perspective, but that's another
	story. For now, all we know is that we need the workbench to be
	created, if we want to be able to purge the sessions.
	session purging. This entry should fix the crash reported at
	#561287.

2008-11-18  Jonathon Jongsma <jjongsma@src.gnome.org>

	Rearrange the Callstack columns to put the function name first

2008-11-18  Jonathon Jongsma <jjongsma@src.gnome.org>

	Handle libtool wrappers properly and when loading core files
	* src/common/nmv-proc-utils.cc:
	* src/common/nmv-proc-utils.h: don't attempt to parse and return the real
	path of the executable, just examine the file and see if it looks like a
	libtool wrapper script
	* src/dbgengine/nmv-gdb-engine.cc: handle libtool wrapper scripts properly
	by executing gdb under `libtool --mode=execute` which will set the library
	path, etc for us as well instead of just executing gdb on the translated
	binary filename.  Also handle libtool wrappers when loading core files (bug
	#554405)
	* tests/test-libtool-wrapper-detection.cc: update test to match changed API

2008-11-13  Dodji Seketeli <dodji@src.gnome.org>

	560377 - support new running async output record

2008-11-02  Dodji Seketeli <dodji@src.gnome.org>

	Fix #555733
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_debugger_breakpoint_deleted_signal): If we
	received this signal as part of process of executing a program,
	do not bother.
	This entry should fix bug #555733.

2008-11-02  Dodji Seketeli <dodji@src.gnome.org>

	Fix a buglet where LOG() stopped working.
	* src/common/nmv-log-stream.cc: Store the allowed domain names in
	instances of std::string instead of char*. This should help fix
	a buglet where LOG() did stop working.

2008-11-02  Dodji Seketeli <dodji@src.gnome.org>

	Fix #555732
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Make the terminal use the same font as the one specified on the
	preferences.
	* src/uicommon/nmv-terminal.cc b/src/uicommon/nmv-terminal.cc,h: Allow
	the terminal to be set a new font.
	This entry is a patch from Christophe Fergeau <teuf@gnome.org>.
	It should close bug #555732.

2008-11-02  Dodji Seketeli <dodji@src.gnome.org>

	Fixlets in the announcement text.

2008-10-19  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation

2008-10-14  Luca Bruno <lucab@src.gnome.org>

	Sync'ed with latest debian package

2008-10-13  Luca Bruno <lucab@debian.org>

	New version 0.6.3-1

2008-10-05  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.
	* ja.po: Updated Japanese translation.

2008-09-28  Dodji Seketeli <dodji@src.gnome.org>

	Fix nemiver.xml for well formedness.
	* help/C/nemiver.xml: Don't use ':' in PI nodes. It's not well formed
	XML.

2008-09-28  Dodji Seketeli <dodji@src.gnome.org>

	Updated for 0.6.3
	* configure.ac: Updated to 0.6.3
	* NEWS: Updated for 0.6.3

2008-09-27  Dodji Seketeli <dodji@src.gnome.org>

	Added some more traces.
	* src/uicommon/nmv-source-editor.cc:
	(SourceEditor::set_visual_breakpoint_at_line): Add some traces for
	debug purposes.

2008-09-27  Dodji Seketeli <dodji@src.gnome.org>

	Use std::tr1::unordered_map, when available, instead of __gnu stuff.
	* src/common/nmv-log-stream.cc: Use std::tr1::unordered_map when
	available instead of deprecated __gnu features.
	This patch is from "Benoît Dejean" <benoit@placenet.org>.

2008-09-27  Dodji Seketeli <dodji@src.gnome.org>

	Don't include <iostream> in headers.
	* src/common/nmv-tools.h,src/dbgengine/nmv-gdbmi-parser.h,
	src/langs/nmv-cpp-lexer-utils.h,
	src/persp/dbgperspective/nmv-sess-mgr.cc,
	src/uicommon/nmv-source-editor.cc: Don't include <iostream>
	in headers. This can save up to 10% compile time on some machine.
	This patch is from "Benoît Dejean" <benoit@placenet.org>.

2008-09-25  Dodji Seketeli <dodji@src.gnome.org>

	Fix #553780
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::Priv::modify_source_editor_fonts):
	Don't use any PangoFontDescription with an empty font name.
	(DBGPerspective::on_conf_key_changed_signal): Don't set source
	editor font to a font with empty name.
	(DBGPerspective::open_file): Likewise.
	(DBGPerspective::on_default_config_read): Don't set the memory
	font to a font with empty name.
	This entry should fix bug #553780

2008-09-20  Luca Bruno <lucab@debian.org>

	Website moved

2008-09-20  Luca Bruno <lucab@debian.org>

	New version 0.6.2-1

2008-09-16  Theppitak Karoonboonyanan <thep@linux.thai.net>

	Added 'th'. Added Thai translation by Piya Wanishsujit.
	* LINGUAS: Added 'th'.
	* th.po: Added Thai translation by Piya Wanishsujit.

2008-09-15  Gil Forcada Codinachs <gforcada@src.gnome.org>

	Minor fix to Catalan translation by David Planella

2008-09-09  Gil Forcada Codinachs <gforcada@src.gnome.org>

	Updated Catalan translation by David Planella

2008-09-08  Dodji Seketeli <dodji@src.gnome.org>

	Fix some style issues.

2008-09-05  Saleem Abdulrasool <asaleem@src.gnome.org>

	update deprecated api to new api

2008-08-30  Dodji Seketeli <dodji@src.gnome.org>

	Released 0.6.2

2008-08-30  Dodji Seketeli <dodji@src.gnome.org>

	Bumped version number to 0.6.2

2008-08-27  Dodji Seketeli <dodji@src.gnome.org>

	Updated NEWS file.

2008-08-27  Ilkka Tuohela <ituohela@src.gnome.org>

	Updated Finnish translation

2008-08-26  Dodji Seketeli <dodji@src.gnome.org>

	Updated NEWS file.

2008-08-25  Robert-André Mauchin <bobmauchin@src.gnome.org>

	Fix website address.

2008-08-25  Robert-André Mauchin <bobmauchin@src.gnome.org>

	Updated French translation

2008-08-24  Dodji Seketeli <dodji@src.gnome.org>

	Updated NEWS file.

2008-08-24  Dodji Seketeli <dodji@src.gnome.org>

	Style fixes

2008-08-23  Luca Bruno <lucab@debian.org>

	Removed unused cruft

2008-08-21  Dodji Seketeli <dodji@src.gnome.org>

	Fix #548121 - string search not available when program is not running
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_debugger_not_started_signal()):
	Don't disable the actions that are supposed to act on opened files.
	(DBGPerspective::on_attached_to_target_signal): Likewise.
	This should close
	#548121 - string search not available when program is not running

2008-08-21  Dodji Seketeli <dodji@src.gnome.org>

	Fix #548118 - select new node on dereferencing
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	(LocalVarsInspector::Priv::append_a_derefed_variable):
	Select the de-referenced row.
	Should close #548118 - select new node on dereferencing.

2008-08-21  Dodji Seketeli <dodji@src.gnome.org>

	Close #547169 -  Set breakpoint to selected function name by default.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::set_breakpoint_using_dialog): If a function
	name is selected when the user hits <ctrl-b> to set a breakpoint,
	make sure the breakpoint is set to that function name by default.
	This should close:
	#547169 -  Set breakpoint to selected function name by default.

2008-08-21  Dodji Seketeli <dodji@src.gnome.org>

	Close #545842 - Missing shortcut to set a breakpoint in current file.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc:
	(SetBreakpointDialog::Priv::update_ok_button_sensitivity):
	In MODE_SOURCE_LOCATION mode, allow the OK button to be
	sensitive even when the user only typed in the line number.
	It should not be mandatory to type in the file name.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::set_breakpoint_from_dialog):
	If the user only typed the line number of the breakpoint to set,
	assume she wants to set the breakpoint in the current file.
	This should close:
	#545842 - Missing shortcut to set a breakpoint in current file.

2008-08-21  Dodji Seketeli <dodji@src.gnome.org>

	Fix #523377 - first-run prints sql-related errors to console
	* src/common/nmv-conf-manager.cc,h:
	(ConfManager::user_config_dir_exists()): New entry point.
	(ConfManager::get_user_config_dir_path()): Likewise.
	* src/persp/dbgperspective/nmv-sess-mgr.cc:
	(struct SessMgr::Priv::get_db_file_path()): New entry point.
	(struct SessMgr::Priv::db_file_path_exists): Likewise.
	(struct SessMgr::Priv::create_db ): Do access the connection only
	using its accessor. It guarantees that the connection is
	instantiated when we need it.
	(struct SessMgr::Priv::drop_db): Likewise.
	(struct SessMgr::Priv::init_db): Don't try to drop the database
	tables if it is obvious that no database exists yet. Create
	the databases tables straight away instead.

2008-08-13  Jonathon Jongsma <jjongsma@src.gnome.org>

	fix the boost unit test static library detection

2008-08-10  Dodji Seketeli <dodji@src.gnome.org>

	Fix a configure help string typo.

2008-08-08  Luca Bruno <lucab@debian.org>

	Updated Andrea's mail address

2008-08-03  Luca Bruno <lucab@debian.org>

	Standards-Version 3.8.0 in place

2008-08-03  Luca Bruno <lucab@debian.org>

	New upstream version 0.6.1

2008-07-31  Dodji Seketeli <dodji@src.gnome.org>

	update NEWS for 0.6.1

2008-07-31  Dodji Seketeli <dodji@src.gnome.org>

	Fix var walker test

2008-07-31  Dodji Seketeli <dodji@src.gnome.org>

	Oops, forgot to add nmv-conf-keys.h to the distribution

2008-07-31  Djihed Afifi <djihed@src.gnome.org>

	Updated Arabic Translation by Djihed Afifi.

2008-07-30  Dodji Seketeli <dodji@src.gnome.org>

	build fix

2008-07-30  Dodji Seketeli <dodji@src.gnome.org>

	prepare for 0.6.0 release

2008-07-29  Dodji Seketeli <dodji@src.gnome.org>

	Fix as much coding style issues as possible.
	* src/uicommon/*, src/persp/dbgperspective/*:
	Did a big review of style issue in the UI related code.
	Now this part of the code base should comply more with
	the coding style of the project.
	I hate doing this.

2008-07-29  Dodji Seketeli <dodji@src.gnome.org>

	Fix #545211 - Bad index management when closing a tab
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Properly rebuild Notebook pages access maps when a page is removed.
	This should fix #545211.

2008-07-27  Dodji Seketeli <dodji@src.gnome.org>

	Add better detection of boost static test libs on 64 bits systems.

2008-07-27  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add prefs for controlling behavior of reloading changed source files

2008-07-26  Dodji Seketeli <dodji@src.gnome.org>

	Second attempt at fixing #543797
	* src/common/nmv-env.cc,h:
	(build_path_to_executable): new helper to build an absolute path
	to an executable by searching in the $PATH env variable.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::execute_program): don't forget to lookup
	executables - that have relative paths - in directories pointed
	to by the $PATH environment variable.

2008-07-26  Dodji Seketeli <dodji@src.gnome.org>

	Support no "auto-reload" source files.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Allow the user to disallow source file auto-reloading for when
	she chooses not to be asked about re-loading source files.

2008-07-26  Dodji Seketeli <dodji@src.gnome.org>

	Fix #543797 - display a meaningful error when inferior is not found

2008-07-26  Dodji Seketeli <dodji@src.gnome.org>

	Fix #543798 - don't pop up 'reload file' dialog all the time

2008-07-26  Dodji Seketeli <dodji@src.gnome.org>

	[ui-utils] Allow a "do not ask me again" check button in some dialogs
	* src/uicommon/nmv-ui-utils.cc,h: add a new entry point to display
	"Yes/No/" question dialogs that have a "Do not ask me again" check
	button. For now, only "Yes/No" dialogs have that feature because I
	have not felt the need for other dialogs. The feature can easily be
	added to the other dialogs as well.

2008-07-20  Dodji Seketeli <dodji@src.gnome.org>

	support running autogen.sh from dir != $topsrcdir

2008-07-16  Luca Bruno <lucab@src.gnome.org>

	fix docbook XML validation and make check barfing (closes: #540934)

2008-07-16  Luca Bruno <lucab@src.gnome.org>

	Sync'ed with current debian/ubuntu package

2008-07-13  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation

2008-07-09  Kjartan Maraas <kmaraas@gnome.org>

	Add nb Fix missing files. Add Norwegian bokmål translation
	* LINGUAS: Add nb
	* POTFILES.in: Fix missing files.
	* nb.po: Add Norwegian bokmål translation

2008-07-08  Dodji Seketeli <dodji@src.gnome.org>

	properly close 524168 - make LocalVarInspector2 the default variable inspector

2008-07-08  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix up the 'Call Function' dialog and make it a little bit cleaner and more HIG-compliant

2008-07-06  Dodji Seketeli <dodji@src.gnome.org>

	add support for arbitraty function calls

2008-07-05  Dodji Seketeli <dodji@src.gnome.org>

	fix #396277 - implement lazy evaluation of status widgets
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	Make this widget behave with lazyness. That is, when the debugger
	stops, the widget does not query the debugger engine for data if
	it's hidden. When the widget becomes visible though, it updates
	itself if necessary.
	* src/persp/dbgperspective/nmv-call-stack.cc: Likewise.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc: Likewise.
	* src/persp/dbgperspective/nmv-memory-view.cc: Likewise.
	* src/persp/dbgperspective/nmv-registers-view.cc: Likewise.
	* src/persp/dbgperspective/nmv-thread-list.cc: Likewise.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::init_perspective_menu_entries): make the terminal
	widget be the one visible by default, so that the other ones can be
	hidden by default and thus not query the debugger engine.

2008-06-29  Dodji Seketeli <dodji@src.gnome.org>

	fix some data inconsistencies in the location variables inspector

2008-06-29  Dodji Seketeli <dodji@src.gnome.org>

	Add the --version command line switch

2008-06-28  Dodji Seketeli <dodji@src.gnome.org>

	fix #540653 - add a shorcut to set a conditional breakpoint

2008-06-28  Dodji Seketeli <dodji@src.gnome.org>

	properly fallback to hardcoded file encoding lists when necessary
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::Priv::ensure_buffer_is_in_utf8): make sure to try
	hardcoded file encodings when the encodings listed in gconf are not
	enough.

2008-06-28  Dodji Seketeli <dodji@src.gnome.org>

	[dbg perspective] code cleanup
	* src/persp/dbgperspective/*.cc,h: renamed foo2.cc into foo.cc
	and foo2.h into foo.h.

2008-06-28  Dodji Seketeli <dodji@src.gnome.org>

	swtich to variable walker for real
	* src/persp/dbgperspective/Makefile.am: Remove
	nmv-var-inspector.[h|cc], nmv-var-inspector.[cc|h],
	nmv-variables-utils.[cc|h] because their 'variable-walker'
	enabled counterpart are now solid enough to take over.
	* src/persp/dbgperspective/*.cc,h: Ditto.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc,
	src/persp/dbgperspective/nmv-global-vars-inspector-dialog.cc,
	src/persp/dbgperspective/nmv-local-vars-inspector2.cc,
	src/persp/dbgperspective/nmv-var-inspector-dialog.cc,
	src/persp/dbgperspective/nmv-var-inspector2.cc,
	src/persp/dbgperspective/nmv-variables-utils2.cc: switch
	unconditionnaly to variable walker.
	* configure.ac: Don't propse the --enable-variable-walker anymore.

2008-06-27  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translaiton

2008-06-24  Luca Bruno <lucab@debian.org>

	* New upstream version 0.5.4

2008-06-22  Dodji Seketeli <dodji@src.gnome.org>

	fix #515525 – Arrow keys don't work to navigate through source file

2008-06-22  Dodji Seketeli <dodji@src.gnome.org>

	add support for conditional breakpoints

2008-06-22  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.
	* ja.po: Updated Japanese translation.

2008-06-21  Dodji Seketeli <dodji@src.gnome.org>

	bump trunk version to 0.5.5

2008-06-21  Dodji Seketeli <dodji@src.gnome.org>

	released 0.5.4

2008-06-21  Dodji Seketeli <dodji@src.gnome.org>

	add the RELEASED_BRANCH parameter to "make release"

2008-06-21  Dodji Seketeli <dodji@src.gnome.org>

	fix #534990 – libnemivercommon.so* should be in global LIBDIR

2008-06-20  Dodji Seketeli <dodji@src.gnome.org>

	fix #539314 – Use g_getenv instead of getenv

2008-06-20  Dodji Seketeli <dodji@src.gnome.org>

	fix #539311 – rhythmbox can't load its python plugins when run with nemiver

2008-06-19  Dodji Seketeli <dodji@src.gnome.org>

	fix bug #499873 – Variable 'this' not found
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(Priv::re_init_tree_view()): don't forget to clean the
	variable walkers as well as the widget. Otherwise, the content of
	the walker won't reflect the content of the widget.
	(Priv::on_func_arg_visited_signal()): when stepping in the same
	function, while walking a function arguments variable, check if the
	function args subtree (in the widget) is empty. If the subtree is
	empty, append the variable the function arguments subtree.
	Otherwise, if you try to 'update' an empty subtree, you will get an
	error message saying "could not find variable in inspector: foo".
	The root reason why the subtree is empty in the first place, is that
	it must be populated by a call to debugger->list_frames_arguments().
	Problem is that for some unknown reason, that call fails often, due
	do GDB suckage.
	This should fix bug #499873 – Variable 'this' not found.

2008-06-19  Dodji Seketeli <dodji@src.gnome.org>

	fix #539109 – can't stop running inferior

2008-06-16  Jonathon Jongsma <jjongsma@src.gnome.org>

	add a test which loops infinitely (e.g. a simple gtkmm program) to make it
	* tests/Makefile.am:
	* tests/gtkmm-test.cc: add a test which loops infinitely (e.g. a simple
	gtkmm program) to make it easier to test state behaviors while the program
	is running in an infinite loop

2008-06-15  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation

2008-06-15  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2008-06-08  Dodji Seketeli <dodji@src.gnome.org>

	fix #537281
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	When opening a file, it has to be converted to the UTF-8 encoding.
	This has been so for ages. What I just added is a way to specify the
	possible encodings of the file we want to open. We need to know the
	list of possible encodings of the files we need to open so that
	Nemiver can know how to convert the encoding to UTF8. I have then
	added a gconf key that lists the possible encodings. Whenever a file
	cannot be opened because we don't know its encoding, the file
	encoding just has to be added to the value of the gconf key.
	This entry should fix bug #537281.

2008-06-08  Dodji Seketeli <dodji@src.gnome.org>

	[dbg perspective] replace global strings by char*
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: replace static
	storage class strings with char*. Using strings for static storage
	class variables is useless and just slows down DSO loading time.

2008-06-08  Dodji Seketeli <dodji@src.gnome.org>

	[gconfmgr] support values of type 'list'

2008-06-08  Dodji Seketeli <dodji@src.gnome.org>

	[gconfmgr] remove spaces before ';' at end of lines

2008-06-08  Kjartan Maraas <kmaraas@src.gnome.org>

	Remove executable bit

2008-06-01  Dodji Seketeli <dodji@src.gnome.org>

	Merge commit 'origin/master'

2008-06-01  Dodji Seketeli <dodji@src.gnome.org>

	init type system at init time

2008-06-01  Dodji Seketeli <dodji@src.gnome.org>

	support NEMIVER_ALLOW_WARNINGS env var.

2008-05-31  Dodji Seketeli <dodji@src.gnome.org>

	[cpp parser] fix a gcc 4.3 warning

2008-05-31  Dodji Seketeli <dodji@src.gnome.org>

	allow deprecated hash_map type usage

2008-05-31  Dodji Seketeli <dodji@src.gnome.org>

	Resolve merge conflict

2008-05-31  Dodji Seketeli <dodji@src.gnome.org>

	close #535359 - goto location on frame activation
	* src/persp/dbgperspective/nmv-call-stack.cc: send another
	select-frame command if the currently-selected frame is activated in
	addition to sending the command when the selection is changed.
	This should close bug #535359.

2008-05-26  Luca Bruno <lucab@debian.org>

	* New upstream version 0.5.3

2008-05-26  Luca Bruno <lucab@debian.org>

	* .desktop patch removed, accepted upstream

2008-05-25  Dodji Seketeli <dodji@src.gnome.org>

	update for 0.5.3 released on the 0.5 branch

2008-05-25  Dodji Seketeli <dodji@src.gnome.org>

	first tentative to fix 534695

2008-05-24  Dodji Seketeli <dodji@src.gnome.org>

	fix 534619: properly detach from target
	* src/dbgengine/nmv-gdb-engine.cc:
	(in the OnCommandDoneHandler): don't set the engine state to
	IDebugger::READY when the command that has been DONE is
	"detach-from-target". This should fix #534619

2008-05-18  Dodji Seketeli <dodji@src.gnome.org>

	[stop reason] use StopReason enum, not strings.
	* src/dbgengine/nmv-dbg-common.h,
	src/dbgengine/nmv-gdb-engine.[cc,h],
	src/dbgengine/nmv-gdbmi-parser.cc,
	src/dbgengine/nmv-i-debugger.h,
	src/persp/dbgperspective/nmv-call-stack.cc,
	src/persp/dbgperspective/nmv-dbg-perspective.cc,
	src/persp/dbgperspective/nmv-local-vars-inspector.cc,:
	Replace stop reasons string use by the enum StopReason use.
	Move StopReason from the OutOfBandRecord type to the IDebugger
	interface type. That way, it can be used from within clients of
	IDebugger. Change the code of the client code accordingly.

2008-05-17  Dodji Seketeli <dodji@src.gnome.org>

	Merge branch 'add-as-needed-link'

2008-05-17  Dodji Seketeli <dodji@src.gnome.org>

	[workbench] don't use libgnome anymore

2008-05-06  Dodji Seketeli <dodji@src.gnome.org>

	[terminal] second try at porting this to FreeBSD
	* src/uicommon/nmv-terminal.cc: _GNU_SOURCE is defined on freebsd
	as well, so use don't use it to discriminate that platform.
	This should hopefully close #529718

2008-05-05  Dodji Seketeli <dodji@src.gnome.org>

	[terminal widget] handle pty.h on FreeBSD.

2008-05-05  Dodji Seketeli <dodji@src.gnome.org>

	[ustring] define strnlen() on FreeBSD.

2008-05-05  Dodji Seketeli <dodji@src.gnome.org>

	[proc utils] handle some specific FreeBSD symbols/headers

2008-05-05  Dodji Seketeli <dodji@src.gnome.org>

	[logging] make sure __ASSERT_FUNCTION is defined

2008-05-04  Dodji Seketeli <dodji@src.gnome.org>

	[desktop file] remove obsolete fields

2008-05-04  Dodji Seketeli <dodji@src.gnome.org>

	[gdbmi parser] allow reading empty lists

2008-04-18  Luca Bruno <lucab@debian.org>

	* New upstream release 0.5.2, using libgtksourceviewmm 2.0 - http://bugs.debian.org/474344

2008-04-12  Dodji Seketeli <dodji@src.gnome.org>

	fix #527696 – nemiver --help only shows libgnome related help messages
	* src/main.cc: reorganised the command line options parsing.
	Added init_option_context() to - guess what - initialize the option
	context and add the nemiver and gtk+ groups to it, so that both gtk+
	and nemiver options can be available. That way, both nemiver and gtk+
	help messages can be displayed.
	Make sure parse_command_line() does initialize the option context
	by calling the brand new init_option_context(), before actually
	trying to parse the command line.
	This should fix
	#527696 – nemiver --help only shows libgnome related help messages

2008-04-11  Dodji Seketeli <dodji@src.gnome.org>

	[libnemivercommon] fix bug #526826 – missing dependency in .pc file
	* configure.ac: make sure to AC_SUBST the deps versions number
	variables so that we can use them in foo.in files like *.pc.in files.
	* src/common/libnemivercommon.pc.in: make sure to add ligtop to the
	list of deps in the generated libnemivercommon.pc file.
	This should fix bug #526826 – missing dependency in .pc file

2008-04-11  Dodji Seketeli <dodji@src.gnome.org>

	[gdbmi parser] fix #526866 – breakpoint parsing failures
	* src/dbgengine/nmv-gdbmi-parser.cc: fix a parsing bug that happens
	when setting a pending breakpoint on a fully qualified function.
	* tests/test-gdbmi.cc: add a regression test for this bugfix.
	This entry should fix bug #526866

2008-04-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Change sensitivity of Memory editor when debugger is running
	* src/persp/dbgperspective/nmv-memory-view.cc: properly set memory editor
	widget to insensitive when the debugger is running.  Otherwise the user
	could change the memory values and it would attempt to send those values to
	gdb when it wasn't ready for them.

2008-04-08  Dodji Seketeli <dodji@src.gnome.org>

	fix #526696 - Detach from the running program" not properly

2008-04-08  Dodji Seketeli <dodji@src.gnome.org>

	updated README

2008-04-06  Dodji Seketeli <dodji@src.gnome.org>

	update release announce text.

2008-04-06  Dodji Seketeli <dodji@src.gnome.org>

	update NEWS

2008-04-06  Dodji Seketeli <dodji@gnome.org>

	make nemiver support pending breakpoints on function names
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(parse_breakpoint): fix PENDING breakpoint parsing. This was leading
	to a crash in cases where the breakpoint was being set using
	"break function-name". It was okay for "break file-name:line-num"
	though.
	* tests/test-gdbmi.cc: add regression testing for this bugfix.
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::load_program): make sure to "set breakpoint pending on"
	and not "set breakpoint pending auto", otherwise, pending breakpoint
	will not be supported in nemiver.
	(GDBEngine::set_breakpoint): when setting breakpoint on a function
	name that is a not-yet-loaded library, give gdb a chance to set the
	breakpoint 'pending'. For that, do not use the the MI syntax to set
	the breakpoint because MI does not support pending breakpoints.
	As the syntax is not MI, gdb won't return an MI notification about the
	breakpoint being set. That is why we need to query gdb for the list of
	breakpoints right after setting it this breakpoint.

2008-04-06  Dodji Seketeli <dodji@src.gnome.org>

	0.5.2 release point

2008-04-06  Dodji Seketeli <dodji@src.gnome.org>

	bump version number to 0.5.2
	* NEWS, configure.ac: bump version number to 0.5.2

2008-04-06  Dodji Seketeli <dodji@src.gnome.org>

	Fix "526291 – Nemiver doesn't propose to stop the debugging application" 	* src/persp/dbgperspective/nmv-dbg-perspective.cc: 	  (DBGPerspective::on_program_finished_signal): update the title of the 	  workbench window when the inferior dies. This should fix bug 	  "526291 – Nemiver doesn't propose to stop the debugging application"

2008-04-06  Dodji Seketeli <dodji@src.gnome.org>

	fix an infinite loop when receiving a GDB/MI record starting by '='.
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(parse_out_of_band_record): recognise lines starting with '='
	- i.e =thread-created,id=1\n - in gdbmi output records, parse them
	and ignore them. Otherwise, the output record parsing code goes into
	and infinite loop, leading to nemiver taking 100% CPU for ever.
	I don't understand why this is happening now, with a gdb version
	6.8.50 from CVS.
	* tests/test-gdbmi.cc: update this test to catch a regression on this
	fix.

2008-04-06  Dodji Seketeli <dodji@src.gnome.org>

	disable two broken non regression tests for now
	* tests/Makefile.am: don't run runtestoverloads automatically because
	gdb has broken it. Also, don't run runtestglobalvariables because
	the functionality is not mature yet. When the version of libstdc++
	changes the result of the test changes.

2008-03-29  Luca Bruno <lucab@debian.org>

	* New upstream version 0.5.1

2008-03-24  Dodji Seketeli <dodji@src.gnome.org>

	Fix a gdb output buffer management bug
	* src/dbgengine/nmv-gdb-engine.cc: fix an annoying packet buffer
	management buffer that lead to some random errors when
	GDBEngine receives large gdb output in chunk.

2008-03-24  Dodji Seketeli <dodji@src.gnome.org>

	pull 0.5.1 commit updates from 0.5 branch

2008-03-23  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.
	* ja.po: Updated Japanese translation.

2008-03-17  Dodji Seketeli <dodji@src.gnome.org>

	fixed #476472 – Nemiver fails on libtool wrappers
	* src/common/nmv-proc-utils.cc,h:
	added  is_libtool_executable_wrapper () entry point to detect whever
	if a file is a litbool wrapper to an executable. If so, it returns
	the path to the actual executable that is wrapped.
	* tests/test-libtool-wrapper-detection.cc: added a regression test.
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::load_program): check if the program to load is a litbool
	wrapper. If yes, load the actuall binary instead.

2008-03-17  Luca Bruno <lucab@debian.org>

	* New upstream version 0.5.0

2008-03-17  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix repeated function argument name

2008-03-17  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix build for gcc 4.3 (missing includes)

2008-03-16  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish tranlation by Alberto Caso

2008-03-16  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation by Alberto Caso

2008-03-16  Dodji Seketeli <dodji@src.gnome.org>

	add SartupNotify to desktop file.

2008-03-15  Dodji Seketeli <dodji@src.gnome.org>

	bumped version number to 0.5.1

2008-03-15  Dodji Seketeli <dodji@src.gnome.org>

	updated NEWS file

2008-03-15  Dodji Seketeli <dodji@src.gnome.org>

	updated NEWS file

2008-03-15  Dodji Seketeli <dodji@src.gnome.org>

	Bump the version of the gtkmm dep

2008-03-11  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation

2008-03-11  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation by Alberto Caso

2008-03-08  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2008-03-06  Luca Bruno <lucab@debian.org>

	* Bumped versioned build-dep on debhelper due to dh_icons

2008-03-06  Luca Bruno <lucab@debian.org>

	* Remove spurious scroolkeeper database - http://bugs.debian.org/469431

2008-02-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	add a 'last run time' attribute to the session database so that we can use
	* src/main.cc:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add a 'last run time'
	attribute to the session database so that we can use this value to resume
	the last debugging session when we pass the '--last' commandline option
	(previously --last was resuming the last /created/ session instead of teh
	last /run/ session).  This should fix bug #464201.

2008-02-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix a bug where a popup tooltip stayed on top of other windows.

2008-02-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Update debian packaging

2008-02-19  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2008-02-19  Ilkka Tuohela <ituohela@src.gnome.org>

	Updated Finnish translation

2008-02-14  Gil Forcada Codinachs <gforcada@src.gnome.org>

	Updated Catalan translation by David Planella

2008-02-12  Claude Paroz <claude@2xlibre.net>

	Updated French translation by Robert-André Mauchin.
	* fr.po: Updated French translation by Robert-André Mauchin.

2008-02-11  Jonathon Jongsma <jjongsma@src.gnome.org>

	update for gtksourceviewmm2 API changes (create_mark() ->
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	* src/uicommon/nmv-source-editor.cc: update for gtksourceviewmm2 API changes
	(create_mark() -> create_source_mark())

2008-02-11  Jonathon Jongsma <jjongsma@src.gnome.org>

	Disable setting breakpoints when debugger is not running (Bug #515287).
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: disable setting a
	breakpoint by clicking in the source view margin if the debugger is not
	running (e.g. if a user just opened a source file directly and clicked in
	teh margin).  Also disable querying variable value tooltips when the
	debugger is not running (Bug #515287).

2008-02-11  Jonathon Jongsma <jjongsma@src.gnome.org>

	[UI updates] add spacing between label and text entry
	* src/persp/dbgperspective/glade/proclistdialog.glade: add some spacing
	between the label and the text entry box

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	More minor manual updates

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Disable 'Global Variables' menu item when not debugging anything
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Move the 'Show Global
	Variables' action into the 'Debugger ready' action group so that it is
	disabled when there is no program being debugged (Bug #515541)

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	define const strings for the status notebook tab titles so that we can use
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: define const strings for
	the status notebook tab titles so that we can use the same variable in the
	tab name and in the View menu (so the View menu and the tab title don't get
	out of sync like they did below when 'Call Stack' was just 'Stack').

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	initialize source buffer by placing cursor at the beginning of the buffer
	* src/uicommon/nmv-source-editor.cc: initialize source buffer by placing
	cursor at the beginning of the buffer (see bug #515271).  Also add one to
	the column value so that it's 1-based not 0-based

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Clean up the source editor status bar
	* src/uicommon/nmv-source-editor.cc: Remove the total number of lines from
	the source editor status bar (bug #515454).  Also fixed a bug where the
	column was never being updated so it always said 0.  Also added a little bit
	of padding around the source editor status bar and protected a signal
	handler with try / catch.

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Update manual for 0.5.0 release

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	don't allow this to be resizeable since it would just add a bunch of
	* src/persp/dbgperspective/glade/loadcoredialog.glade: don't allow this to
	be resizeable since it would just add a bunch of useless blank space if it
	was resized.

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	rename 'View->Stack' to 'View->Call Stack' to match the tab name in the
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: rename 'View->Stack' to
	'View->Call Stack' to match the tab name in the status notebook.  Fixes bug
	#515476

2008-02-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	lots of little UI cleanups: capitalization, re-organized some menus, etc.
	* src/persp/dbgperspective/glade/remotetargetdialog.glade:
	* src/persp/dbgperspective/menus/menus.xml:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: lots of little UI
	cleanups: capitalization, re-organized some menus, etc.

2008-02-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	re-order the 'File' menu items slightly so that they're grouped a little
	* src/persp/dbgperspective/menus/menus.xml: re-order the 'File' menu items
	slightly so that they're grouped a little better

2008-02-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Rename --executesession to --session

2008-02-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Remove obsolete icons
	* src/persp/dbgperspective/icons/Makefile.am:
	* src/persp/dbgperspective/icons/continue.xpm:
	* src/persp/dbgperspective/icons/green.png:
	* src/persp/dbgperspective/icons/run-debugger.xpm:
	* src/persp/dbgperspective/icons/stop-debugger.xpm:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: remove obsolete icons

2008-02-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Change the 'Restart' and 'Continue' icons to GTK stock icons
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Change the icons for the
	'Restart' and 'Continue' actions to use stock GTK icons so that they fit the
	tango style better

2008-02-09  Dodji Seketeli <dodji@src.gnome.org>

	updated NEWS file for 0.5.0

2008-02-09  Dodji Seketeli <dodji@src.gnome.org>

	update NEWS file for upcoming 0.5.0

2008-02-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix invalid docbook markup (bug #499263). Patch from Baptiste Mille-Mathias.

2008-02-09  Dodji Seketeli <dodji@src.gnome.org>

	bump version number to 0.5.0

2008-02-09  Dodji Seketeli <dodji@src.gnome.org>

	[POTFILES.in] added a bunch of files for translations

2008-02-08  Claude Paroz <claude@2xlibre.net>

	Updated French translation by Robert-André Mauchin.
	* fr.po: Updated French translation by Robert-André Mauchin.

2008-02-07  Dodji Seketeli <dodji@src.gnome.org>

	fix #514134 – gdbmi member variable parsing error

2008-02-04  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2008-02-03  Dodji Seketeli <dodji@src.gnome.org>

	[gdbmi parser] early support of the <repeat N times> construct in member variables

2008-02-03  Dodji Seketeli <dodji@src.gnome.org>

	fix bug #508417 – crash on listing global variables

2008-02-03  Dodji Seketeli <dodji@src.gnome.org>

	fix #436374 – Error output when debugging gtkmm example.

2008-02-03  Dodji Seketeli <dodji@src.gnome.org>

	[gdbmi-parser] make memory/register handling comply with project coding style

2008-02-03  Dodji Seketeli <dodji@src.gnome.org>

	[hex-editor] cleanup/better coding style compliance

2008-02-02  Dodji Seketeli <dodji@src.gnome.org>

	cleanup main.cc
	* src/main.cc: changed this for better legibility.
	This is a patch sent by Emre Turkay <emreturkay@gmail.com>.
	I edited it a little bit for better compliance with the coding
	style of the project.

2008-02-01  Jonathon Jongsma <jjongsma@src.gnome.org>

	get the mimetype instead of the content type to pass to the source editor
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: get the mimetype instead
	of the content type to pass to the source editor

2008-02-01  Jonathon Jongsma <jjongsma@src.gnome.org>

	Initial port to giomm 	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add alternative giomm 	implementations for file loading, monitoring, and mime-type detection

2008-02-01  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add ability to build with giomm instead of gnome-vfs 	* configure.ac: add --enable-gio argument, which will build with gio as the 	vfs library instead of using gnome-vfs 	* config.h.in: add WITH_GIO preprocessor symbol 	* src/persp/dbgperspective/nmv-dbg-perspective.cc: 	* src/workbench/nmv-workbench.cc: #ifdef out gnome-vfs-specific 	functionality.  No replacement gio functionality is actually implemented 	yet, only the infrastructure is set up

2008-01-31  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix crash in the memory view on startup when the specified font
	* src/uicommon/nmv-hex-editor.cc: Fix crash in the memory view on startup
	when the specified font description doesn't match any actual fonts (e.g. if
	the 'custom-font-name' gconf key is blank).  Fixes Bug #512845

2008-01-25  Gil Forcada Codinachs <gforcada@src.gnome.org>

	Updated Catalan translation by David Planella

2008-01-25  Dodji Seketeli <dodji@src.gnome.org>

	fix #504473 Variable parsing failure on quoted '}' character

2008-01-23  Jonathon Jongsma <jjongsma@src.gnome.org>

	bump the version to 0.4.1 so that we can distinguish this as a development
	* configure.ac: bump the version to 0.4.1 so that we can distinguish this as a development version different than the 0.4.0 tarball

2008-01-23  Jonathon Jongsma <jjongsma@src.gnome.org>

	add the manpage to EXTRA_DIST instead of DISTCLEANFILES
	* data/Makefile.am: add the manpage to EXTRA_DIST instead of DISTCLEANFILES

2008-01-21  Dodji Seketeli <dodji@src.gnome.org>

	applied fix #501444

2008-01-21  Dodji Seketeli <dodji@src.gnome.org>

	[autogen.sh] properly set the PKG_NAME variable.
	* autogen.sh: properly set the PKG_NAME variable. A courtesy of
	Christophe Fergeau <teuf@gnome.org>

2008-01-21  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Added Spanish translation

2008-01-18  Dodji Seketeli <dodji@src.gnome.org>

	[workbench] candidate fix for breakage under sawfish WM.
	* src/workbench/nmv-workbench.cc:
	Workbench::init_glade(): don't hide the workbench toplevel window
	once glade creates it. Otherwise it confuses some window managers
	that just won't show it anymore. That leads to nemiver showing
	up without decorations with some of these these window manages.
	I have tested this with sawfish.
	* src/main.cc: no need to show_all the root window anymore.
	Glade does it for us actually.
	* glade/workbench.glade: little update of the interface.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[dbg perspective] cosmetic compliance changelets

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[dbg perspective] signal handler code must be try/catch protected

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[global vars inspector dialog] cosmetic compliance changes

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[global vars inspector dialog] don't pass smart pointers by reference.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[global vars inspector dialog] fix a crash when running the dialog twice

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[global vars inspector dialog]: cosmetic compliance changelet

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[local vars inspector2]: make sure signal handlers disconnect when destroyed.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[vars treeview] cosmetic compliance changes.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[variables utils] fix variable name caption display

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[IDebugger::Variable] easy bug fix

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[gdb engine] code cleanup

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[localvarinspector2] fix breakage introduced in merging
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	fix breakage I have introduced during merging svn with my latest
	variable derefing changes.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[varstreeview] trivial editing for better compliance
	* src/persp/dbgperspective/nmv-vars-treeview.cc: don't use
	"namespace foo {" but rather NEMIVER_BEGIN_NAMESPACE(foo) otherwise
	the file gets over-indented, especially for people using emacs.
	Also, replace "class Foo {" by "class NEMIVER_API Foo". This is
	very important because it gives us a change to use the gcc
	visibility feature when it gets un-broken.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	use the last version of LocalVarsInspector2
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	propagated the api change of LocalVarsInspector2

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	Added varinspectorpopup.xml
	* src/persp/dbgperspective/menus/Makefile.am:
	added src/persp/dbgperspective/menus/varinspectorpopup.xml

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	cleanup

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	early pointer dereferencing support in LocalVarInspector2
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc,h:
	Added variable dereferencing to the LocalVarsInspector2 widget.
	To use it, the user has to select a variable, right click and hit
	"dereference variable". This puts the resulting dereferenced
	variable in a "dereferenced variables" node in the treeview.
	A bit of cleanup got into this as well.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	[variables-utils] Added find_a_variable()
	* src/persp/dbgperspective/nmv-variables-utils2.cc,h:
	added find_a_variable(), to find a variable under a given
	node. Made update_variable() use it.
	Did a bit of cleanup.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	code cleanup

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	Added IVarListWalker::do_walk_variable()
	* src/dbgengine/nmv-i-var-list-walker.h, nmv-var-list-walker.cc:
	Add IVarListwalker::do_walk_variable() to walk only one choosen
	variable amongst the list of variables that have been set.
	Also did a bit of a code cleanup.

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	better derefing algorithm

2008-01-17  Dodji Seketeli <dodji@src.gnome.org>

	remove spaces before ";"

2008-01-17  Jonathon Jongsma <jjongsma@src.gnome.org>

	install manpage new man page from Luca Bruno <lucab@debian.org>. Fixes bug
	* data/Makefile.am: install manpage
	* data/nemiver.1: new man page from Luca Bruno <lucab@debian.org>.  Fixes
	bug #510191

2008-01-17  Jonathon Jongsma <jjongsma@src.gnome.org>

	add legal.xml to DOC_INCLUDES instead of DOC_ENTITIES so that it gets
	* help/Makefile.am: add legal.xml to DOC_INCLUDES instead of DOC_ENTITIES
	so that it gets installed with translations, etc.  Fixes Bug #509371

2008-01-16  Luca Bruno <lucab@debian.org>

	* Minor fixes for scrollkeeper, gconf and icons

2008-01-15  Jonathon Jongsma <jjongsma@src.gnome.org>

	don't use g_option_context_set_summary unless the glib version is at least
	* src/main.cc: don't use g_option_context_set_summary unless the glib
	version is at least 2.12.  This is just a descriptive string, so it's not
	worth bumping the minimum version in configure.ac just for this

2008-01-14  Luca Bruno <lucab@debian.org>

	* Really symlinking for the package content :)

2008-01-14  Jonathon Jongsma <jjongsma@src.gnome.org>

	removed accidentally duplicated variable
	* configure.ac: removed accidentally duplicated variable
	* src/uicommon/nmv-hex-editor.cc:
	* src/uicommon/nmv-hex-editor.h: make get_widget() return a Gtk::Container&
	so that we can use the Container functions such as set_border_width()
	* src/persp/dbgperspective/nmv-memory-view.cc: set HexEditor widget's
	border_width to 0 so that there is not a thick black border around the whole
	hex editor widget.  There's still a black divider between the hex and the
	ascii portions of the widget, however, and I can't figure out how to get
	that to match the theme background color instead of black...

2008-01-14  Jonathon Jongsma <jjongsma@src.gnome.org>

	Improve configure script so that if --enable-memoryview is not specified
	* configure.ac: Improve configure script so that if --enable-memoryview is
	not specified and gtkhex is not found, it will automatically disable the
	memoryview widget (and vice versa, if it is found, automatically enable it).
	Also automatically detect whether to build against gtksourceviewmm-1.0 or
	gtksourceviewmm-2.0 if --enable-sourceviewmm2 is not explicitly specified.

2008-01-13  Jonathon Jongsma <jjongsma@src.gnome.org>

	add --enable-sourceviewmm2
	* configure.ac: add --enable-sourceviewmm2
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	* src/uicommon/nmv-source-editor.cc: update these to gtksourceviewmm-2.0
	API, with #ifdefs to allow using gtksourceviewmm-1.0 as well

2008-01-13  Jonathon Jongsma <jjongsma@src.gnome.org>

	port to gtksourceviewmm-2.0

2008-01-12  Jonathon Jongsma <jjongsma@src.gnome.org>

	forgot to add this file too. stupid stupid.
	* src/persp/dbgperspective/icons/line-pointer.png: forgot to add this file
	too.  stupid stupid.

2008-01-12  Jonathon Jongsma <jjongsma@src.gnome.org>

	forgot to remove the old xpm icon for the current line marker

2008-01-12  Jonathon Jongsma <jjongsma@src.gnome.org>

	Update line marker and breakpoint marker icons
	* src/persp/dbgperspective/icons/Makefile.am:
	* src/persp/dbgperspective/icons/breakpoint-disabled-marker.png:
	* src/persp/dbgperspective/icons/breakpoint-marker.png:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	* src/uicommon/nmv-source-editor.cc:
	use line marker and breakpoint icons from anjuta since they're nicer-looking
	and tango-ish and GPLed

2008-01-11  Luca Bruno <lucab@debian.org>

	* Symbolic link for missing sv/legal.xml

2008-01-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Use VarsTreeView in locals and var inspector widgets
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	* src/persp/dbgperspective/nmv-var-inspector2.cc: use the new VarsTreeView
	here instead of duplicating all of the treeview initialization code in 3
	different places

2008-01-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add global variables dialog
	* src/persp/dbgperspective/Makefile.am: add new files
	* src/persp/dbgperspective/glade/Makefile.am: add new file
	* src/persp/dbgperspective/menus/menus.xml: add menu item to view the global
	variables dialog
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add handling for global
	variable view action
	* src/persp/dbgperspective/glade/globalvarsinspector.glade:
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.cc:
	* src/persp/dbgperspective/nmv-global-vars-inspector-dialog.h: add a global
	variables display dialog
	* src/persp/dbgperspective/nmv-variables-utils2.cc:
	* src/persp/dbgperspective/nmv-variables-utils2.h: update the
	append_a_variable() functions to take a const RefPtr&
	* src/persp/dbgperspective/nmv-vars-treeview.cc:
	* src/persp/dbgperspective/nmv-vars-treeview.h: abstract out the treeview
	that displays variables so that we can use it in several different places
	and reduce code duplication.  Right now it is only used in the global
	variables widget, but the locals and variable inspector dialog may be
	refactored to use it later

2008-01-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	remove global variables configure option
	* configure.ac: remove --enable-global-variables configure option
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc: remove the global
	variables listing from the local variables widget.  It will be added later
	as a modal dialog.

2008-01-09  Luca Bruno <lucab@debian.org>

	* Enable and register scrollkeeper entry - Close http://bugs.debian.org/457522

2008-01-09  Luca Bruno <lucab@debian.org>

	* Added manpage nemiver(1)

2008-01-03  Jonathon Jongsma <jjongsma@src.gnome.org>

	add --disable-memoryview configure option

2007-12-31  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2007-12-26  Dodji Seketeli <dodji@src.gnome.org>

	memory editing and register related cleanups.
	* src/dbgengine/nmv-i-debugger.h: in the registers and memory
	manipulation signals, use const references to pass parameters
	that are containers. Otherwise, they are passed by copy and that
	is bad.
	* src/dbgengine/nmv-gdb-engine.h,cc: progragated this change
	over here.
	* src/persp/dbgperspective/nmv-memory-view.cc: ditto. Constified
	the a_values parameter of MemoryView::Priv::on_memory_read_response() signal
	handler. Same to MemoryView::Priv::set_data().
	* src/uicommon/nmv-hex-document.cc: constified the data parameter
	of the Document::set_data() method.

2007-12-26  Dodji Seketeli <dodji@src.gnome.org>

	make global variables extraction chain work
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::extract_global_variable_list): extract the variable
	name from the first init-declarator of the init-declarator list
	embedded in the simple-declaration that we parse from the GDB
	output. That variable name is then what set as the name of
	IDebugger::Variable that is sent back to the client code.
	* tests/test-global-variables.cc: beefed up this regresssion test
	to make it stick the list of global variables we receive into an
	IVarListWalker and actually walk them. This pretty much tests
	what happens in nemiver when we list the global variables.
	On my box, this has a acceptable speed as it is takes less than
	1.5 seconds to list the globals of the fooprog program. This
	whole story started with around 7 minutes to do pretty much the
	same thing!

2007-12-26  Dodji Seketeli <dodji@src.gnome.org>

	added regression test for variable name retrieval.
	* tests/test-cpp-parser.cc: added a regression test for
	nmv-cpp-ast-utils.h to basically retrieve variable names from
	Declarator datastructures.

2007-12-26  Dodji Seketeli <dodji@src.gnome.org>

	Fix a decl-specifier-seq parsing code
	* src/langs/nmv-cpp-parser.cc:
	(Parser::parse_decl_specifier_seq): parsing of decl-specifier-seq
	was broken for consructs like:  "static long unsigned int".
	The broken part is due to "long" coming before the "unsigned",
	instead of after.
	* tests/test-cpp-parser.cc: added a regression test case for the
	above fix.

2007-12-26  Dodji Seketeli <dodji@src.gnome.org>

	fix some memory, constness and reference usage bugs.
	* src/langs/nmv-cpp-ast.cc: fix a potential memory bug.
	* src/langs/nmv-cpp-ast.h:  fix some constness/reference usage.

2007-12-26  Dodji Seketeli <dodji@src.gnome.org>

	some reference related fixes
	* src/dbgengine/nmv-i-var-list-walker.h,
	src/dbgengine/nmv-i-var-walker.h,
	src/dbgengine/nmv-var-list-walker.cc,
	src/dbgengine/nmv-var-walker.cc: remove some references from
	some parameters that should not have them. Add some to variables
	that should have them instead.

2007-12-26  Dodji Seketeli <dodji@src.gnome.org>

	support extraction of variable name  out of a Declarator

2007-12-26  Djihed Afifi <djihed@src.gnome.org>

	Updated Arabic Translation by Djihed Afifi.

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Give exception catchpoints meaningful names
	* src/dbgengine/nmv-gdbmi-parser.cc: give the exception catchpoints
	meaningful names.  catchpoints don't have the same fields as regular
	breakpoints.  They have a 'what' field instead of a 'func' field, so use the
	'what' field if there is no 'func' field

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix issue with catchpoint not showing up in the breakpoint list
	* src/dbgengine/nmv-gdb-engine.cc: explicitly list the breakpoints after
	setting a catchpoint so that the new catchpoint will get added to the
	breakpoint list immediately

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Don't report a parsing error when changed_registers is empty
	* src/dbgengine/nmv-gdbmi-parser.cc: Don't report a parsing error when the
	'changed_registers' response is empty (indicating that no registers were
	changed).  This seemed to happen regularly when a program reached the end of
	execution. Fixed #502526

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix clipped close button in notebook tabs
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: fix the issue where the
	close button's icon was clipped since the image didn't fit into the button
	size we were requesting.  This required setting the Button's RcStyle
	xthickness and ythickness to 0 (idea stolen from gnome-terminal)

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	fix notebook tab issue
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: fix the glitch in the
	source Notebook tabs that showed up in the new clearlooks theme that has
	gradients on the tab.

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add final pieces for enabling basic memory editing capability
	* src/dbgengine/nmv-i-debugger.h: add set_memory and set_memory_signal API
	* src/dbgengine/nmv-gdb-engine.h, src/dbgengine/nmv-gdb-engine.cc: add
	implementations of set_memory() for gdb.
	* src/uicommon/nmv-hex-document.h, src/uicommon/nmv-hex-document.cc: wrap
	the document_changed signal, and the get_data() function
	* src/uicommon/nmv-hex-editor.h, src/uicommon/nmv-hex-editor.cc: wrap the
	new set_starting_offset() value so that the address labels in the left-hand
	column of the memory view show the proper addresses
	* src/persp/dbgperspective/nmv-memory-view.cc: connect to the HexDocument's
	document_changed signal and write the new memory values to the debugger.
	Also, set the starting offset to the current memory address.  This is the
	final piece needed to enable basic memory editing.  Note that it requires a
	version of ghex that is not even in svn yet, however.

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add ability to set the HexEditor font

2007-12-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Use the Hex editor widget from GHex instead of the simplistic TextView widget

2007-12-18  Dodji Seketeli <dodji@src.gnome.org>

	add global variables listing based on declaration parsing.
	* use the new variable declaration code to parse the list
	of global variable declaration coming from GDB.

2007-12-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: debug  declarator list parsing code

2007-12-18  Dodji Seketeli <dodji@src.gnome.org>

	use MI to set breakpoints by name.

2007-12-16  Luca Bruno <lucab@debian.org>

	Revert previous statement, leaving out scrollkeeper for this time

2007-12-16  Dodji Seketeli <dodji@src.gnome.org>

	catch exceptions thrown in a signal callbacks (#503864)
	* src/confmgr/nmv-gconf-mgr.cc:
	(client_notify_func): catch exceptions that might been thrown.
	This fixes #503864

2007-12-16  Dodji Seketeli <dodji@src.gnome.org>

	fix start nemiver with wrongs args throws error (#503887)

2007-12-16  Dodji Seketeli <dodji@src.gnome.org>

	disallow min root win geometry to be (0,0)
	* src/workbench/nmv-workbench.cc:
	(Workbench::init_window ()): make sure the minimum geometry of
	the root window cannot be (0,0).

2007-12-16  Dodji Seketeli <dodji@src.gnome.org>

	cosmetic cleanups

2007-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Added regression test for a gdb bug #2387
	*  test/Makefile.am, tests/test-overloads.cc: added
	This test to test a regression that happend in gdb 6.7.1
	handling of overload resolution when using the mi2 interpreter.
	Basically the format of the prompt returned to the client for
	overload resolution is broken by gdb.
	This test shows the problem.

2007-12-12  Luca Bruno <lucab@debian.org>

	* Not really sure about it, but leaving scrollkeeper there for now

2007-12-10  Luca Bruno <lucab@debian.org>

	* Various minor fixes

2007-12-10  Luca Bruno <lucab@debian.org>

	* Minor fix in series

2007-12-10  Luca Bruno <lucab@debian.org>

	* Desktop file conforming to 1.0 specification

2007-12-10  Luca Bruno <lucab@debian.org>

	*  Shipping libnemivercommon as a private lib (patch from SVN r539-542)

2007-12-09  Dodji Seketeli <dodji@src.gnome.org>

	heavy bugfix to start parsing real world output of "info variable".
	* src/langs/nmv-cpp-ast.cc:
	(QName::to_string ()): fix a bug in here.
	(QualifiedIDExpr::to_string): ditto.
	* src/langs/nmv-cpp-ast.h: Make QName (scope) support template-id, not
	only identifiers.
	* src/langs/nmv-cpp-lexer.cc:
	(Lexer::scan_keyword()): bugfix: when a keyword is followed by characters that
	could make it an identifier, well, it's not a keyword.
	* src/langs/nmv-cpp-parser.cc:
	(Parser::parse_class_or_namespace_name()): make this parse into an
	UnqualifiedIDExpr, not a bare string. Yeah, class or namespace names
	can be more complicated than simple identifiers.
	(Parser::parse_nested_name_specifier()): propagate the above change.
	(Parser::parse_unqualified_id): bugfix: a plain keyword can be an
	unqualified ID.
	(Parser::parse_qualified_id()): bugfix: don't consume tokens for real
	when doing tentative parsing.
	Also, make sure to always try to parse the remaining unqualified id
	part when we parsed a nested name specifier first.
	(Parser::parse_id_expr()): cleanup&fix: always try to parse the longest
	valid sequence.
	* tests/test-cpp-parser.cc: heavy cleanup here. Put the parser inputs
	into arrays. Added more " real life" tests coming from the output of
	"info variable" on fooprog.

2007-12-09  Dodji Seketeli <dodji@src.gnome.org>

	fix potential leaks in the cpp parser.
	* src/langs/nmv-cpp-ast.h: add virtual to TemplateArg and TemplateID destructor,
	otherwise this could lead to a potential leak later.

2007-12-09  Dodji Seketeli <dodji@src.gnome.org>

	support template-id in simple-type-specifier.
	* src/langs/nmv-cpp-ast.cc,h,
	src/langs/nmv-cpp-parser.cc: added support of template-id in
	simple-type-specifier. Now we should be able to parse things like "foo<bar> baz;"
	* tests/test-cpp-parser.cc b/tests/test-cpp-parser.cc: updated
	regression tests.

2007-12-08  Dodji Seketeli <dodji@src.gnome.org>

	fix a compilation error.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc: fix a
	compilation error here.

2007-12-08  Dodji Seketeli <dodji@src.gnome.org>

	speedup unfolding hidden callstack entries
	* src/persp/dbgperspective/nmv-call-stack.cc:
	Don't call debugger->select_frame() when the user tries to unfold
	more stack trace elements. Otherwise, IDebugger sends us the arguments
	of all the callstack functions again.

2007-12-08  Dodji Seketeli <dodji@src.gnome.org>

	add template-id production parsing support
	* src/langs/nmv-cpp-ast.h,cc: add the necessary types to support
	template-id parsing.
	* src/langs/nmv-cpp-parser.cc,h: support template-id parsing. I still
	need to make other production parsing functions use this one.
	* tests/test-cpp-parser.cc: update regression tests.

2007-12-08  Hubert Figuiere <hub@src.gnome.org>

	Allow setting breakpoints like you do with gdb command "catch". Closes bug
	* src/dbgengine/nmv-gdb-engine.{cc.h}, src/dbgengine/nmv-i-debugger.h,
	src/persp/dbgperspective/nmv-dbg-perspective.cc,
	src/persp/dbgperspective/nmv-set-breakpoint-dialog.{cc,h},
	src/persp/dbgperspective/glade/setbreakpointdialog.glade:
	Allow setting breakpoints like you do with gdb command "catch".
	Closes bug #499034.

2007-12-05  Luca Bruno <luca.br@uno.it>

	* Manpage missing right now, will be written soon

2007-11-29  Claude Paroz <claude@2xlibre.net>

	Updated French translation.
	* fr.po: Updated French translation.

2007-11-29  Luca Bruno <luca.br@uno.it>

	* Minor copyright fixes

2007-11-29  Luca Bruno <luca.br@uno.it>

	* Making lintian happy about distclean

2007-11-29  Luca Bruno <luca.br@uno.it>

	* Long description added

2007-11-27  Luca Bruno <luca.br@uno.it>

	* Build-depends filled up and ready to build

2007-11-26  Luca Bruno <luca.br@uno.it>

	* Added a proper menu section

2007-11-26  Dodji Seketeli <dodji@src.gnome.org>

	make "refresh local" refresh function arguments as well
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	(LocalVarsInspector2::show_local_variables_of_current_function): list
	debugger frame arguments in here. I did this because otherwise
	the "refresh locals" contextual menu clears the function arguments.

2007-11-26  Dodji Seketeli <dodji@src.gnome.org>

	fix a little regression in parser tests.
	* tests/test-cpp-parser.cc: unfuck a little regression in the
	declarators serialisation.

2007-11-26  Dodji Seketeli <dodji@src.gnome.org>

	Limit the number of frame rows in CallStack widget (#442213)
	* src/persp/dbgperspective/nmv-call-stack.cc:
	Sometimes, when the callstack is huge, the CallStack widget gets stuck
	in trying to display all the rows of the call stack.
	Therefore, I have introduced a limit to the number of rows to display.
	The user can display more rows if she wants. She just has to click on
	the last row of the CallStack widget.
	By default, the widget displays 20 callstack rows at most. This value
	can be changed at runtime be modifying the value of the gconf key
	/apps/nemiver/dbgperspective/callstack-expansion-chunk.
	This entry should fix bug #442213.

2007-11-25  Dodji Seketeli <dodji@src.gnome.org>

	add a "refresh locals" menu
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	when gdb enters a function:
	void foo ()
	{
	int i=0;
	if (!i) {
	string str;
	/*blah ..*/
	}
	}
	When we query gdb for the list of local variables of the function, it
	only reports i. Not str. str becomes visible only when we step into
	the scope of the "if" block, and we have no easy way to detect that
	we entered the scope.
	So I have added a "refresh locals" menu in the debugger to allow
	nemiver to query gdb on demand to refresh the list of local variables.

2007-11-25  Dodji Seketeli <dodji@src.gnome.org>

	varwalker crash and bug fixes
	* src/dbgengine/nmv-var-walker.cc:
	Make VarWalker extend sigc::trackable to fix a random crash.
	(VarWalker::get_type_of_all_members): when a node has a name starting
	with '<', usually due to an unamed variable node, don't try to query
	the type of its children because gdb does recognize names starting with
	'<'. Damit.

2007-11-25  Dodji Seketeli <dodji@src.gnome.org>

	fix regression in local variables inspector
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc: when
	you double-click on a row in the local variables inspector, show the
	type of the variable. This was workin in the pre variable-walker
	local variables inspector tough.

2007-11-25  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: support basic array declarations parsing
	* src/langs/nmv-cpp-ast.h,
	src/langs/nmv-cpp-parser.cc,
	tests/test-cpp-parser.cc: support basic parsing of array declarations.

2007-11-25  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: parse constant-expressions
	* src/langs/nmv-cpp-ast.h, src/langs/nmv-cpp-parser.h,cc:
	parse constant-expression
	* tests/test-cpp-parser.cc: added a test case to parse expressions using
	the Parser::parse_expr() entry point.

2007-11-25  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: can parse the bulk of expressions now.
	* src/langs/nmv-cpp-parser.h,cc,
	src/langs/nmv-cpp-ast.h,cc,
	tests/test-cpp-parser.cc: parse the following productions:
	logical-and-expression, logical-or-expression, conditional-expression,
	assignment-expression and expression. Of course, there are quite some
	holes in the parsing, but the bulk of it is falling in place.
	Updated primary-expression parsing to make it parse
	"(expression)".
	Updated postfix-expression parsing a little bit to make it parse
	"postfix [expression]", especially the 'expression' part.
	Did quite some debugging.

2007-11-24  Luca Bruno <luca.br@uno.it>

	* Patch from SVN (r513) to fix a misnamed glade file

2007-11-24  Luca Bruno <luca.br@uno.it>

	* Better handling of gconf schemas and lib stuff

2007-11-24  Luca Bruno <luca.br@uno.it>

	* Added xpm icon for debian menu file

2007-11-24  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: finish parsing bitwise operations expression
	* langs/nmv-cpp-ast.cc,h,
	src/langs/nmv-cpp-parser.cc,h,
	tests/test-cpp-parser.cc: parse equality-expression, and-expression,
	exclusive-or-expression and inclusive-or-expression productions.

2007-11-24  Luca Bruno <luca.br@uno.it>

	* Non-fatal distclean

2007-11-23  Dodji Seketeli <dodji@src.gnome.org>

	fix crash on exit #499033
	* src/dbgengine/nmv-var-list-walker.cc,
	src/dbgengine/nmv-var-walker.cc: don't make VarWalker and
	VarListWalker extend sigc::trackabale because they connect to each
	other and that causes crashes at their destruction time.

2007-11-22  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: added relational-expression parsing

2007-11-22  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: parse shift-expression productions
	* src/langs/nmv-cpp-ast.h:
	* src/langs/nmv-cpp-parser.cc,h:
	* tests/test-cpp-parser.cc: parse shift-expression productions

2007-11-20  Hubert Figuiere <hub@src.gnome.org>

	POTFILES.in needed an update

2007-11-20  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2007-11-19  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: added additive-expression

2007-11-19  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: fixed MINUS operator lexing

2007-11-19  Dodji Seketeli <dodji@src.gnome.org>

	varwalker: fix several crashers
	* src/dbgengine/nmv-var-list-walker.cc: fix a crash due to
	WalkersMap not being a smart pointer and then not taking ref on
	assignation.
	* src/dbgengine/nmv-var-walker.cc: clear some memory at some point here.
	* src/persp/dbgperspective/nmv-variables-utils2.cc: fix a crasher here:
	(update_a_variable_real): do not overrun the container, damit.
	(update_a_variable): when looking up a node, don't check for var type
	name. Only check for var name. It appears that in some circumstances
	some vars are getting wrong types, so further lookup would fail if it
	it takes in account var type names.

2007-11-19  Luca Bruno <luca.br@uno.it>

	* Added debian/watch for nemiver

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: made pm-expression and multiplicative-expression parsing complete.
	* src/langs/nmv-cpp-ast.h: added DotStarPMExpr and ArrowStarPMExpr
	types.
	* src/langs/nmv-cpp-parser.cc: make parsing of pm-expression be
	complete.
	* tests/test-cpp-parser.cc: added basic non-regression tests for
	pm-expression and multiplicative-expression productions.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: made cast-expression and pm-expression work
	* src/langs/nmv-cpp-parser.cc:
	(Parser::parse_cast_expr): made cast-expression parsing work.
	* tests/test-cpp-parser.cc: added basic test cases for cast-expression
	and pm-expression.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Fix a crash triggered by a memory corruption
	* src/dbgengine/nmv-var-walker.cc: fixed a nasty memory corruption bug.
	the map VarWalker::m_vars_to_visit was storing IDebugger::Variable*,
	not IDebugger::VariableSafePtr. So at some point, the pointer to
	variable were getting destroyed by the IDebugger internal somewhere.
	So back to storing IDebugger::VariableSafePtr. The map then needs the
	declaration of a comparison functor to be able to compare instance of
	IDebugger::VariableSafePtr properly. So one got added.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Fix a potential refcounting issue.
	* src/dbgengine/nmv-dbg-common.h:
	(Command::variable ()): Don't pass VariableSafePtr by reference
	otherwise we bypass its refcounting.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Fix some uninitialised variable bugs.
	* src/dbgengine/nmv-dbg-common.h: Don't forget to initialise the
	memory querying related variables that got added recently.
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(parse_embedded_c_string_body): don't forget to initialise declared
	value.
	* src/persp/dbgperspective/nmv-memory-view.cc: ditto. Also make sure
	lines are properly indented.

2007-11-18  Luca Bruno <luca.br@uno.it>

	* Patch from SVN to reflect a libgtop API change

2007-11-18  Luca Bruno <luca.br@uno.it>

	* debian/copyright rewritten in a machine-interpretable format

2007-11-18  Luca Bruno <luca.br@uno.it>

	* First rough skeleton

2007-11-18  Luca Bruno <luca.br@uno.it>

	* Start packaging nemiver

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: start working toward parsing array vars declarations.
	* src/langs/nmv-cpp-ast.cc,h:
	* src/langs/nmv-cpp-parser.cc,h: started to work toward parsing
	constant-expression. This implies parsing a bunch of different
	expression types. This is to be able to parse array subscripts forms
	of direct-declarator . Once we have that, we can parse
	simple-declarations of the form "foo bar[5]";
	* tests/Makefile.am: disable test-globalvariables.cc for now as global
	variables will remain broken until we now how to parse
	simple-declaration productions.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: simple declarations are now strongly typed.
	* src/langs/nmv-cpp-ast.cc,h: handle fine grained TypeSpecifier.
	* src/lands/nmv-cpp-parser.h,cc: now decl-specifier-seq are properly
	typed and can be manipulated by client APIs.
	As a result, SimpleType are also now fully strongly typed, especially
	the different kinds of TypeSpecifier.
	Parser::parse_simple_type_specifier() returns a SimpleTypeSpecPtr
	instead of a string. Woo.
	It also supports more types of decl-specifier-seq. Still no
	struct/class, or template though.
	* tests/test-cpp-parser.cc: updated this to be reflect the changes
	above. Now we are able to get the type or variable name parts of a
	declaration. We just need to be able to parse more declaration forms.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: support basic pointer decls parsing
	* src/langs/nmv-cpp-ast.h,
	src/langs/nmv-cpp-parser.cc: debuggin parsing of:
	foo *bar, const foo *bar, static const foo*bar.
	* tests/test-cpp-parser.cc: update regression test for that.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: more AST datastructures to parse simple declarations
	* src/langs/nmv-cpp-ast.cc,h,
	src/langs/nmv-cpp-parser.cc,h:
	do what it takes to make Parser::parse_simple_declaration() spit
	AST datastructures.
	* tests/test-cpp-parser.cc: update this to reflect changes in
	Parser::parse_simple_declaration() api.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpp parser: still on going.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	cpplang: added more bits
	* src/langs/*: added an AST and a parser. the aim of the parser is to be
	able to parse a simple-declaration production. It's not done yet but
	the necessary productions are falling in place slowly.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	CPPLexer: fix an operartor parsing bug
	* src/langs/nmv-cpp-lexer-utils.cc: fix a typo.
	* src/langs/nmv-cpp-lexer.cc: forgot to consume a char
	when scanning a scope resolution operator.
	* tests/test-cpp-lexer.cc: added a new test case.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	CPPLexer: add debugging to tokens
	* tests/test-cpp-lexer.cc: dump tokens to stdout.
	* src/langs/nmv-cpp-lexer-utils.cc: add this to serialize tokens

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	gdbmi parser: buglet fix
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(remove_stream_record_trailing_chars): better style.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	CPPLexer: first attempt at writting a c++ lexer.
	* src/langs/nmv-cpp-lexer.cc,h: write a lexer
	that does not support pre-processing.
	It is useful to parse GDB's output when queried
	for the list of global variables.
	* test/test-cpp-lexer.cc: regression test for a simple case.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	GDBEngine: prepare global vars list extraction
	* src/dbgengine/nmv-gdb-engine.cc,h: added
	a GDBEngine::extract_global_variable_list() that will
	be responsible to extract the global vars list info
	from the debuggong console stream of gdb.
	Call this from within the GlobalVariableListedHandler.
	GDBEngine::extract_global_variable_list() does not work
	yet as it will need to use a precise c++ declaration parser
	to properly do the job.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Added a unit test for global variables listing

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	added tests/test-var-walker.cc to test IVarWalker

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	added IVarListWalker::variable_list_visited_signal()

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	fix bugs to IVarWalkerList -> IVarListWalker renaming
	* src/dbgengine/varlistwalker.conf.in: make varlistwalker dynmod load
	dso libvarlistwalkermod.so and not more libvarwalkerlistmod.so.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc: load dynmod
	varlistwalker and not more varwalkerlist

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Rename IVarWalkerList into IVarListWalker

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	add --enable-variable-waler and --enable-global-variables
	* config.h.in,configure.ac: add --enable-variable-walker and
	--enable-global-variables to enable/disable IVarWalker and global
	variables widgets.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: use the variable
	walker aware LocalVarInspector2 widget when WITH_VARIABLE_WALKER is
	defined.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc: don't compile
	this when WITH_VARIABLE_WALKER is not defined. Also, don't show global
	variables stuff when WITH_GLOBAL_VARIABLES is not defined.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: use the
	IVarWalker aware VarInspector2 widget with WITH_VARIABLE_WALKER is
	defined.
	* src/persp/dbgperspective/nmv-var-inspector2.cc: don't compile this
	when WITH_VARIABLE_WALKER is not defined.
	* src/persp/dbgperspective/nmv-variables-utils2.cc: don't compile this
	when WITH_VARIABLE_WALKER is not defined.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	global variables listing performance improvements
	* this entry is about performance. It multiplies the speed by 14 on my
	box when trying to display the global variables of tests/.libs/fooprog
	This performance work has been directed by careful profiling.
	* src/common/nmv-log-stream.cc:
	use __gnu_cxx::hash_map instead of std::map to store
	domain names. Profiling showed that this increases
	performance.
	* src/common/nmv-scope-logger.cc:
	(ScopeLogger::~ScopeLogger): remove logging in here for performance
	reasons.
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(parse_c_string): remove scoppe logging from this function that is
	called a lot.
	(parse_c_string_body): ditto.
	(parse_stream_record): don't access UString's chars sequentially. It'
	too slow.
	(parse_out_of_band_record): ditto.
	(parse_result_record): ditto.
	(parse_output_record): ditto.
	* src/dbgengine/nmv-i-debugger.h: Don't access UString's chars
	sequentially. It's too slow.
	* src/dbgengine/nmv-var-walker.cc:
	(VarWalker::on_variable_value_signal): don't test UString's equality.
	It's too slow.
	(VarWalker::on_variable_value_set_signal): ditto. Remove logging.
	(VarWalker::on_variable_type_set_signal): ditto.
	(VarWalker::get_type_of_all_members): accessing UString's chars
	sequentially is too slow.
	* src/persp/dbgperspective/nmv-variables-utils2.cc: remove UStrings
	equality tests and UString subscripting.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Add global variables listing sections to variable widgets
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc,
	src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	Add a global variables section in the variable inspector widgets.
	This is based on a patch from A. Gordon <agordon88@gmail.com>.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	IDebugger: support global variables listing
	* src/dbgengine/nmv-gdb-engine.cc,h,nmv-i-debugger.h:
	Add a ability for IDebugger to list global variables. This is a patch
	from A. Gordon <agordon88@gmail.com>.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	GDBEngine: make sure IConfMgr is always loaded
	* src/dbgengine/nmv-gdb-engine.cc: make sure the IConfMgr is loaded when
	it has not been specificaly passed by client code at init time.
	This should fix the regression test breakages triggered by conf_mgr
	not being loaded by GDBEngine.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	VarInspector: unfold the added variable row by default.
	* src/persp/dbgperspective/nmv-var-inspector2.cc:
	(VarInspector2::Priv::set_variable): unfold the variable row so that
	the user does not have to do by hand all the time.
	* src/persp/dbgperspective/nmv-variables-utils2.cc,h:
	add an overload of append_a_variable() that returns the row of the
	actually appended variable. The is useful for intance when the calling
	code wants to fold/unfold the added variable row for better legibility.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	turn VarInspector2 to use IVarWalker
	* src/dbgengine/nmv-var-walker.cc: make VarWalker extend sigc::trackable
	so that it automatically disconnects from signals it connected to
	- e.g: IDebugger signals -  at destruction time. Otherwise, its signal
	handlers connected to IDebugger get called even after the walker instance is
	destroyed leading to crashes.
	* a/src/persp/dbgperspective/nmv-local-vars-inspector2.cc:
	remove code from here and put it into nmv-variables-utils2.cc instead.
	That allows code sharing with nmv-var-inspector2.cc.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc: use either
	VarInspector of VarInspector2, based on the VARS_INSPECTOR2 macro.
	* src/persp/dbgperspective/nmv-var-inspector.cc,h: Change the interface of
	VarInspector::VarInspector() to take an IDebuggerSafePtr& instead of an
	IDebugger&. This make VarInspector api be in par with VarInspector2.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc,
	nmv-var-inspector-dialog.cc,h: propagate the change in VarInspector
	iface to VarInspectorDialog and DBGPerspective types.
	* src/persp/dbgperspective/nmv-var-inspector2.cc,h: added VarInspector2
	type. It uses IVarWalker. It works now. The only thing that is not yet
	implemented is variable dereferencing.
	* src/persp/dbgperspective/nmv-variables-utils2.cc,h: add this utils
	to help add/update variables into a treeview that looks like a
	variable inspector. VarInspector2 and LocalVarsInspector use this
	utility function set.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Forgot to generate cpptrait.conf
	* configure.ac: oops, forgot to generate src/dbgengine/cpptrait.conf

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Oops, forgot to add some files
	* src/dbgengine/varwalker.conf.in: forgot to add this file
	* src/dbgengine/varwalkerlist.conf.in: ditto

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Make LocalVarsInspector2 start working
	* src/common/nmv-ustring.cc,h:
	(UString::get_number_of_words): added this new method
	* src/dbgengine/nmv-gdb-engine.cc:
	make sure IDebugger::variable_value_set_signal()
	reports the same IDebugger::VariableSafePtr that was set into
	IDebugger::get_variable_value().
	* src/dbgengine/nmv-i-debugger.h:
	added IDebugger::Variable::is_copyable(),
	IDebugger::Variable::copy () and
	IDebugger::Variable::set().
	* src/dbgengine/nmv-var-walker-list.cc:
	(VarWalkerList::append_variable): add some logging.
	in VarWalkerListDynMod: Fix iface creation bug
	* src/dbgengine/nmv-var-walker.cc: heavily debug this to make it work
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc: ditto.
	Variable dereferencing still does not work, though.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Starting working IVarWalker and IVarWalkerList
	* src/dbgengine/Makefile.am, ./configure.ac: added varwalker.conf, varwalkerlist.conf
	* src/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::get_variable_value): use
	fully qualified variable name (fqvn)
	(GDBEngine::get_variable_type): ditto.
	* src/dbgengine/nmv-i-var-walker-list.h, nmv-i-var-walker.h:
	* src/dbgengine/nmv-var-walker-list.cc,nmv-var-walker.cc:
	added new iface IVarWalker and IVarWalkerList to walk a variable
	and a list of variables.
	* src/persp/dbgperspective/nmv-local-vars-inspector2.cc,h: started to
	hack up a LocalVarsInspector2 to test IVarWalker and IVarWalkerList

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	Allow other dynmods to use GDBEngine.
	* src/dbgengine/Makefile.am: put the gdbengine in a static library that
	can be linked against several dynmods.
	* src/dbgengine/nmv-gdb-engine.cc: rip off declaration and put it in
	nmv-gdb-engine.h so that private bis of a given dynmod can benefit
	from GDB only "protected" features of GDBEngine. Protected features
	here means features that are not advertised in IDebugger because
	specific to GDB.
	* src/dbgengine/nmv-var-walker.cc: use GDBEngine by including
	nmv-gdb-engine.h and casting the IDebugger it gots.

2007-11-18  Dodji Seketeli <dodji@src.gnome.org>

	started to put IVarWalker in place.
	* src/dbgengine/nmv-i-var-walker.h,nmv-var-walker.cc,nmv-var.h: added these new
	files
	* src/dbgengine/Makefile.am: setup a new varwalkermod dynmod.

2007-10-31  Ilkka Tuohela <ituohela@src.gnome.org>

	Updated Finnish translation

2007-10-22  Daniel Nylander <dnylande@src.gnome.org>

	sv.po: Updated Swedish translation

2007-10-14  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2007-10-14  Yannig MARCHEGAY <ymarcheg@src.gnome.org>

	Updated Occitan translation

2007-10-13  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add keyboard shortcut for switching to the memory view tab 	* src/persp/dbgperspective/menus/menus.xml: 	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Add a hotkey and menu 	item for switching to the new Memory view window, just like you can switch 	between the other status notebook tabs with Alt+N.  The memory view is Alt+6

2007-10-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add 'function' column to the Breakpoints list 	* src/persp/dbgperspective/nmv-breakpoints-view.cc: Add 'function' column to 	the breakpoints list so that you can tell at a glance where the breakpoint 	is by looking at the list.  Also re-arrange the columns to make the order a 	bit more useful.

2007-10-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix Breakpoint duplication issue in the Breakpoints list 	* src/persp/dbgperspective/nmv-breakpoints-view.cc: Breakpoints were 	appearing in the Breakpoint list multiple times because the ID was not being 	set properly.  So when the 'breakpoints_set' signal was fired, we went 	through the tree model to see if a breakpoint with that ID was found, none 	were found, so all breakpoints were added even if they already existed in 	the model. 	Also added some logging to help uncover the issue.

2007-10-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Potential Fix for bug 465263, failing to parse breakpoint table 	* src/dbgengine/nmv-gdbmi-parser.cc: Fix for bug #465263 "Error Parsing 	breakpoint table".  The parse_breakpoint() function was not advancing to the 	closing '}' character of the breakpoint, and therefore was not able to parse 	the list of breakpoints correctly. 	* tests/test-gdbmi.cc: added a test for the failure reported in bug #465263

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	MemoryView: display data that has changed since last time in red

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	MemoryView: make TextView not editable * src/persp/dbgperspective/nmv-memory-view.cc: Memory TextView widget should   not be editable since there's no support for editing memory implemented yet

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Coding standard cleanups (add a_ to function arguments)

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	MemoryView: Minor improvements  to the display of memory values * src/persp/dbgperspective/nmv-memory-view.cc: Improve the display of memory   by using builtin std::showbase, etc instead of doing my own formatting.  Also,   don't display fill with zeros, just make sure that they're all the same width

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	MemoryView: UI Cleanup * src/persp/dbgperspective/nmv-memory-view.cc: a bunch of little UI cleanups. Give the text view a margin so that text doesn't go right up to the border. Also give a shadow border around the text view.  Add a 'Format' label to the format selector and add some border and spacing between the widgets in the header of the MemoryView notebook.

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	MemoryView: Re-read memory on changes * src/persp/dbgperspective/nmv-memory-view.cc: automatically re-read memory when the format type is changed or when the address text entry is activated (e.g. by pressing enter after typing an address)

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Remove MemoryEditor class, combine with MemoryView

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	DBGPerspective: add default_config_read_signal() This signal is so that we can detect when the initial configuration values have been read so that we can set things based on these (such as the default font for the memory view widget, etc).

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	RegistersView: ugly hack to keep the register values in the treeview in sync with the register values in gdb. This is only necessary because we can't easily tie gdb error messages to specific command requests at the moment.  We should work out a way to present user-friendly error messages in cases like this.

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	RegistersView: clear the list of registers when the target is detached

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Move the signals into the proper section so that they get documented properly in doxygen

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Remove memoryview glade file from build

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add new Memory Editor widget * src/persp/dbgperspective/Makefile.am: add new memory-editor files * src/persp/dbgperspective/nmv-memory-editor.h, src/persp/dbgperspective/nmv-memory-editor.cc: add a new widget that wraps a basic hex editor component. Eventually this will hopefully wrap the widget from GHex, but right now it's just an ugly and useless TextView widget. * src/persp/dbgperspective/nmv-memory-view.h, src/persp/dbgperspective/nmv-memory-view.cc: no longer using glade for the memory view widget, so we don't need a construction parameter for the plugin path * src/persp/dbgperspective/nmv-dbg-perspective.cc: update for new constructor signature on MemoryView

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Update IDebugger memory API to use more reasonable types * src/dbgengine/nmv-i-debugger.h: update interface to use size_t and uint8_t instead of strings for address and values * src/dbgengine/nmv-dbg-common.h, src/dbgengine/nmv-gdb-engine.cc, src/dbgengine/nmv-gdbmi-parser.cc, src/dbgengine/nmv-gdbmi-parser.h: update to use new interface types * tests/test-gdbmi.cc: update for API change

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Don't activate default in the memory view widget.

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Implement rudimentary Memory view widget * src/persp/dbgperspective/glade/memoryviewwidget.glade: UI definition for Memory view widget * src/persp/dbgperspective/glade/Makefile.am: add new file * src/persp/dbgperspective/nmv-memory-view.h, src/persp/dbgperspective/nmv-memory-view.cc: Add a very rudimentary and basic implementation of a memory viewer widget. It currently just retrieves a fixed number bytes from the starting address and puts it in a TextView. When the debugger is stopped, it updates the values. Eventually we'll actually create a real memory viewer widget, but this provides some basic functionality for now. * src/persp/dbgperspective/Makefile.am: add new files * src/persp/dbgperspective/nmv-dbg-perspective.cc: integrate new Memory view widget

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Debugger backend: Minor fixes for read_memory() function * src/dbgengine/nmv-gdb-engine.cc: Fix read_memory() function which was missing the option specifying the format (hex) * src/dbgengine/nmv-i-debugger.h: Add default value (empty string) for cookie in read_memory()

2007-10-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Initial debugger support for reading memory values * src/dbgengine/nmv-i-debugger.h: add interface for reading memory values * src/dbgengine/nmv-dbg-common.h: add data storage for memory values * src/dbgengine/nmv-gdb-engine.cc: add handling for reading memory values * src/dbgengine/nmv-gdbmi-parser.h, src/dbgengine/nmv-gdbmi-parser.cc: add parsing for memory value responses * tests/test-gdbmi.cc: test parsing memory value results

2007-09-25  Gil Forcada Codinachs <gforcada@src.gnome.org>

	Updated Catalan translation by David Planella

2007-09-09  Daniel Nylander <dnylande@src.gnome.org>

	Updated Swedish translation. Added screenshots.
	* sv/sv.po: Updated Swedish translation.
	* sv/figures/*png: Added screenshots.

2007-09-09  Daniel Nylander <dnylande@src.gnome.org>

	sv.po: Updated Swedish translation

2007-09-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add keybindings for switching between notebook tabs
	* src/persp/dbgperspective/menus/menus.xml: add actions for switching
	between the notebook tabs (e.g. variables, breakpoints, etc)
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: hook up the actions to
	switch between notebook tabs with alt-#

2007-09-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add MAINTAINERS per new GNOME svn policy

2007-09-07  Ilkka Tuohela <ituohela@src.gnome.org>

	Updated Finnish translation

2007-08-26  Josep Puigdemont i Casamajó <joseppc@src.gnome.org>

	Updated Catalan translation by David Planella.

2007-08-25  Daniel Nylander <dnylande@src.gnome.org>

	sv.po: Swedish translation updated

2007-08-19  Dodji Seketeli <dodji@src.gnome.org>

	fix breakage when configured with --libdir=/something
	* configure.ac: make sure to fully expand $libdir in NEMIVER_LIBDIR.
	NEMIVER_LIBDIR is now $libdir, but fully expanded. It can now be used
	in dynmod confs file. This is way better since it dynmod loading still
	work even when configure was run with --libdir=/somewhere, which was
	not the case with the previous solution.
	* src/*/*.conf.in: uses the new NEMIVER_LIBDIR instead of the former
	solution.

2007-08-19  Dodji Seketeli <dodji@src.gnome.org>

	Fix a small compilation error
	* src/dbgengine/nmv-i-debugger.h: fix a compilation error I introduced.

2007-08-19  Dodji Seketeli <dodji@src.gnome.org>

	cosmetic changes in IDebugger.h registers related signal decls
	* src/dbgengine/nmv-i-debugger.h: cosmetic (but important) change: put
	the register related signal in the "signals" section of the IDebugger
	class declaration, otherwise this thing will be a growing mess.

2007-08-19  Dodji Seketeli <dodji@src.gnome.org>

	Updated Spanish translation by Alberto Caso

2007-08-19  Dodji Seketeli <dodji@src.gnome.org>

	Enable remote targets debugging.
	* src/common/nmv-env.cc,h: add a env::get_system_lib_dir() call.
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	Add a IDebugger::do_init() to be called by client code to initialize
	the debugger. Client code can then pass an IConfMgr to the debugger so
	that it can later retrieve some configuration parameters.
	This is useful when we want for instance to choose a given gdb binary
	to use. When working with remote embedded targets, one must compile
	a cross-gdb and use that one. The user can then set the path to
	the gdb to use, and IDebugger can have a chance to know about that
	choice. Basically, the user can set the gconf key
	/apps/nemiver/dbgperspective/gdb-binary to set the path to gdb binary
	to be used by the gdb debugger backend.
	Added IDebugger::set_solib_prefix_path() to set the prefix from
	which the debugger is supposed to load the inferior shared object
	from. This is useful for debugging remote embedded targets, with gdb
	at least.
	Added IDebugger::get_debugger_full_path() to let client code
	know the full path to the debugger binary used by nemiver at some
	point.
	* src/persp/dbgperspective/glade/remotetargetdialog.glade: add
	an entry to set the solib prefix path. This has been edited using
	glade-3 as it is the only one glade left on debian sid.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Use gconf key
	/apps/nemiver/dbgperspective/debugger-engine-dynmod to get the
	name of the of engine dynmod. So the name "gdbengine" is not hardcoded
	anymore. Also, take in account the solib prefix path when debugging
	a remote target.
	* src/workbench/nmv-i-workbench.h,nmv-workbench.cc:
	IWorkbench::get_configuration_manager() now returns a IConfMgrSafePtr, no more
	a reference. That eases passing the IConfMgrPtr to object objects like
	the IDebugger.

2007-08-16  Adam Weinberger <adamw@gnome.org>

	Added missing file.
	* POTFILES.in: Added missing file.

2007-08-14  Ilkka Tuohela <ituohela@src.gnome.org>

	Updated Finnish translation

2007-08-14  Ilkka Tuohela <ituohela@src.gnome.org>

	Added Finnish translation

2007-08-01  Jorge Gonzalez Gonzalez <jorgegonz@src.gnome.org>

	Updated Spanish translation by Alberto Caso

2007-07-28  Dodji Seketeli <dodji@src.gnome.org>

	Fix an conf loading initialization hazard
	* src/common/nmv-conf-manager.cc,h: don' t put the s_config member as
	global. Put static in a function to avoid global initialization
	sequence hazards.

2007-07-28  Dodji Seketeli <dodji@src.gnome.org>

	link libnemiveruicommon with libutil

2007-07-28  Dodji Seketeli <dodji@src.gnome.org>

	make sure all dynmods have no undef symbols

2007-07-28  Dodji Seketeli <dodji@src.gnome.org>

	make libnemivercommon be a private library

2007-07-28  Dodji Seketeli <dodji@src.gnome.org>

	static libs must be PIC

2007-07-27  Daniel Nylander <dnylande@src.gnome.org>

	sv.po: Updated Swedish translation

2007-07-27  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add ability to edit register values 	* src/dbgengine/nmv-i-debugger.h: add 'set register' API / signal 	* src/dbgengine/nmv-gdb-engine.cc: Provide implementation of 'set register' 	interfaces and signals 	* src/dbgengine/nmv-gdbmi-parser.cc: Add FIXME to indicate that the result 	from setting a register will actually be parsed expecting to find a variable 	value. 	* src/persp/dbgperspective/nmv-registers-view.cc: make the value of the 	register editable and send the new value to gdb.  The user can now change 	the values of registers, albeit in a rather primitive way.

2007-07-24  Jonathon Jongsma <jjongsma@src.gnome.org>

	Change register value to red when it is updated 	* src/persp/dbgperspective/nmv-registers-view.cc: change the register value 	to 'red' when it has been changed since last time and otherwise revert to 	the normal text color

2007-07-22  Jonathon Jongsma <jjongsma@src.gnome.org>

	get register values when they have changed and display them in the RegistersView

2007-07-22  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix bug in listing registers caused by uninitialized data members 	* src/dbgengine/nmv-dbg-common.h: fixed bug where some flags were not 	initialized before use which was causing some seemingly random failures, 	noticed first in the fact that the register names no longer were populated 	in the register view because m_has_register_names apparently sometimes was 	initialized to true so the handler would be called (and thus emit a signal 	without any register names) for unrelated gdb output. 	* src/dbgengine/nmv-gdb-engine.cc: switch the order of a couple things to 	reduce race conditions.  At first I thought this was the problem but it 	wasn't.  It doesn't hurt to leave it this way though. 	* src/persp/dbgperspective/nmv-registers-view.cc: add some logging to aid in 	debugging.

2007-07-22  Jonathon Jongsma <jjongsma@src.gnome.org>

	Implement getting register values for the GDB backend 	* src/dbgengine/nmv-dbg-common.h: add register value interfaces 	* src/dbgengine/nmv-gdb-engine.cc: add handler for register value commands 	* src/dbgengine/nmv-gdbmi-parser.h, src/dbgengine/nmv-gdbmi-parser.cc: add 	parsing for register values (parse_register_values) 	* tests/test-gdbmi.cc: add test for parsing register values

2007-07-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add RegistersView Widget 	* src/persp/dbgperspective/nmv-registers-view.h, 	src/persp/dbgperspective/nmv-registers-view.cc: add a RegistersView widget 	for displaying the contents of registers in the status notebook.  Currently, 	it doesn't show register values, but it does show whether the register has 	changed since last time by adding a '*' to the Value column 	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add the RegistersView 	widget to the status notebook 	* src/persp/dbgperspective/Makefile.am: Add the new files

2007-07-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix some register listing parsing errors 	* src/dbgengine/nmv-gdb-engine.cc: add the OnChangedRegistersListedHandler 	as an output handler which was forgotten last time. 	* src/dbgengine/nmv-gdbmi-parser.cc: Fix a parsing error in the register 	listing functions

2007-07-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	GDBMI: cleanup patch to use some constant strings instead of string literals and magic numbers throughout the code.

2007-07-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add support for list_changed_registers() 	* src/dbgengine/nmv-dbg-common.h: added storage and interfaces for accessing 	the list of changed registers 	* src/dbgengine/nmv-gdbmi-parser.cc, 	src/dbgengine/nmv-gdbmi-parser.h: added parsing for the listing fo changed 	registers 	* src/dbgengine/nmv-gdb-engine.cc: add output handler for changed register 	* tests/test-gdbmi.cc: added tests for changed register parsing

2007-07-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	Initial support for register-related commands, specifically list_register_names()
	* src/dbgengine/nmv-i-debugger.h: add some API for getting information about
	the CPU registers
	* src/dbgengine/nmv-dbg-common.h, src/dbgengine/nmv-gdb-engine.cc: add
	support for register commands to the gdb engine.  Currently only listing the
	register names is fully supported.
	* src/dbgengine/nmv-gdbmi-parser.cc, src/dbgengine/nmv-gdbmi-parser.h: parse
	the listing of register names
	* tests/test-gdbmi.cc: test the parsing of register names from gdb

2007-07-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	a possible fix for boost unit test so that it will build on Ubuntu feisty
	* configure.ac: a possible fix for boost unit test so that it will build on
	Ubuntu feisty (e.g. boost 1.33.1).  Hopefully this doesn't break newer boost
	versions.

2007-06-23  Daniel Nylander <dnylande@src.gnome.org>

	sv.po: Updated Swedish translation

2007-06-19  Jordi Mas <jmas@softcatala.org>

	Added Catalan translation. Added ca to the list
	* ca.po: Added Catalan translation.
	* LINGUAS: Added ca to the list

2007-06-19  Jonathon Jongsma <jjongsma@src.gnome.org>

	The 'toggle breakpoint' and 'enable/disable breakpoint' actions are now updated to display context-sensitive text for the menu items.  In other words, if the cursor is on a line with an enabled breakpoint, the actions will be called 'Remove breakpoint' and 'Disable breakpoint', on a line without a breakpoint, the actions will be called 'Set breakpoint' and the enable/disable action will be insensitive. In order to get this right, I had to update the text of the toggle actions whenever there were any changes to the breakpoints in addition to whenever the cursor insertion point changed.

2007-06-19  Jonathon Jongsma <jjongsma@src.gnome.org>

	Use a #define instead of re-typing the marker type string wherever it's needed

2007-06-16  Jonathon Jongsma <jjongsma@src.gnome.org>

	Don't pop up multiple 'reload' dialogs for the same file. If a popup dialog has already been displayed for that particular file, suppress further popups about that file until the user has dismissed the first dialog.

2007-06-16  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add an 'Address' field to the breakpoints list Add an 'Address' field to the breakpoints list so that if a breakpoint does not have any filename information, there is still some unique identifiable information visible.  Also, use update_breakpoint() from append_breakpoint() to reduce code duplication.

2007-06-16  Jonathon Jongsma <jjongsma@src.gnome.org>

	For stack frames without file information, display the address instead of attempting to show a filename and line.  Previously, when filename information was missing, the 'Location' field looked like ':0'

2007-06-16  Jonathon Jongsma <jjongsma@src.gnome.org>

	stop displaying dialogs if a file can't be displayed in some circumstances. Just log them as errors to the terminal (closes bug 447890)

2007-06-14  Pema Geyleg <pgeyleg@src.gnome.org>


2007-06-12  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add a '--last' command line option that lets you quickly launch the last session without having to specify it explicitly

2007-06-12  Jonathon Jongsma <jjongsma@src.gnome.org>

	Allow users to remove the selected breakpoints by typing the 'delete' key in the breakpoints list tab. fixes bug #446584

2007-06-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Load the breakpoints popup menu in the constructor instead of in get_breakpoints_menu() This is needed because we update the sensitivity of the menu actions when the treeview selection changes, and this can happen before we've ever popped up the menu, which results in error logs printed to the terminal.  In the process, I also reduced some code duplication in on_treeview_selection_changed()

2007-06-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Finish up minimal version of the user manual 	* help/C/nemiver.xml: Added some basic content for all of the user manual 	sections that were blank or marked TODO.  There's not a lot useful here, but 	it's at least minimally complete now. 	* help/Makefile.am: add new screenshots 	* help/C/figures/open-files-target.png 	help/C/figures/set-breakpoint-dialog.png 	help/C/figures/variable-inspector.png: new screenshots for user manual

2007-06-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Critical fix to find the 'set breakpoint' dialog glade file Some time ago, setbreakpoint.glade was renamed to setbreakpointdialog.glade, but apparently we've still been trying to load the widget from setbreakpoint.glade. So in 0.4.0, the new set a breakpoint on a function name feature would not have worked at all.  We didn't notice because we probably both had the old glade file installed in /usr/local, so it was just loading the old file. Also, made the set breakpoint dialog a little bit wider by default.

2007-06-09  Jonathon Jongsma <jjongsma@src.gnome.org>

	Cleanup of the 'Choose Overloaded Function' dialog so that it's a bit cleaner Provide a bit of explanation of what is going on, and add a bit of spacing per the HIG, rename treeview column headers

2007-06-07  Daniel Nylander <dnylande@src.gnome.org>

	sv.po: Updated Swedish translation

2007-06-05  Takeshi AIHANA <takeshi.aihana@gmail.com>

	Updated Japanese translation.
	* ja.po: Updated Japanese translation.

2007-06-05  Dodji Seketeli <dodji@src.gnome.org>

	update nmv-proc-mgr.cc,h to reflect a libgtop API change in HEAD
	* src/common/nmv-proc-mgr.cc b/src/common/nmv-proc-mgr.cc,h:
	change ProcMgr::get_process_from_pid() to make it use the pid_t
	type instead of int. This is to reflect the API change
	in libgtop HEAD that would break the compilation otherwise.

2007-06-03  Jonathon Jongsma <jjongsma@src.gnome.org>

	configure.ac: add the ability to disable building of automated tests even when the NEMIVER_DEVEL environment variable is set.  Hopefully this won't be necessary for much longer, but currently the tests don't build for me with boost 1.33.x.  I should really look into why it doesn't build, but this lets me build nemiver in the meantime

2007-06-03  Dodji Seketeli <dodji@src.gnome.org>

	Update make release scripts
	* Makefile.am: do not distcheck for release, only dist. Update svn path
	to point to GNOME svn.

2007-06-03  Dodji Seketeli <dodji@src.gnome.org>

	updated NEWS file to prepare the 0.4 release

2007-06-02  Dodji Seketeli <dodji@src.gnome.org>

	Unbreak test as the result of boost 1.34 usage
	* configure.ac: detect the static library
	libboost_unit_test_framework-st.a as it is now mandatory
	- with boost 1.34 - for some of our tests. Define the variable
	BOOST_UNIT_TEST_FRAMEWORK_STATIC_LIB that points to that detected
	static library.
	* test/Makefile.am: update this to use the new static lib variable.

2007-06-02  Dodji Seketeli <dodji@src.gnome.org>

	Update tests to use boost 1.34
	* tests/Makefile.am: adapt tests to the last m4 machinery change wrt
	boost 1.34 detection.
	* tests/test-breakpoint.cc, tests/test-cpptrait.cc,
	tests/test-cpptrait.cc, tests/test-deref.cc,
	tests/test-gdbmi.cc, tests/test-local-vars-list.cc,
	tests/test-local-vars-list.cc, tests/test-unicode.cc,
	tests/test-var-list.cc: update these to use boost 1.34

2007-06-02  Dodji Seketeli <dodji@src.gnome.org>

	Detect exec monitor library in boost 1.34 onward.
	* m4/ax_boost_test_exec_monitor.m4: updated this
	to detect the exec monitor library which name has changed in
	boost version 1.34. This macro still detect the library in
	boost version < 1.34.

2007-06-02  Dodji Seketeli <dodji@src.gnome.org>

	adapt to naming changes of boost 1.34
	* m4/ax_boost_unit_test_framework.m4: detect
	libboost_unit_test_framework in the 1.34 version.
	This library's naming scheme has changed in from 1.33.x
	The MACRO still works with boost version 1.33.

2007-06-02  Dodji Seketeli <dodji@src.gnome.org>

	Revert "quick temporary commit. Must be reverted."

2007-05-31  Daniel Nylander <dnylande@src.gnome.org>


2007-05-31  Daniel Nylander <dnylande@src.gnome.org>

	Added Swedish translation.
	* sv/sv.po: Added Swedish translation.

2007-05-20  Stéphane Raimbault <stephaner@src.gnome.org>

	Updated French translation.

2007-05-20  Jonathon Jongsma <jjongsma@src.gnome.org>

	Convert ChangeLog to UTF-8

2007-05-20  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fixed some changelog issues: removed conflict markers, bad indentation

2007-05-20  Jonathon Jongsma <jjongsma@src.gnome.org>

	Variable Inspector Dialog HIG fixes

2007-05-20  Jonathon Jongsma <jjongsma@src.gnome.org>

	Clean up the breakpoint menu items.

2007-05-20  Jonathon Jongsma <jjongsma@src.gnome.org>

	separate menu items into logical groups.

2007-05-19  Dodji Seketeli <dodji@src.gnome.org>

	Fix string typos
	* src/main.c: Fix some strings typos. Patch from
	"Stéphane Raimbault" <stephane.raimbault@gmail.com>

2007-05-19  Dodji Seketeli <dodji@src.gnome.org>

	Applied patch #87217, closing bug #433332.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: applied patch
	#87217, that fixes #433332 entitled
	"witch mouse pointer to 'busy' cursor when gdb is running"
	The patch was made by Jonathon Jongsma <jjongsma@gnome.org>.

2007-05-19  Dodji Seketeli <dodji@src.gnome.org>

	quick temporary commit. Must be reverted.

2007-05-19  Dodji Seketeli <dodji@src.gnome.org>

	mv source editor from the debug perspective to uicommon
	* configure.ac,src/persp/dbgperspective/Makefile.am,
	src/uicommon/Makefile.am:
	mv src/persp/dbgperspective/nmv-source-editor.cc,h to
	src/uicommon/nmv-source-editor.cc,h

2007-05-19  Dodji Seketeli <dodji@src.gnome.org>

	Add SourceEditor::insertion_changed_signal() .
	* src/uicommon/nmv-source-editor.cc,h: Make SourceEditor emit a
	SourceEditor::insertion_changed_signal() notifying when a user clicks
	somewhere in the editor.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: changed
	the last patch to make it use the
	SourceEditor::insertion_changed_signal() event instead of doing
	lower level stuff in the perspective.

2007-05-17  Stéphane Raimbault <stephane.raimbault@gmail.com>

	Updated French translation by Robert-André Mauchin, Claude Paroz and
	* fr.po: Updated French translation by Robert-André Mauchin,
	Claude Paroz and Stéphane Raimbault.

2007-05-16  David Lodge <dlodge@src.gnome.org>

	Updated en_GB translation

2007-05-15  Jonathon Jongsma <jjongsma@src.gnome.org>

	Disable 'toggle enable breakpoint' when there's no breakpoint on the line

2007-05-12  Dodji Seketeli <dodji@src.gnome.org>

	disable symbol visibility control by default
	* configure.ac: disable symbols visibility control by default, due
	to a bug in gcc 4.1.2. See bug #410710 to track this.

2007-05-06  Jonathon Jongsma <jjongsma@src.gnome.org>

	Don't modify ACLOCAL_FLAGS in autogen.sh (bug #436226)

2007-05-04  Jonathon Jongsma <jjongsma@src.gnome.org>

	Remote Target Dialog: Use FileChooserDialog instead of Entry widget
	* src/persp/dbgperspective/glade/remotetargetdialog.glade: use only
	FileChooserButton instead of a FileChooserButton and a Gtk::Entry widget.  This
	make it more consistent with the 'execute' dialog and the 'load core' dialog
	* src/persp/dbgperspective/nmv-remote-target-dialog.cc: update due to
	changes in the glade file

2007-05-04  Jonathon Jongsma <jjongsma@src.gnome.org>

	IConfMgr: Add ability to monitor individual configuration keys
	* src/confmgr/nmv-i-conf-mgr.h: add new API: add_key_to_notify() so that we
	can 'subscribe' to be notified when individual keys are changed, not just
	whole key directories.
	* src/confmgr/nmv-gconf-mgr.cc: implement add_key_to_notify() so that when
	the key is modified, it emits the value_changed signal on IConfMgr
	* src/workbench/nmv-workbench.cc: add notification of the individual key for
	the GNOME system monospace font instead of watching the entire
	/desktop/gnome/interface directory

2007-05-02  Jonathon Jongsma <jjongsma@src.gnome.org>

	Update POTFILES.in with new, moved files

2007-05-02  Jonathon Jongsma <jjongsma@src.gnome.org>

	Use the GNOME system monospace font instead of a generic 'monospace' font.
	* src/persp/dbgperspective/glade/preferencesdialog.glade: minor re-wording
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Get the system monospace
	font from gconf and use that instead of setting it to a generic 'monospace' font
	name.
	* src/workbench/nmv-workbench.cc: In order to be able to update our font
	when the system monospace font changes, I had to also watch the gconf directory
	/desktop/gnome/interface for configuration changes.  This seems a bit ugly, but
	IConfMgr doesn't currently have any other way to do this.  Maybe we need to add
	something to IConfMgr to accomodate this, but for now I just did the
	quick-and-dirty fix.

2007-05-02  Jonathon Jongsma <jjongsma@src.gnome.org>

	Implement custom font preference for source editor (bug #431058)
	* src/persp/dbgperspective/glade/preferencesdialog.glade: added preference
	for setting a custom font for the source editor widget
	* src/persp/dbgperspective/nmv-preferences-dialog.cc: Add support for
	setting custom font
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: watch for changes to font
	settings and update source editors as necessary
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas: add
	configuration settings for custom font

2007-05-01  Dodji Seketeli <dodji@src.gnome.org>

	Add basic support of connection to gdbserver.
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	Added an output handler to handle the connection to the gdbserver.
	Added IDebugger::connected_to_server_signal() to notify when
	connected to the remote debugging server.
	This makes support of connection to gdbserver work.
	* src/persp/dbgperspective/menus/menus.xml,
	src/persp/dbgperspective/nmv-dbg-perspective.cc: added a
	"Connect to remote target" menu item. Popup a dialog to
	let the user choose the gdbserver to connect to.
	This entry adds a basic support of connection to gdbserver. woot.

2007-05-01  Dodji Seketeli <dodji@src.gnome.org>

	Added an IDebugger::attach_to_remote_target() .
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	add an IDebugger::attach_to_remote_target() entry point.

2007-05-01  Dodji Seketeli <dodji@src.gnome.org>

	Added a new remote debugging server selection dialog
	* src/persp/dbgperspective/glade/Makefile.am,
	src/persp/dbgperspective/nmv-remote-target-dialog.cc,h:
	added a new RemoteTargetDialog to select a remote debugging server
	to connect to. It is not used yet.

2007-05-01  Dodji Seketeli <dodji@src.gnome.org>

	mv source editor from the debug perspective to uicommon
	* configure.ac,src/persp/dbgperspective/Makefile.am,
	src/uicommon/Makefile.am:
	mv src/persp/dbgperspective/nmv-source-editor.cc,h to
	src/uicommon/nmv-source-editor.cc,h

2007-04-29  Jonathon Jongsma <jjongsma@src.gnome.org>

	Use the 'text' color from the theme, not the 'fg' color. In some themes these colors apparently are different and the text can become difficult to read.

2007-04-29  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fixed a missing closing parentheses in the french translation

2007-04-26  Jonathon Jongsma <jjongsma@src.gnome.org>

	Don't specify the 'open' stock icon for the Open files dialog so that it uses the nemiver application icon instead.  Otherwise it's not obvious which application the dialog belongs to if you just look at the taskbar.

2007-04-26  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fix for Bug #431073, to expand the file treeview to a sane default location.
	* src/persp/dbgperspective/nmv-file-list.cc,h:
	* src/persp/dbgperspective/nmv-open-file-dialog.cc,h: add a construction
	parameter which specifies the starting location for the OpenFileDialog.  The
	list of files will be expanded automatically so that the starting location is
	visible by default when the dialog is opened.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: pass the path of the
	current source file as the starting path for the OpenFileDialog

2007-04-25  Jonathon Jongsma <jjongsma@src.gnome.org>

	Allow multiple breakpoints to be deleted at the same time.

2007-04-22  Dodji Seketeli <dodji@src.gnome.org>

	Initial ChooseOverloadsDialog dialog box.
	* src/persp/dbgperspective/glade/setbreakpoint.glade:
	rename this into setbreakpointdialog.glade because in nemiver,
	glade files have the same name as their topmost widget name.
	* src/persp/dbgperspective/Makefile.am:
	* src/persp/dbgperspective/glade/Makefile.am:
	* src/persp/dbgperspective/glade/Makefile.am:
	* src/persp/dbgperspective/glade/chooseoverloadsdialog.glade:
	* src/persp/dbgperspective/nmv-choose-overloads-dialog.cc,h:
	Added a new ChooseOverloadsDialog to let the user choose
	among several overloaded funtions.

2007-04-22  Dodji Seketeli <dodji@src.gnome.org>

	fix typo

2007-04-22  Dodji Seketeli <dodji@src.gnome.org>

	Cleanups
	* src/persp/dbgperspective/nmv-dialog.h:
	cosmetic cleanup
	* src/persp/dbgperspective/nmv-find-text-dialog.cc: cosmetic
	cleanups. Lines are sometimes too long.

2007-04-22  Dodji Seketeli <dodji@src.gnome.org>

	Let the user choose between overloaded functions when applicable
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::choose_function_overload()):
	Use the new ChooserOverloadsDialog dialog to let the user
	choose among function overloads, when applicable.
	This is used when the user sets a breakpoint by specifying the
	function name, and it appears that name has overloads.
	* tests/fooprog.cc: added function overloads here so that
	we can test the new overloaded function choice dialog.

2007-04-22  Dodji Seketeli <dodji@src.gnome.org>

	Fix overloads choice prompts parsing
	* src/dbgengine/nmv-gdbmi-parser.cc:
	(parse_overloads_choice_prompt): fix bugs in this to correctly
	parse overloads choice prompts.
	* tests/test-gdbmi.cc: added a regression test for overloads choice
	prompt parsing.

2007-04-22  Dodji Seketeli <dodji@src.gnome.org>

	Support of choosing several function overloads at once .
	* src/dbgengine/nmv-gdb-engine.cc:
	added IDebugger::choose_overloaded_functions() to choose
	several function overloads at once.

2007-04-22  Dodji Seketeli <dodji@src.gnome.org>

	Initial ChooseOverloadsDialog dialog box
	* src/persp/dbgperspective/glade/setbreakpoint.glade:
	rename this into setbreakpointdialog.glade because in nemiver,
	glade files have the same name as their topmost widget name.
	* src/persp/dbgperspective/Makefile.am:
	* src/persp/dbgperspective/glade/Makefile.am:
	* src/persp/dbgperspective/glade/Makefile.am:
	* src/persp/dbgperspective/glade/chooseoverloadsdialog.glade:
	* src/persp/dbgperspective/nmv-choose-overloads-dialog.cc,h:
	Added a new ChooseOverloadsDialog to let the user choose
	among several overloaded funtions.

2007-04-21  Dodji Seketeli <dodji@src.gnome.org>


2007-04-21  Jonathon Jongsma <jjongsma@src.gnome.org>

	data/icons/Makefile.am: add 24x24 directory to SUBDIRS

2007-04-21  Dodji Seketeli <dodji@src.gnome.org>

	remove a debugging trace
	* src/persp/dbgperspective/nmv-source-editor.cc:
	(SourceEditor::current_line ()): remove a debugging log.

2007-04-21  Dodji Seketeli <dodji@src.gnome.org>

	Fix an assert that was getting raised
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	(on_breakpoint_go_to_source_action()): don't forget
	that the treeview supports multiselection now.

2007-04-21  Dodji Seketeli <dodji@src.gnome.org>

	Fix a gnome-vfs crash happening when a monitored file is changed.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(on_file_content_changed()): make this handle the dialog
	to let the user decide to load the file when its content changes.
	(file_monitor_cb()): do not launch a dialog in here as it causes
	gnome-vfs to crash. Rather schedule the dialog showing in and idle
	the idle function on_file_content_changed().

2007-04-21  Dodji Seketeli <dodji@src.gnome.org>

	data/nemiver.desktop.in: refer to the icon without the ending .png

2007-04-21  Dodji Seketeli <dodji@src.gnome.org>

	data/nemiver.desktop.in: refer to the icon without the ending .png

2007-04-19  Jonathon Jongsma <jjongsma@src.gnome.org>

	Forgot to update the changelog

2007-04-19  Jonathon Jongsma <jjongsma@src.gnome.org>

	A few fixes for the new icons

2007-04-19  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add new icons from Andreas Nilsson

2007-04-18  Dodji Seketeli <dodji@src.gnome.org>

	clear in memory session data before running a new session
	* src/persp/dbgperspective/nmv-dbg-perspective.cc
	(DBGPerspective::on_debugger_breakpoints_set_signal): re indented
	this a bit because lines are too long.
	(DBGPerspective::clear_session_data): added this to clear
	session data stuff we keep in memory like env variables,
	search paths, breakpoints and source dirs.
	(DBGPerspective::on_going_to_run_target_signal): clear session data
	befoore running a target. This is needed because otherwise,
	data from the previous session can be saved in the current one,
	if the two sessions have been executed without quitting nemiver.

2007-04-18  Dodji Seketeli <dodji@src.gnome.org>

	Allow deleting of multiple breakpoints in once, in the breakpoints view
	* src/persp/dbgperspective/nmv-breakpoints-view.cc: allow selection
	of multiple rows to delete multiple breakpoints at once.

2007-04-18  Dodji Seketeli <dodji@src.gnome.org>

	Clear breakpoints from the current session before starting a new one.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	(DBGPerspective::execute_program()): before loading a new
	program, delete the breakpoints we might have set while
	debugging the previous binary. We are obliged to do that because
	the gdbmi command -file-exec-and-symbols is buggy. It tries
	to set breakpoints coming from the previous debugging session.
	So this is the reason why we when doing two debugging sessions
	without shutting down nemiver (with the same gdb process then),
	we see (disabled) breakpoints of the first session
	inside the second session.

2007-04-17  Jonathon Jongsma <jjongsma@src.gnome.org>

	Set Breakpoint Dialog: fix text entry sensitivity at startup (bug #430343)

2007-04-16  Dodji Seketeli <dodji@src.gnome.org>

	Initial support of function overloads choice prompts
	* src/dbgengine/nmv-i-debugger.h: added
	IDebugger::got_overloads_choice_signal() to get notified when
	gdb sends us a prompt asking to choose between several function
	overloads. This happens after the user asked to set a breakpoint
	into function foo(), and when foo() has several overloads.
	Added IDebugger::choose_function_overload() to choose a given
	function overload, but its number. Overload numbers are given
	by IDebugger::got_overloads_choice_signal().
	* src/dbgengine/nmv-gdb-engine.cc: ditto. Implemented the new
	entry points of IDebugger.
	(GDBEngine::Priv::on_gdb_stdout_signal()): fixed long standing
	bug in here.
	(GDBEngine::Priv::issue_command()): changed the prototype
	of this to be able to directly send a command to GDB without
	doing flow control. This is useful for instance when replying
	to a gdb prompt. We must silently and directly send the prompt
	reply and behave like if that prompt reply has never existed.
	(GDBEngine::Priv::on_gdb_stdout_has_data_signal): expect having
	answers from gdb that are not only gdbmi outputs, but that are
	prompts, for instance.
	(OnBreakPointHandler::do_handle()): detect if gdb sent us a prompt,
	parse it and emit IDebugger::got_overloads_choice_signal().
	* src/dbgengine/nmv-gdbmi-parser.cc,h:
	(parse_stream_record()): some stream records - debugger console
	streams - can be prompts, i.e, followed by the character '>'
	and white spaces.
	(parse_overloads_choice_prompt()): added this to actually parse
	the overloads choice prompt.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Whenever we are to choose between overloaded function, choose all of
	them from now. I will hack up a choice dialog later.
	* tests/test-gdbmi.cc: added test case for overload prompt parsing.

2007-04-16  Dodji Seketeli <dodji@src.gnome.org>

	Better handling of setting a breakpoint by function name
	* src/persp/dbgperspective/glade/setbreakpoint.glade:
	set the okay button as the default one.
	* src/persp/dbgperspective/nmv-set-breakpoint-dialog.cc:
	By default, activates the "function name" mode. Make the
	function name entry activate the default button -
	the ok button of the dialog - when the user hits Enter.
	Now, the user can do ctrl-b, followed by the name of a function,
	followed by the enter key, to set a breakpoint in a function.
	I feel this more convenient as setting a breakpoint in a function
	is the what developers do the most, when they set breakpoints.

2007-04-16  Dodji Seketeli <dodji@src.gnome.org>

	Better behaviour of breakpoint view when adding a new breakpoint
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	(BreakpointsView::Priv::set_breakpoints()): do not remove
	breakpoints that are not in the list of breakpoints returned
	by IDebugger. IDebugger does not always return the list of
	*all* breakpoints set.
	* src/persp/dbgperspective/nmv-i-debugger.h: added some comments
	to IDebugger::breakpoints_set_signal().

2007-04-16  Dodji Seketeli <dodji@src.gnome.org>

	Fix a random hang in stack args parsing
	* src/dbgengine/nmv-gdbmi-parser.cc: added
	a CHECK_END_BREAK() macro useful in debugging conditions.
	(parse_stack_arguments()): A parameter value string can contain
	a '{' character and yet not carry an unnamed variable. In that
	case, don't bail out. Just keep that parameter value as it is.
	This fixes a hang that was appearing randomly.
	* tests/test-gdbmi.cc: added a non regression test to catch this.

2007-04-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	SetBreakpointDialog: Add ability to set a breakpoint by function name in addition to source file and line number.  There seems to be some errors in the gdbmi parsing that cause failures when trying to set breakpoints on certain function names.  This requires more digging.

2007-04-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Set breakpoint dialog: Add a little bit of error-handling for unreasonable line numbers (i.e. don't try to set a breakpoint if the atoi call has been clamped to INT_MIN or INT_MAX or if it couldn't find an integer value and returned 0.

2007-04-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	Beginning of an implementation of a dialog for setting arbitrary breakpoints.

2007-04-07  Dodji Seketeli <dodji@src.gnome.org>

	Added a --env command line option
	* src/main.cc: added a --env option that can be used as in:
	nemiver --env "foo=bar foobar=baz" prog-to-debug

2007-04-06  Dodji Seketeli <dodji@src.gnome.org>

	Unbreak breakpoint enabling/disabling via the (contextual) menu
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	gdb does not support breakpoint enabling/disabling
	when breakpoints are addressed by file:number. You
	need to address breakpoints by number.
	So I removed the methods that were claiming doing
	file:number addressing. There were confusing at best.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	toggle_enable_breakpoint into on_toggle_breakpoint_enabled.
	DBGPerspective::toggle_breakpoint_enabled(): address
	breakpoints by their number otherwise gdb does not understand.
	This entry should unfuck breakpoint enabling/disabling
	via the contextual menu.

2007-04-06  Dodji Seketeli <dodji@src.gnome.org>

	Better scrolling behaviour at file reload, don't delete markers twice
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Modify DBGPerspective::set_where() so that we can choose
	to scroll to the position of the where marker or not.
	DBGPerspective::reload_file(): before reloading the file,
	remind the current line/col to reset after reloading.
	After reloading, scroll to the current line, if the user
	precedently selected a line, otherwise scroll to the where marker
	* src/persp/dbgperspective/nmv-source-editor.cc:
	SourceEditor::Priv::on_signal_insertion_moved(): properly set the
	current line/col, dammit.
	SourceEditor::move_where_marker_to_line(): allow this function to
	scroll (to the where marker) *or not*.
	SourceEditor::unset_where_marker(): guard against deleting marker
	twice.
	SourceEditor::set_visual_breakpoint_at_line(): ditto

2007-04-04  Dodji Seketeli <dodji@src.gnome.org>

	Add toggle enable breakpoint to menus and stop to the toolbar.
	* src/persp/dbgperspective/menus/menus.xml: add the
	ToggleEnableBreakpointMenuItem
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	append "toggle enable menu" action to the contextual menu
	and the debugging menu.
	This entry fixes bug #424270.
	* src/persp/dbgperspective/menus/toolbar.xml: added
	StopMenuItem to the toolbar.

2007-04-04  Dodji Seketeli <dodji@src.gnome.org>

	Properly reset breakpoints and current line markers after file reload
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBPerspective::apply_decorations_to_text(): add
	this function to add breakpoints and current line
	pointer to a source editor that got freshly reloaded
	DBGPerspective::reload_file (const UString &a_path):
	Call the new DBPerspective::apply_decorations_to_text()
	function to apply text decoration.
	* src/persp/dbgperspective/nmv-source-editor.cc:
	SourceEditor::set_visual_breakpoint_at_line (int a_line, bool enabled):
	When marker were set a line we want to set a new one, delete it
	and reset it. Otherwise, when we clear a source buffer, it markers
	stay there but are not visible. To make them visible, the only way
	I have found was to delete them and set them again.
	This entry makes the reloading of a source file works so what decently.
	It now reset the text decorations (breakpoints and current line
	markers)

2007-04-04  Dodji Seketeli <dodji@src.gnome.org>

	Reuse the same source buffer when reloading a file
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::load_file(): don' t necessarily create
	a new buffer all the time. Give us a change to reuse one.
	* DBGPerspective::reload_file(): reuse the source buffer we
	use already.

2007-04-04  Dodji Seketeli <dodji@src.gnome.org>

	Fix some errors that were dumping messages at closing time
	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::on_gdb_stdout_has_data_signal():
	GDBEngine::Priv::on_gdb_stderr_has_data_signal(): log
	channel disconnection in the default domain.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::close_file(): fix a typo in here. Unmonitor
	the closed file, instead of trying to monitor it again.

2007-04-04  Dodji Seketeli <dodji@src.gnome.org>

	First implementation of "reload source file"
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: added
	a menu item + contextual menu to reload a file.
	Monitor the file changes using gnome-vfs to propose
	a reload to the user.
	The reload is very basic atm as it looses buffer decorations
	like breakpoint and current line markers etc.
	DBGPerspective::close_opened_files (): fix a crasher here.
	typically, don't hold an iterator that is being invalidated.
	* src/persp/dbgperspective/menus/menus.xml: added menu items in here.

2007-04-04  Dodji Seketeli <dodji@src.gnome.org>

	better utf8 handling in filesystem paths
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	cleanup: use Glib::filename_to_utf8() instead of
	Glib::locale_to_utf8() when applicable.

2007-04-01  Dodji Seketeli <dodji@src.gnome.org>

	Added more logs the local variable inspector related workflows
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	LocalVarsInpector::Priv::on_variable_value_signal():
	make sure the variable is not nil. Log its name.

2007-03-30  Dodji Seketeli <dodji@src.gnome.org>

	Forgot to push ChangeLog into last commit

2007-03-30  Dodji Seketeli <dodji@src.gnome.org>

	Remove nemiver.pot from version control
	* po/nemiver.pot: remove this generated file from version control

2007-03-29  Dodji Seketeli <dodji@src.gnome.org>

	Fix mismatched free/delete[] errors.
	* src/common/nmv-safe-ptr-utils.h: add safeptrs for
	arrays of gchar and gunichars allocated with the new() operator,
	and so de-allocated with the delete operator. Call them
	CharSafePtr and UnicharSafePtr.
	* src/common/nmv-ustring.cc: UString::split(): use CharSafePtr
	to remove mismatched free/delete errors. These were pratically
	harmless, but there are still bugs. And they pollute valgrind
	reports.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::open_file(): ditto.

2007-03-29  Dodji Seketeli <dodji@src.gnome.org>

	Fix bug #424069: Crashed
	* src/persp/dbgperspective/nmv-breakpoints-view.cc:
	BreakpointsView::Priv::set_breakpoints(): when we erase
	an element from a list, the iterator pointing at the erased
	element becomes invalid. We can not use it anymore.
	BreakpointsView::Priv::on_debugger_breakpoint_deleted_signal():
	ditto.
	This entry should fix bug #424069

2007-03-29  Dodji Seketeli <dodji@src.gnome.org>

	Fix bug #423846: GDBMI parsing fails in nemiver::parse_member_variable()
	* src/dbgengine/nmv-gdbmi-parser.cc:
	parse_member_variable(): when the last component of
	the member variable (before the ending '}') is name,
	allow the ending '}' to be the last character of the input
	stream. This is likely to fix bug #423846.
	* tests/test-gdbmi.cc: added a test case/non regrestion test for
	that bug.

2007-03-28  Hubert Figuiere <hub@src.gnome.org>

	remove the ^M that break the build

2007-03-27  Dodji Seketeli <dodji@src.gnome.org>

	Fixed typos for better application menu appearance
	* sdata/nemiver.desktop.in: fix a typo to make the
	nemiver menu icon show up
	* po/fr.po: fixed a typo.

2007-03-25  Dodji Seketeli <dodji@src.gnome.org>

	fix a crash in variable inspector (#422495)
	* src/persp/dbgperspective/nmv-var-inspector.cc:
	VarInspector::Priv::set_variable(): request variable type
	using a private cookie.
	VarInspector::Priv::set_variable_type(): make this return
	a success status.
	VarInspector::Priv::print_pointed_variable_value():
	request pointed variable value using a private cookie.
	VarInspector::Priv::on_debugger_variable_value_signal():
	only consider answers that have our private cookie.
	VarInspector::Priv::on_variable_type_signal():
	only consider answers that have our private cookie.
	get out gracefully if we could not actually set the variable
	type.
	VarInspector::Priv::on_pointed_variable_value_signal():
	request variable type using a private cookie.
	VarInspector::inspect_variable(): request variable value
	using a private cookie.

2007-03-24  Dodji Seketeli <dodji@src.gnome.org>

	Fix unicode characters handling in UString::split()
	* src/common/nmv-ustring.cc: UString::split():  make this
	work when characters which code > ascii 127 are present
	in the string.
	* src/dbgengine/nmv-gdbmi-parser.cc:
	QuickUStringLess::operator()(): use strncmp() and not strcmp().
	You never know.

2007-03-21  Dodji Seketeli <dodji@src.gnome.org>

	Fix bugs linked with my previous #414334 fix.
	* src/dbgengine/nmv-gdbmi-parser.cc: fixed a couple of bugs in here.
	First, when skipping blank spaces, don't use SKIP_WS, but rather
	SKIP_BLANK, as the former also skips newlines. Problems is that
	newline is the end marker for result records.
	Recode parse_attribute() to make it use the gdbmi AST.
	This makes the code shorter, and more bugfree as it handles
	strings correctly and supports unicode. Make it also more
	robust w.r.t parsing starting condition.
	* tests/test-gdbmi.cc: test case for parse_c_string(),
	parse_attribute() and parse_stopped_async_output() added,
	as these were the functions that were falling.
	This entry fixes bugs that appeared because I fixed
	#414334.

2007-03-21  Dodji Seketeli <dodji@src.gnome.org>

	Fixed a typo.

2007-03-21  Dodji Seketeli <dodji@src.gnome.org>

	Support parsing octal escape sequences in c-string. This fixes #414334
	* src/dbgengine/nmv-gdbmi-parser.cc:
	make parse_c_string_body() parse escaped octal sequences of bytes.
	This makes the resulting string be a real unicode string now.
	This helps unescaping some file paths expressed in an escaped
	form in the debugging info. All the generic GDBMI datastructure
	based parsing functions directly benefit from this change.
	parse_attributes() (written before we had generic GDBMI parsing
	capabilities) didn't benefit it directly because it was parsing
	strings directly, without using parse_c_string.
	I did add a hack there, where the resulting string
	as parsed by parse_attribute() is reparsed again using
	parse_c_string(), so that it gets a chance to unsescape the octal
	escape sequences it might contain. This should fix bug
	#414334.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Replace a bunch of Glib::locale_from_utf8() into
	Glib::filename_from_utf8() when converting paths to
	utf8. This should be the proper way to do it.
	* tests/test-gdbmi.cc: added test cases with strings containing
	octal escape sequences. This should catch regressions on related
	to bug #414334.

2007-03-18  Dodji Seketeli <dodji@src.gnome.org>

	Make IVarList::update_state() (start to) work
	* src/dbgengine/nmv-gdb-engine.cc, nmv-i-debugger.h:
	Added IDebugger::variable_value_set_signal(),
	and IDebugger::get_variable_value(). To ease variable
	value updating workflows.
	* src/dbgengine/nmv-i-var-list.h, nmv-var-list.cc:
	Fix value and type updating workflows. Now it seems
	variable values and type are correctly updated when doing
	IVarList::update_state(). woot.
	* test/test-local-vars-list.cc: wrote this to debug
	variable state udpating.

2007-03-17  Dodji Seketeli <dodji@src.gnome.org>

	Make IDebugger populate the type definition of a variable
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	added IDebugger::get_variable_type(), that takes an
	VariableSafePtr in parameter.
	IDebugger::variable_type_set_signal() returns that
	very same variable, with its type set.
	For the record, this is complementary
	to IDebugger::print_variable_type(),
	that doesn't take an VariableSafePtr in parameter,
	but rather a string representing a variable name.
	Its matching IDebugger::variable_type_signal() slot
	returns a string representing the type.
	* tests/test-deref.cc: updated this to test
	IDebugger::get_variable_type(). Now, we only dereference
	a variable when its type is a pointer.

2007-03-17  Dodji Seketeli <dodji@src.gnome.org>

	Make IDebugger::dereference_variable() work
	* src/dbgengine/nmv-gdb-engine.cc: make
	IDebugger::dereference_variable() work.
	* tests/test-deref.cc: write this to debug the
	IDebugger::dereference_variable()
	* tests/test-breakpoint.cc: a bit of cleanup

2007-03-16  Dodji Seketeli <dodji@src.gnome.org>

	Unbreak compilation of tests
	* tests/Makefile.am: add test-breakpoint.c to the list of auto tests

2007-03-16  Dodji Seketeli <dodji@src.gnome.org>

	Support string embedded in member variables values.
	* src/dbgengine/nmv-gdbmi-parser.cc,h:
	parse_member_variable(): make this work for cases where
	an escaped string is embedded in the value being parsed.
	To parse that string, use the new parse_embedded_c_string().
	The string is not yet "interpreted" yet, so the result
	of the parsing is not really readable in the resulting
	member variable. But at least, the parsing does not fail
	anymore. Failing of this used to cause a freeze of
	IDebugger in the state IDebugger::RUNNING
	(when entering a new function) for some compound variables
	that have embedded espaced strings.
	* tests/test-gdbmi.cc b/tests/test-gdbmi.cc:update this
	to reflect the new member variable with embedded string
	things.

2007-03-16  Dodji Seketeli <dodji@src.gnome.org>

	Unbreak command line handling
	* src/main.cc: unbreak command line handling due to
	the libgnome init that was done before our parsing the command
	line.

2007-03-16  Dodji Seketeli <dodji@src.gnome.org>

	unbreak IDebugger/gdb flow control, switch tests to boost::test
	* src/dbgengine/nmv-gdb-engine.cc: fixed numerous bugs in here.
	Better control of the flow on the wire between us and gdb
	to avoir overflow it. Overflowing was causing some subtle errors
	like some command result being ignored by us.
	Added better detection and processing of gdb results that
	come in group, i.e more than a result at a time.
	* src/dbgengine/nmv-var-list.cc: a bit of cleanup
	* tests/Makefile.am: update test deps. Use boost::test when applicable
	* tests/test-breakpoint.cc: make this use boost::test
	* tests/test-cpptrait.cc: ditto
	* tests/test-gdbmi.cc: ditto. Added more test cases.
	* tests/test-unicode.cc: ditto.
	* tests/test-var-list.cc: ditto

2007-03-16  Dodji Seketeli <dodji@src.gnome.org>


2007-03-16  Dodji Seketeli <dodji@src.gnome.org>

	first attempt of a better variable dereferencing support at IDebugger level
	* src/dbgengine/nmv-dbg-common.h: we can now store a
	IDebugger::Variable into a Command
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	Added the IDebugger::dereference_variable() method to deref
	a variable. Not tested yet though. Bugfixes will follow.

2007-03-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add support for remembering previous search terms in the combobox
	* src/persp/dbgperspective/nmv-find-text-dialog.cc: Add support for
	remembering previous search terms in the combobox drop-down.  Search terms
	are added when a search is performed, but only if the term is not already in
	the list.

2007-03-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	Make it so that when the 'find' dialog is re-shown, it automatically
	* src/persp/dbgperspective/nmv-find-text-dialog.cc: Make it so that when the
	'find' dialog is re-shown, it automatically selects the current search term
	and puts the focus in the search entry box.  Previously, if you had clicked
	the close button and then opened the 'find' dialog again, pressing enter
	would have closed the dialog (since the 'close' button was still focused)
	instead of finding the next match.

2007-03-10  Jonathon Jongsma <jjongsma@src.gnome.org>

	indicate that tests must be run after installing nemiver make unit tests
	* README: indicate that tests must be run after installing nemiver
	* tests/Makefile.am: make unit tests run in `make check`

2007-03-10  Dodji Seketeli <dodji@src.gnome.org>

	Make IDebugger return a language trait
	* src/dbgengine/nmv-gdb-engine.cc, nmv-i-debugger.h:
	added and IDebugger::get_language_trait() to have information
	and behaviour related to the language of the current target.
	Today, this returns a c++ trait only. But in the future,
	we will actually detect the language of the target and
	return a trait really matching the language of the target.
	Take this as a bootstrap of the story of the multiple language
	language support.
	* tests/test-cpptrait.cc: added a small test for
	IDebugger::get_language_trait()

2007-03-10  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 10 Mar 2007 00:58:18 +0100 Dodji Seketeli
	* src/dbgengine/cpptrait.conf.in: added this file
	* src/dbgengine/nmv-cpp-trait.cc,nmv-i-lang-trait.h: starting
	to think about dealing about language specifics with a ILangTrait
	interface. The only language supported is cpp atm.
	* tests/test-cpptrait.cc: added some tests for the ILangTrait iface

2007-03-07  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 07 Mar 2007 23:44:46 +0100 Dodji Seketeli
	* configure.ac: really check cppunit optionally. Not by default
	* tests/Makefile.am: only compile test-unicode when cppunit support
	is present

2007-03-06  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 06 Mar 2007 22:30:20 +0100 Dodji Seketeli
	*  src/common/nmv-ustring.h,cc: declare a destructor for WString,
	otherwise weird things happen
	* tests/test-templated-var.cc: moved this into templated-var.cc
	* tests/test-unicode.cc: port this over cppunit

2007-03-04  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 04 Mar 2007 21:23:43 +0100 Dodji Seketeli
	* src/dbgengine/Makefile.am: added missing link time deps to the
	libgdmiparser.la
	* src/dbgengine/nmv-gdbmi-parser.cc:
	parse_stack_arguments(): when an argument is compound, gdb puts
	its members into the argument value as serialized into a string.
	To get the parameter members, we now parse the argument's value to
	to deserialise the members that might have been encoded there.
	* tests/test-gdbmi.cc: added this to test gdbmi parsing functions.
	This is based on cppunit. It's the first of a long serie of non
	regression tests to come. I will need to call them automatically
	from the makefile via a 'test' target.
	* configure.ac: bumped version number to 0.4 and added cppunit
	dependency, turned off by default, but added automatically when
	the variable NEMIVER_DEVEL=on is set before configure.

2007-02-27  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 27 Feb 2007 22:10:35 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdbmi-parser.h : added this new file
	to hold the gdbmi parser declarations and definitions.
	* src/dbgengine/nmv-dbg-common.[cc|h]: put here stuff that
	would be common to different implementations of IDebugger.
	e.g.: Command, Output, CommandAndOutput, etc.
	* src/dbgengine/nmv-gdb-engine.cc: rip the gdbmi parsing code
	of from here and put it in nmv-gdbmi-parser.h/.cc
	* src/dbgengine/nmv-var-list.cc: debugged the
	IVarList::find_variable_from_qname() code a bit. I still
	have to look into some variable parsing code problems.
	* tests/test-var-list.cc: more on the varlist test. There are
	still some issues because I the lookup of fully qualified variable
	names fails, especially when the fqvn contains a dot, e.g:
	var.member. Still working on it.

2007-02-20  Jonathon Jongsma <jjongsma@src.gnome.org>

	Fixed a tiny typo in the user manual

2007-02-16  Jonathon Jongsma <jjongsma@src.gnome.org>

	Change a bunch of logging statements to use LOG_FUNCTION_SCOPE_NORMAL_DD instead of just LOG_FUNCTION_SCOPE so that it doesn't log to the terminal by default even with no logging enabled

2007-02-14  Jonathon Jongsma <jjongsma@src.gnome.org>

	Replace Goupil with Nemiver in a lot of header license blurbs

2007-02-13  Jonathon Jongsma <jjongsma@src.gnome.org>

	Forgot to add the actual help files...

2007-02-13  Jonathon Jongsma <jjongsma@gnome.org>

	added the beginnings of a user manual for Nemiver and hooked it up to the
	* added the beginnings of a user manual for Nemiver and hooked it up to the
	help menu.  There is now a libgnome dependency for the workbench and the
	'nemiver' executable, since we use gnome_help_display() to launch the help
	browser and this function doesn't work unless our application has been
	initialized as a gnome program with gnome_program_init()

2007-02-11  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 11 Feb 2007 23:36:36 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc, nmv-i-debugger.h: added
	a IDebugger::load_program() convenience overload function.
	Changed IDebugger::frame_params_listed_signal() into
	IDebugger::frame_arguments_listed_signal() for more coherence.
	* src/dbgengine/nmv-var-list.cc, nmv-i-var-list.h: added
	IVarList::append_variables(), IVarList::remove_variables()
	for convenience. Make IVarList::append_variable() emit
	the IVarList::variable_added_signal(). Make
	IVarList::remove_variable() emit the
	IVarList::variable_removed_signal()
	* src/common/nmv-scope-logger.h: fix the scope logger so that
	it logs in the general log domain by default
	* tests/test-var-list.cc: updated this to start testing
	variable lookup. Still have to do more testing (and debugging)
	around that feature.

2007-02-11  Jonathon Jongsma <jjongsma@src.gnome.org>

	Don't clear the list of breakpoints every time we get a 'breakpoints-set'
	* src/persp/dbgperspective/nmv-breakpoints-view.cc: Don't clear the list of
	breakpoints every time we get a 'breakpoints-set' signal.  Instead, search
	through the list of breakpoints and update breakpoints that already exist,
	add breakpoints that are new, and delete others.  This makes it so that when
	disabling a breakpoint, the row doesn't get briefly selected and then
	de-selected, which is rather annoying. This also fixes another
	long-standing, but slightly less annoying thing: when you set a new
	breakpoint, the selected row in the breakpoints view would get de-selected.

2007-02-11  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 11 Feb 2007 17:59:51 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::close_opened_files(): prevent this function to
	to loop for ever.
	DBGPerspective::unset_where(): prevent a crash here
	DBGPerspective::append_source_editor(): prevent this function
	to assert and get out in the middle of the internal data update.
	This would live the perspective in a non coherent state.

2007-02-08  Jonathon Jongsma <jjongsma@src.gnome.org>

	add text entry box for filtering the list of processes filter the list of
	* src/persp/dbgperspective/glade/proclistdialog.glade: add text entry box
	for filtering the list of processes
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc: filter the list of
	processes when user types a search term into the dialog

2007-02-07  Jonathon Jongsma <jjongsma@src.gnome.org>

	save and restore the position of the status pane between sessions. Note
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: save and restore the
	position of the status pane between sessions.  Note that this implementation
	maintains the position of the pane from the top of the window, It does not
	maintain the height of the status window.  It might be better to maintain
	the height of the status window, but this way was simpler (i.e. I don't have
	to wait for the workbench to set its size and then subtract the height of th
	pane to calculate the position it should be set to)
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas: add a
	gconf setting for status pane location

2007-02-06  Jonathon Jongsma <jjongsma@src.gnome.org>

	if breakpoints loaded from a stored session are disabled, add the
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: if breakpoints loaded
	from a stored session are disabled, add the breakpoint with a cookie
	indicating that they need to be immediately disabled.  Then in
	on_debugger_breakpoint_set_signal, disable the appropriate breakpoint
	* src/persp/dbgperspective/nmv-sess-mgr.cc,h: save the enable/disable status
	of breakpoints in the sessions db
	* src/persp/dbgperspective/sqlscripts/sqlite/create-tables.sql: update the
	session DB to add a field for breakpoint enable/disable.  Also bumped the
	database schema version.  WARNING: this means that your existing database
	will be deleted when first run after you update to this version.

2007-02-06  Jonathon Jongsma <jjongsma@src.gnome.org>

	add ability to manually force breakpoints view to refresh its list of
	* src/persp/dbgperspective/nmv-breakpoints-view.h,cc: add ability to manually force breakpoints view to refresh its list of breakpoints * src/persp/dbgperspective/nmv-dbg-perspective.cc: force breakpoints view to refresh its breakpoints when the user clicks the "restart" button on the toolbar. This is necessary because when a program runs to completion, it clears everything in the status notebook tabs, and restarting the executable doesn't result in a 'breakpoints-set' signal being fired, so we have to force the breakpoints to be re-listed.

2007-02-06  Jonathon Jongsma <jjongsma@src.gnome.org>

	add API to enable and disable a breakpoint by breakpoint number (id). Add
	* src/dbgengine/nmv-i-debugger.h: add API to enable and disable a breakpoint by breakpoint number (id). Add signals for enabling/disabling breakpoints * src/dbgengine/nmv-gdb-engine.cc: Implement new enable/disable functionality * src/persp/dbgperspective/icons/breakpoint-disabled-marker.png, src/persp/dbgperspective/icons/Makefile.am: add disabled breakpoint icon * src/persp/dbgperspective/nmv-breakpoints-view.cc,h: refactor to keep a reference to debugger so that it can update the list of breakpoints itself instead of having the DBGPerspective set the breakpoints every time they change. Also allows the breakpoints view to send enable/disable commands to gdb easily when user clicks the checkbox. * src/persp/dbgperspective/nmv-dbg-perspective.cc,h: modify append_visual_breakpoint() to add a parameter which determines whether to add an enabled or a disabled breakpoint icon marker * src/persp/dbgperspective/nmv-source-editor.cc,h: Use the SourceMarker 'type' property to indi
	cate whether it's a disabled or an enabled
	breakpoint.  Previously, each breakpoint marker had its type equal to its
	unique name, so each had to register a marker type when it was added.  Now
	we register just two marker types in init(): "breakpoint-enabled-type" and
	"breakpoint-disabled-type" and switch between these types when somebody
	enables or disables a breakpoint.
	* This patch needs some work yet.  For instance, when you enable/disable the
	breakpoint that also has a 'where marker' on the same line, the breakpoint
	markers don't appear correctly until it gets redrawn (e.g. either the
	where-marker or the breakpoing marker will not be visible).  Also, when you
	click the checkbox to enable/disable a breakpoint, what happens is that
	breakpoint gets selected, then it sends a command to gdb to disable the
	breakpoint, eventually we get a breakpoints-set signal and remove all
	breakpoints from the view and re-add them.  So what happens is that the
	selection gets lost, which is unexpected.  Also, I haven't yet saved the
	enable/disable state to the session DB, so when a breakpoint is disabled, it
	will be enabled when you resume debugging the session next time.

2007-02-04  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 04 Feb 2007 23:36:36 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	Each query to the IDebugger can be associated to a cookie.
	Now, the cookie set by client code at query time is
	returned in the signal triggered by the query result.
	* src/dbgengine/nmv-var-list.cc, nmv-i-var-list.h:
	More work on the IVarList interface and implementation.
	Nothing works yet, but the model is shaping up.
	* tests/test-var-list.cc: started to add a playground for the
	IVarList interface
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc: propagated
	the cookie related changes done on IDebugger.
	* src/persp/dbgperspective/nmv-thread-list.cc: ditto
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: ditto
	* src/persp/dbgperspective/nmv-file-list.cc: ditto
	* src/persp/dbgperspective/nmv-call-stack.cc: ditto
	* src/persp/dbgperspective/nmv-var-inspector.cc: ditto
	* tests/test-breakpoint.cc: ditto
	* tests/test-core.cc: ditto

2007-01-31  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	use an icon list for the default window icon so that the alt-tab switcher
	* src/workbench/nmv-workbench.cc: use an icon list for the default window
	icon so that the alt-tab switcher doesn't get a scaled-up 16x16 icon, but a
	proper large icon (closes bug #401249)

2007-01-28  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 28 Jan 2007 23:54:13 +0100 Dodji Seketeli
	* tests/test-stdout.cc, test-unicode.cc: fixed compilation errors

2007-01-28  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 28 Jan 2007 15:21:54 +0100 Dodji Seketeli
	* src/uicommon/nmv-spinner.cc,h: fixed a compilation error

2007-01-27  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	mark a missed string for translation
	* src/workbench/nmv-workbench.cc: mark a missed string for translation

2007-01-27  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	new Japanese translation from Takeshi AIHANA <takeshi.aihana@gmail.com>
	* ja.po: new Japanese translation from Takeshi AIHANA <takeshi.aihana@gmail.com>

2007-01-27  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 27 Jan 2007 02:14:49 +0100 Dodji Seketeli
	* docs/dynamic-modules.txt: fixed a typo

2007-01-27  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 27 Jan 2007 01:56:54 +0100 Dodji Seketeli
	* */*: in my quest to enable client code outside of the nemiver tree
	to use the headers, I have been obliged to specify the 'common' directory
	in all #include "common/nmv-foo.h" directive used by public headers.
	This is because when deployed, headers go in
	$prefix/include/nemiver/common or $prefix/inlcude/nemiver/dynmods.
	Headers in $prefix/include/nemiver/dynmods almost always do
	#include "nmv-foo.h" with nmv-foo.h coming from
	$prefix/include/nemiver/common, leading to compilation error.
	So from now on, all files including headers comming from
	the common directory must do #include "common/nmv-foo.h".
	* docs/mainpage.txt, dynamic-modules.txt: started to describe
	the principles of the dynmod system, and writing some example code
	to illustrate my sayings. The code example should compile outside
	the nemiver source tree. Hence the change done above.
	* src/common/nmv-dynamic-module.h,cc: added some functions to
	ease the use of dynmods. That makes the doc prettier ;-)

2007-01-26  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 26 Jan 2007 17:45:19 +0100 Dodji Seketeli
	* src/main.cc: make nemiver prog arg1 arg2, work.

2007-01-26  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Attempt to make doxygen understand the NEMIVER_BEGIN/END_NAMESPACE macros
	* docs/Doxyfile.in: Attempt to make doxygen understand the
	NEMIVER_BEGIN/END_NAMESPACE macros so that the generated docs have correct
	namespaces
	* docs/Makefile.am: rebuild documentation if Doxyfile config is updated

2007-01-23  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 24 Jan 2007 00:00:04 +0100 Dodji Seketeli
	* src/dbgengine/nmv-var-list.cc: starting to think about a variable
	model. Not much for the moment.

2007-01-23  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 23 Jan 2007 18:02:34 +0100 Dodji Seketeli
	* docs/Makefile.am: quick update of the doc makefile.
	"make doc" should generate API docs in docs/reference/html

2007-01-23  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 23 Jan 2007 08:37:17 +0100 Dodji Seketeli
	* fr.po: update by Robert-André Mauchin <zebob.m@gmail.com>

2007-01-22  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 23 Jan 2007 00:35:34 +0100 Dodji Seketeli
	* lots of files in src/common/ and all the dynmods:
	Modified the dynmod API to allow a dynmod do host objects
	that implements interfaces. Clients of dynmod then query the dynmod
	to the get the interface they need to do a given job. Look
	at tests/test-breakpoint.cc to see the new dynmod API in action.
	I will add documentation on this a bit later.
	This work was much needed so that I coul start working on the
	new variables model.

2007-01-22  Dodji Seketeli <dodji@src.gnome.org>


2007-01-21  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 21 Jan 2007 17:35:51 +0100

2007-01-21  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 21 Jan 2007 14:32:52 +0100 Dodji Seketeli
	* po/POTFILES.in: update path to nemiver.desktop.in
	* NEWS: updated this for 0.3

2007-01-21  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 21 Jan 2007 10:52:49 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: GDBEngine::Priv::Priv():
	Fixed an uninitialized variable read.
	* src/uicommon/nmv-terminal.cc: Terminal::Priv::Priv():
	Fixed a small memory leak on the VTETerminal and adjustment widgets.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::open_file(): fixed an uninitialized memory read.

2007-01-17  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 17 Jan 2007 10:18:49 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: GDBEngine::Priv::set_state(): do basic
	state changement control here. It helps a bit in reducing the number
	of IDebugger::state_changed_signal() emitted. I need to profile this to
	see if the gain is significant.

2007-01-17  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Display the frame number in the call-stack widget (fixes #396767)
	* src/persp/dbgperspective/nmv-call-stack.cc: Display the frame number in
	the call-stack widget (fixes #396767)

2007-01-16  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 16 Jan 2007 21:53:55 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: added a GDBEngine::set_state()
	method and use it to set the debugger state instead of emiting the
	signal "by hand".

2007-01-15  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 15 Jan 2007 12:24:01 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-var-inspector.cc: fixed a string format
	issue. This closes #396773 .

2007-01-13  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 14 Jan 2007 00:03:10 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::bring_source_as_current(): restaure breakpoints
	on opened files (when applicable) even when the file hasn't
	been opened via "File -> open source file"

2007-01-13  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 13 Jan 2007 22:07:15 +0100 Dodji Seketeli
	*  NEWS: update this for the coming 0.3 release

2007-01-13  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 13 Jan 2007 16:53:20 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: when a new file is
	loaded, reset the visual breakpoints that migth have been
	set on that file. This is for the case when the file got opened in
	the past, but got closed. This should fix bug #384427.

2007-01-13  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 13 Jan 2007 10:43:36 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-open-file-dialog.cc: query
	IDebugger for file list only if the said IDebugger is present and
	in the IDebugger::READY state. Display the FileChooser otherwise.
	* src/persp/dbgperspective/nmv-file-list.cc,h: Don't query IDebugger
	for file list at instanciation time. Rather expose a
	FileList::update_content() to allow client code to query IDebugger
	on demand.
	This entry should fix bug #394128.

2007-01-12  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 12 Jan 2007 15:33:05 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-variables-utils.cc:
	set_a_variable_type_real():  don't let type captions be longer than
	MAX_TYPE_STRING_LENGTH, which means 15 characters as of today.
	This should fix #394485.

2007-01-12  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 12 Jan 2007 14:38:23 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: added an NMV_DONT_LD_BIND_NOW env
	variable so that we can skip the setting of the LD_BIND_NOW environment
	variable in the target environment.
	* src/common/nmv-log-stream.cc: the logging control env variable was
	nmv_log_domain. Added NMV_LOG_DOMAIN. Eventually, only the big caps
	version will remain.

2007-01-11  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add a GenericName field, and add a bit more description to the name so
	* data/nemiver.desktop.in: add a GenericName field, and add a bit more
	description to the name so that people can just look at the name and know
	that it's a debugger.  This means that the "Name" field must also now be
	translated

2007-01-11  Marko Anastasov <marko@marko.anastasov.name>

	For quicker navigation, catch the following events: return: expand row
	* src/persp/dbgperspective/nmv-file-list.cc:
	For quicker navigation, catch the following events:
	return: expand row (directory); ctrl-return: expand recursively;
	if a row has already been expanded, they will collapse it;
	double-click: expand. Also added a popup menu.
	This is implemented in the new FileListView class, which encapsulates
	all treeview code, old and new. Discussed in #394469.

2007-01-08  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 08 Jan 2007 23:02:50 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc: fix
	the inspector to make it update function members that are
	dereferenced. Update means updating the values of the dereferenced
	pointer at each stepping.
	* tests/pointer-deref.cc: update this test to add function argument
	related workflows.

2007-01-08  Jonathon Jongsma <jjongsma@src.gnome.org>

	Remove some finished features from TODO

2007-01-08  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 08 Jan 2007 09:55:59 +0100 Dodji Sekteli
	* src/workbench/nmv-workbench.cc, nmv-i-workbench.h: make
	IWorbench::shut_down() public now.
	* src/main.cc: catch ctrl-c (or kill -SIGINT) to shutdown
	gracefully .
	* src/persp/dbgperspective/nmv-variables-utils.cc,h: added
	is_qname_a_pointer_member(). heavily fixed
	break_qname_into_name_elements(). Also fixed
	get_variable_iter_from_qname() to better handle paths like
	foo->bar->baz.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc: heavily
	modified this so that members of dereferenced pointers
	get updated at each stepping. This change also allows proper
	dereferencing of pointers, no matter how nested the dereferencing
	is. This entry should fix #386594.
	* tests/pointer-deref.cc: added this to debug/test the variable
	derefing workflows.

2007-01-08  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	remove desktop rules from here move desktop rules here move the
	* Makefile.am: remove desktop rules from here
	* data/Makefile.am: move desktop rules here
	* data/nemiver.desktop.in: move the nemiver.desktop file to the data/
	directory and add the icon to the desktop file

2007-01-08  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add data subdir Add Makefiles for installing icons added icons from Steven
	* Makefile.am: add data subdir
	* configure.ac: Add Makefiles for installing icons
	* data/icons/*: added icons from Steven Brown
	* src/workbench/nmv-workbench.cc: set the 16x16 icon as the default icon for
	all nemiver windows and set a 128x128 icon as the logo in the About dialog

2007-01-07  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	added a few new files that were missing updated
	* po/POTFILES.in: added a few new files that were missing
	* po/nemiver.pot: updated

2007-01-07  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Fix up button name to match capitalization rules, add mnemonic
	* src/persp/dbgperspective/glade/varinspectordialog.glade: Fix up button
	name to match capitalization rules, add mnemonic
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc: Capitalization fixes
	* src/persp/dbgperspective/nmv-source-editor.cc: Another printf-style string
	fix.  This should close bug #386806

2007-01-06  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Replace a lot of string concatenations with printf-style strings to make
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Replace a lot of string
	concatenations with printf-style strings to make it easier for translation.
	Also marked a couple of extra strings for translation.

2007-01-06  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	change the response ID of the 'close' button to GTK_RESPONSE_CANCEL
	* src/persp/dbgperspective/glade/findtextdialog.glade: change the response
	ID of the 'close' button to GTK_RESPONSE_CANCEL instead of
	GTK_RESPONSE_CLOSE since GTK_RESPONSE_CANCEL automatically makes it so that
	pressing 'esc' closes the dialog window and we don't really use this
	response code anyway.

2007-01-06  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Don't mark a couple of strings as translatable as they're simply
	* src/persp/dbgperspective/glade/locatefiledialog.glade: Don't mark a couple
	of strings as translatable as they're simply placeholders and they'll be
	replaced in code with printf-style strings.
	* src/persp/dbgperspective/nmv-locate-file-dialog.cc: Convert a couple
	things to use the new UString::printf()-style strings so that they're more
	easily translateable.

2007-01-06  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Update the titlebar to display information about the target executable
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Update the titlebar to
	display information about the target executable when we get the target info
	signal.  Delete the titlebar info when we get the 'detached' signal
	* src/workbench/nmv-i-workbench.h: add set_title_extension() to allow the
	DBGPerspective to update the titlebar with state-specific information
	* src/workbench/nmv-workbench.cc: implement set_title_extension()

2007-01-06  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 06 Jan 2007 18:09:59 +0100 Dodji Seketeli
	* src/uicommon/Makefile.am, configure.ac: add libvte to the link
	dependancies of uicommon as the nmv-terminal.cc moved there
	recently. This should fix #392590.

2007-01-06  Marko Anastasov <marko@marko.anastasov.name>

	In open_file(): bring the first selected file to front.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	In open_file(): bring the first selected file to front.

2007-01-05  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	fixed a minor typo where the 'common' namespace was misspelled 'commmon'
	* src/workbench/nmv-i-workbench.h: fixed a minor typo where the 'common'
	namespace was misspelled 'commmon'

2007-01-04  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Add file and directory icons to the treeview of source files extracted
	* src/persp/dbgperspective/nmv-file-list.cc: Add file and directory icons to
	the treeview of source files extracted from the target executable.  I think
	this makes it much easier to scan, but it might slow it down a bit, so if it
	gets too slow to scan whether each item is a file or a directory, we might
	need to rip this back out.

2007-01-04  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	fix title of the 'open files' dialog to indicate that you can open
	* src/persp/dbgperspective/glade/openfiledialog.glade: fix title of the
	'open files' dialog to indicate that you can open multiple files at once

2007-01-03  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 03 Jan 2007 22:29:05 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-source-editor.cc:
	SourceEditor::do_search(): implement the "match-entire-word" option.

2007-01-03  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 03 Jan 2007 17:06:31 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: OnFileListHandler::do_handle(): set the
	state to IDebugger::READY.
	* src/persp/dbgperspective/nmv-open-file-dialog.cc,h: Don't make any assumption
	about the nature of FileList::get_widget(). It's a Gtk::Widget. FileList
	now emits FileList::files_selected_signal() so it's no more needed to
	cast FileList::get_widget() into a Gtk::TreeView to get a selection.
	Also, listen to the new FileList::file_activated_signal() to react to
	the user double clicking on file, or selecting it and hitting "Enter".
	* src/persp/dbgperspective/nmv-file-list.cc,h: added FileList::files_selected_signal()
	to notify file selection. Added FileList::file_activated_signal() to notify
	when the user double clicks or selects a file and types "Enter".
	Changed list<UString> FileList::get_filenames() into
	void FileList::get_filenames(list<UString> &) so that we have a chance to
	avoid copying the list. Propagated this change to all the users of this
	function.

2007-01-03  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 03 Jan 2007 11:57:26 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: GDBEngine::load_program() and
	GDBEngine::attach_to_target(): set the LD_BIND_NOW env variable to
	something. This prevents gdb from being very slow when stepping into a
	function that is in another dll than the current one.

2007-01-03  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Fix unique-ification of the file list by only copying the unique files
	* src/dbgengine/nmv-gdb-engine.cc: Fix unique-ification of the file list by
	only copying the unique files into the output parameter (previously,
	non-unique elements were left at the end of the list)
	* src/persp/dbgperspective/nmv-file-list.cc: change the list of files from a
	ListStore to a TreeStore and put files into an expandable folder heirarchy
	to make it easier to find the interesting files.
	* src/persp/dbgperspective/nmv-open-file-dialog.cc: validate all selected
	files are open-able before enabling the OK button, also set a shadow on the
	scrolled window

2007-01-01  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Reorganization of the source file list widget. It was previously in a
	* src/persp/dbgperspective/Makefile.am: add nmv-open-file-dialog.h,cc
	* src/persp/dbgperspective/glade/Makefile.am: add openfiledialog.glade
	* src/persp/dbgperspective/glade/openfiledialog.glade: add new dialog for
	opening source files either from a list determined by gdb or from the
	filesystem.
	* src/persp/dbgperspective/menus/Makefile.am: remove filelistpopup.xml
	* src/persp/dbgperspective/menus/filelistpopup.xml: deleted -- no need for a
	context menu now that the file list widget is in a dialog.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Use the new
	OpenFileDialog to select a source file to open instead of using the standard
	Gtk::FileChooserDialog.  This allows the user to select either from a list
	of source files that make up the executable or select from the filesystem
	manually
	* src/persp/dbgperspective/nmv-file-list.cc: update to fit the new use case
	better.
	* src/persp/dbgperspective/nmv-file-list.h: add a new get_filenames()
	function and simplify the constructor since we don't need references to the
	workbench or perspective anymore since there's no context menu for the
	widget.
	* src/persp/dbgperspective/nmv-open-file-dialog.cc,h: New dialog for opening
	source files that lets you choose from the filesystem or from a list of
	files that make up the target executable

2007-01-01  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 01 Jan 2007 21:21:04 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::parse_file_list(): remove duplicated files from the
	list.
	* src/persp/dbgperspective/nmv-run-program-dialog.cc: show hidden
	directories in the program file chooser.
	* src/persp/dbgperspective/nmv-source-editor.cc: better detection
	of variables in the "hover-on-variable" workflow.
	* src/common/nmv-safe-ptr.h: cleanup some naming here.
	* src/common/nmv-ustring.h,c: added a WString type for wide char
	strings. This is basically a std::basic_char<gunichar>.
	Added some conversion functions from UString to WString and vis
	versa.
	* tests/test-unicode.cc: added a test case for the new WString type
	and WString <-> UString conversion functions.

2007-01-01  Bob Mauchin <zebob.m gmail.com>

	fix two minor string problems. Fixes #389175
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: fix two minor string
	problems.  Fixes #389175

2007-01-01  ZeBob <zebob.m gmail.com>

	Minor rewording of 'copy call stack' description. Fixes #389177
	* src/persp/dbgperspective/nmv-call-stack.cc: Minor rewording of 'copy call
	stack' description.  Fixes #389177

2007-01-01  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add functionality for listing source files that make up the current
	* src/dbgengine/nmv-gdb-engine.cc: add functionality for listing source
	files that make up the current executable and optimize some things to use
	the c_str() buffer instead of using UString directly to reduce the utf8
	processing costs
	* src/dbgengine/nmv-i-debugger.h: Add list_files() and file_listed_signal()
	interfaces to the IDebugger interface.
	* src/persp/dbgperspective/Makefile.am: add new files for file list widget
	* src/persp/dbgperspective/menus/Makefile.am: add new file list menu source
	* src/persp/dbgperspective/menus/filelistpopup.xml: add right-click context
	menu for the file list widget
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Set up a source file list
	in the status notebook for now.  Eventually we should make this into a
	dialog window or something different, but for now get something usable.
	* src/persp/dbgperspective/nmv-file-list.[cc,h]: define a new file list
	widget that can be used in the status notebook of the debugger perspective

2006-12-30  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 30 Dec 2006 19:38:36 +0100 Dodji Seketeli
	* src/common/nmv-log-stream.cc,h: performance hack.
	don't use UString as a map key when it's
	not really necessary. The domains map was the
	offender spotted by sysprof.

2006-12-30  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	A few HIG-related improvements to the new find dialog (spacing, etc), and
	* src/persp/dbgperspective/glade/findtextdialog.glade: A few HIG-related
	improvements to the new find dialog (spacing, etc), and added some keyboard
	mnemonics to the options in the dialog.

2006-12-30  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 30 Dec 2006 00:30:02 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-find-text-dialog.cc: by default
	when the user enters a search string and type "Enter" a search is
	triggered. Not need to go click on the "Find" button.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::find_in_current_file(): support for "match-case",
	"search-backward" and "wrap-around". Support of "match-entire-word"
	is still not implemented.
	* src/persp/dbgperspective/nmv-source-editor.cc,h: add facility
	to support the "wrap-around".
	* src/persp/dbgperspective/glade/findtextdialog.glade: give
	proper names to widgets so that they can be queried.
	This entry makes the "Find" useable. Only the "match-entire-word"
	feature is not implemented.

2006-12-29  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 29 Dec 2006 19:04:55 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dialog.cc,h: don't prevent from
	instanciating in the heap. Added Dialog::hide().
	* src/persp/dbgperspective/nmv-find-text-dialog.cc,h: new find dialog.
	Everything is not wired yet. It has only the basics, which is search a
	string downwards, with no case match. I am commited it
	for now and I expect to work on it quickly to wire everything.
	* src/persp/dbgperspective/glade/findtextdialog.glade: the UI of the find
	dialog.
	* src/persp/dbgperspective/nmv-run-program-dialog.cc,h: don't include
	gtkmm stuff in the header file.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: added a "Find" menu
	item in the edit menu + the contextual menu. Added a
	quick DBGPerspective::fin_in_current_file() for now.
	* src/persp/dbgperspective/menus/menus.xml: added the "Find" menu item to the
	edit menu
	* src/persp/dbgperspective/nmv-source-editor.cc,h: added the bulk of the
	search functionnality in here, using the new gtksourceview::SourceIter
	binding.
	* configure.ac: force the use of the new svn head version of
	gtksourceviewmm, namely version 0.3.0. This is needed so that we can use
	the new gtksourceview::SourceIter for doing search.

2006-12-28  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	added glade file for locating files without full pathnames from gdb added
	* po/POTFILES.in: added glade file for locating files without full pathnames
	from gdb
	* src/workbench/nmv-workbench.cc: added translation credits to the About
	dialog

2006-12-23  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 23 Dec 2006 10:37:18 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::open_file(): proper utf8 conversion for filepaths.
	This entry is the result of changeset #332 merged from branch 0.2.

2006-12-17  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 17 Dec 2006 19:29:49 +0100 Dodji Seketeli
	* coding-style.txt: fixed a typo here.
	* src/dbgengine/nmv-gdb-engine.cc: don't requite attributes
	"file" and "line" to be present in breakpoints wire description.
	They can be omitted by gdb when debugging a target that hasn't been
	compiled with -g. More work is necessary to support those targets
	though.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Add a DBGPerspective::clear_status_notebook() function.
	Use it to clear the status notebook when nemiver detaches from
	a target and when the target exits.
	* src/persp/dbgperspective/nmv-breakpoints-view.h,cc: added
	BreakpointsView::clear() function.

2006-12-17  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 17 Dec 2006 18:21:59 +0100 Dodji Seketeli
	* po/nl.po: fogot to add this.

2006-12-17  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 17 Dec 2006 18:17:52 +0100 Dodji Seketeli
	* nemiver.pot, nl.po: apply patch to add "nl" support, by Reinout van
	Schouwen.

2006-12-17  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 17 Dec 2006 18:16:22 +0100 Dodji Seketeli
	* reverted bad nl.po patch application. file impacted are (LINGUAS and
	nl.po)

2006-12-17  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 17 Dec 2006 17:42:40 +0100 Dodji Seketeli
	* nl.po: initial "nl" translation by Reinout van Schouwen.

2006-12-17  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 17 Dec 2006 17:23:24 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:  renamed
	IDebugger::attach_to_program() into IDebugger::attach_to_target().
	Added IDebugger::detach_from_target(),
	and IDebugger::detached_from_target_signal ().
	When the debugger detaches from the target,
	the IDebugger::debugger_state_changed_signal() is emitted and the
	the debugger state is set to IDebugger::NOT_STARTED.
	This entry fixes enh #384847.

2006-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 20:30:19 +0100 Dodji Seketeli
	* po/de.po: Initial "de" translation by Carsten Reith <carsten.reith@arcor.de>

2006-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 20:17:00 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc, nmv-i-debugger.h: added the
	IDebugger::get_state() function.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Added the DBGPerspective::close_all_files() function.
	With that weapon, close files already opened when:
	=> a session is going to be executed, with a target different from
	the previous target we debugged.
	=> a target (different from the previous one) is going to be debugged
	renamed DBGPerspection::saved_sessions() into
	DBGPerspective::choose_a_saved_session(). Added a bunch of logs.
	Did a bit of cleanup.
	This entry fixes #381703.

2006-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 16:21:02 +0100 Dodji Seketeli
	* configure.ac: bump version number to 0.3.0
	to differentiate the trunk branch from the 0.2 branch

2006-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 01:42:03 +0100 Dodji Seketeli

2006-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 11:57:13 +0100 Dodji Seketeli
	* TODO: updated this, adding links to bugzilla when enhancement
	requests have been filled. Maybe we should be filling an enh to
	bugzilla for each TODO item now.

2006-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 10:51:12 +0100 Dodji Seketeli
	* po/es.po: initial es translation by Juan <jmi-debian@telefonica.net>

2006-12-16  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 01:42:03 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-variables-utils.cc:
	break_qname_into_name_elements(): make sure to parse arithmetic
	expressions as variable names, so that I can type 3+4 in the
	variable inspector and have the debugger show me the result ;-).
	* src/persp/dbgperspective/nmv-source-editor.cc: mark strings
	translatable here.
	* src/persp/dbgperspective/nmv-call-stack.cc: mark some string
	translatable here as well
	* po/fr.po:  updated french translation.

2006-12-15  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 00:48:25 +0100 Dodji Seketeli
	* src/uicommon/nmv-spinner.h,cc: moved nmv-throbber.h,cc to
	nmv-spinner.h,cc. It's basically a wrapper of EphySpinner.
	* src/uicommon/nmv-spinner-tool-item.cc: make
	nemiver::SpinnerToolItem, wrap
	EphySpinnerToolItem. It's does not extend nemiver::Spinner. It's a
	tool item that can be put in the toolbar.
	Now, our spinner model is cleaner, at least from a naming perspective.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: use
	nemiver::SpinnerToolItem instead of nemiver::EphyThrobber.

2006-12-15  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 16 Dec 2006 00:03:25 +0100 Dodji Seketeli
	* src/persp/dbgperspective/: moved nmv-ui-utils.cc nmv-throbber.cc,
	nmv-throbber.h, ephy-spinner.c, ephy-spinner.h,
	ephy-spinner-tool-item.c, ephy-spinner-tool-item.h,
	nmv-ephy-throbber.h, nmv-ephy-throbber.cc, nmv-popup-tip.cc,
	nmv-popup-tip.h, nmv-terminal.cc, nmv-terminal.h
	to src/uicommon. Sharing is good.

2006-12-15  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	A whole bunch of little HIG fixes related to capitalization.
	* glade/workbench.glade:
	* src/persp/dbgperspective/glade/loadcoredialog.glade:
	* src/persp/dbgperspective/glade/proclistdialog.glade:
	* src/persp/dbgperspective/glade/runprogramdialog.glade:
	* src/persp/dbgperspective/glade/varinspectordialog.glade:
	* src/persp/dbgperspective/nmv-call-stack.cc:
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	* src/persp/dbgperspective/nmv-var-inspector.cc: A whole bunch of little HIG
	fixes related to capitalization.

2006-12-14  Hubert Figuiere <hub@src.gnome.org>

	0.2 got released

2006-12-14  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 14 Dec 2006 07:55:07 +0100 Dodji Seketeli

2006-12-13  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 13 Dec 2006 22:31:20 +0100 Dodji Seketeli
	* ChangeLog, configure.ac, NEWS: some few updates to prepare 0.2.0

2006-12-13  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 13 Dec 2006 08:37:50 +0100 Dodji Seketeli
	* glade/workbench.glade: don't show the the border of the toolbar
	notebook container. This should fix #385195.

2006-12-13  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 13 Dec 2006 08:24:30 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::append_source_editor(): more work on the damned
	close button size. Man, so much try/error cycles. Now it seems
	to have a decent size. This should close #385186.

2006-12-12  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 12 Dec 2006 21:31:56 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: set a minimum size
	to the status notebook widget.
	* src/persp/dbgperspective/schemas/Makefile.am: I have seen that
	gconfd-2 --shutdown was not really reliable on my system. When
	launched from the makefile, sometimes it just doesn't restart gconf.
	In any case, what I wanted was not really to restart it, but just make
	it reload its data. So, I switched back to sending it the HUP signal -
	to make it reload its configuration _without_ restarting it -,
	but I test the presence of a gconf process before sending the HUP signal.
	* src/persp/dbgperspective/schemas/nemiver-dbgperspective.schemas: add
	a new pair of keys to host the minimum size of the notebook widget.
	* src/persp/dbgperspective/glade/bodycontainer.glade: don't allow the
	status notebook to shrink beyond its minimum size.
	This entry fixes 384474.

2006-12-11  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 11 Dec 2006 23:47:02 +0100 Dodji Seketeli
	* NEWS: updated this

2006-12-11  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 11 Dec 2006 23:42:18 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::append_source_editor(): don't request size for the
	close button in tab. This should fix #384456.

2006-12-11  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 11 Dec 2006 19:23:18 +0100 Dodji seketeli
	* po/sv.po: Daniel Nylander sent the initial swedish translation

2006-12-11  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 11 Dec 2006 11:59:41 +0100 Dodji Seketeli
	* src/workbench/nmv-workbench.cc: added more logging and some try/catch
	blocks to signal handlers.

2006-12-11  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 11 Dec 2006 11:33:26 +0100 Dodji Seketeli
	* NEWS: updated this

2006-12-11  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 11 Dec 2006 10:25:16 +0100 Dodji Seketeli
	* po/fr.po: updated French translation.

2006-12-11  Hubert Figuiere <hub@src.gnome.org>

	sync debian packaging with ubuntu

2006-12-11  Hubert Figuiere <hub@src.gnome.org>

	update changelog for 0.1 release.

2006-12-10  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	EUREKA! I figured out why I was never seeing the 'quit' command queued to
	* src/workbench/nmv-workbench.cc: EUREKA!  I figured out why I was never
	seeing the 'quit' command queued to gdb.  It's because the shutting down
	signal was never being emitted when I shut down nemiver.  This is because I
	was using the window-manager's close button instead of the 'Quit' menu item.
	To fix this, I now connect to the root window's delete-event and call the
	on_quit_menu_item_action() so both of these methods result in the same
	shutdown procedure.  This means that the queueing of the quit command (look
	down 2 changes) might have actually been fine, but it just simply wasn't
	being done at all before (depending on which method you used to shut down
	the application).

2006-12-10  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	refactor the CallStack widget in the same way as the BreakpointsView
	* src/persp/dbgperspective/nmv-call-stack.cc:
	* src/persp/dbgperspective/nmv-call-stack.h: refactor the CallStack widget
	in the same way as the BreakpointsView widget was refactored (see bug
	#381702 for brief explanation).
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: move context menu, etc.
	to the Callstack widget

2006-12-10  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 10 Dec 2006 22:46:37 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: GDB::exit_engine(): don't queue the
	"quit" command, send it to gdb directly, otherwise nemiver may quit
	before gdb. This is a second attempt at fixing #384057.

2006-12-10  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 10 Dec 2006 21:17:12 +0100 Dodji Seketeli
	* src/workbench/nmv-workbench.cc: edited Ruben's patch to save
	geometry only at shutdown time. Added more logging. Also, set
	window size request to a minumum size,
	otherwise, setting window size (through Gtk::Windo::resize())
	sets the window minimum to the newly set size <grin/>.
	* src/persp/dbgperspective/nmv-throbber.cc,h: make
	throbber::get_widget() return a Gtk::ToolItem so that we can embedd
	it toolbar our toolbar. I'll  maybe need to refactor this later so
	that we have a ThrobberToolItem and a classical Throbber.
	* src/persp/dbgperspective/nmv-ephy-throbber.h,cc: ditto. The new
	tooltip based EphyThrobber widget is based on
	ephy-spinner-tool-item.cc,h, freshly copied from epiphany cvs.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: pack the ephy
	throbber into the toolbar instead of in the container
	box.

2006-12-10  Jean-François Rameau <jf.rameau@gmail.com>

	set a default font for the terminal widget to fix a bug with vte 0.14
	* src/persp/dbgperspective/nmv-terminal.cc: set a default font for the
	terminal widget to fix a bug with vte 0.14 (fixes bug #384172)

2006-12-10  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 10 Dec 2006 18:38:26 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-preferences-dialog.cc:
	Don't create a new instance of the configuration manager.
	Rather get one from the workbench. This closes #384406 .

2006-12-10  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 10 Dec 2006 18:02:11 +0100 Dodji Seketeli
	* src/common/nmv-plugin.h: make
	Plugin::EntryPoint::build_absolute_resource_path() public.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: refactor the
	breakpoint view management so that most of the stuff that belong
	into BreakpointsView goes in there. Connect to
	BreakpointsView::go_to_breakpoint_signal() and
	BreakpointsView::delete_breakpoint_signal() to handle these two
	event.
	* src/persp/dbgperspective/nmv-breakpoints-view.cc,h:
	Make this handle contextual menu stuff. Emit signals
	BreakpointsView::got_to_breakpoint_signal() and
	BreakpointView::delete_breakpoint_signal() upon user action.
	This entry is a patch from Jonathon Jongsma to fix bug #381702.

2006-12-10  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add an border (shadow) to the source editor ScrolledWindow. Should fix
	* src/persp/dbgperspective/nmv-source-editor.cc: add an border (shadow) to
	the source editor ScrolledWindow.  Should fix #384407

2006-12-10  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 10 Dec 2006 16:26:44 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h: added
	IDebugger::exit_engine(), renamed IDebugger::stop() into
	IDebugger::stop_target().
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::on_shutdown_signal(): use IDebugger::exit_engine()
	upon nemiver shutdown. This should fix #384057.
	DBGPerspective::stop() Also, use IDebugger::stop_target()
	instead of IDebugger::stop().

2006-12-10  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 10 Dec 2006 13:45:51 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: add a GDBEngine::get_state()
	method.
	OnErrorHandler::do_handle(): emit change the debugger state to
	IDebugger::READY when an error occurs and when the debugger is _not_
	in the IDebugger::PROGRAM_EXITED stated.

2006-12-09  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 09 Dec 2006 20:24:17 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc:
	OutOfBandRecord::stop_reason_to_string(): fix some typos.
	GDBEngine::Priv::on_state_changed_signal(): store the debugger
	state.
	OnStoppedHandler::do_handle(): emit the
	IDebugger::state_changed_signal() before
	IDebugger::state_program_finished_signal(). Maybe we should just
	ditch IDebugger:state_program_finished_signal() in the future. I'd
	like to get the behaviour right, first.
	OnVariableTypeHandler::do_handle(): emit
	IDebugger::state_changed_signal() to notify the IDebugger::READY
	state when the debugger returns a variable type.
	* src/dbgengine/nmv-i-debugger.h: added IDebugger::state_to_string()
	to allow client code to log debugger state as a string.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc:
	LocalVarsInspector::Priv::on_stopped_signal(): stop working when
	target exits.
	* src/persp/dbgperspective/nmv-call-stack.h,cc:
	Add a CallStack::clear() method to reinit the widget.
	* src/persp/dbgperspective/nmv-thread-list.cc,h: added a
	ThreadList::clear() method to reinit the widget.
	Add some logging.
	ThreadList::Priv::on_debugger_stopped_signal(): stop working when
	the target exits.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add the "restart"
	action in its own action group so that its sensitivity can be
	controlled apart. When the target exits, make the debugger actions
	not sensitive. Only the "restart" stays sensitive.
	Also, clear call , thread list and local variables widget upon
	program exit.
	This entry tries to fix #381694.

2006-12-09  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 09 Dec 2006 14:53:20 +0100 Dodji Seketeli
	* src/dbgengine/nmv-i-debugger.h:in IDebugger::Variable::to_string():
	Make sure no new line gets added at the end of variables.
	Cleanup the implementation compound variables serialization.
	* src/persp/dbgperspective/nmv-popup-tip.cc: a bit of a cleanup here
	again. This entry should fix #381402.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add more logging.
	* autogen.sh: require intltool 0.33 to stay in sync with configure.ac

2006-12-09  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 09 Dec 2006 10:17:22 +0100 Dodji Seketeli
	* src/persp/dbgperspective/glade/preferencesdialog.glade:
	applied patch attached to #383886, from Guillaume Desmottes.
	This should close that bug.

2006-12-09  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 09 Dec 2006 00:32:57 +0100 Dodji Seketeli
	* configure.ac: do a little hack to detect when library related
	stuff have to be installed in $prefix/lib64 instead of $prefix/lib.
	I do that because I would have loved to see $libdir expand in
	an absolute path. It expands in ${exec_prefix}/lib or
	${exec_prefix}/lib64. So I build an absolute path myself, to be used
	in *.conf files, so I need to detect if the lib dir name is 'lib' or
	'lib64'.
	* src/*/*.conf.in: use @prefix@/@NEMIVER_LIB_DIR_NAME@ instead of
	@prefix@/lib. NEMIVER_LIB_DIR_NAME expands either in 'lib' or 'lib64'
	This should help fix #383170.

2006-12-08  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 08 Dec 2006 17:26:34 +0100 Dodji Seketeli
	* src/common/nmv-dynamic-module.cc: add more logging in the
	"module-loading-domain".

2006-12-07  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 07 Dec 2006 23:50:52 +0100 Dodji Seketeli
	* configure.ac: fix a typo that broke NEMIVERWORKBENCH_LIBS being
	* src/workbench/Makefile.am: make libworkbenchmod link with the
	--as-needed option of GNU ld. This entry is a patch from
	Rémi Cardonna <remi2402@free.fr>.

2006-12-07  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 07 Dec 2006 23:38:12 +0100 Dodji Seketeli
	* src/workbench/nmv-workbench.cc: dynamic cast Workbench into
	IWorkbench. Maybe this can fix #383170 that is showing up on
	an EM64T architecture only.
	* src/common/nmv-plugin.cc,nmv-dynamic-module.cc,
	src/common/nmv-sequence.cc, src/common/nmv-log-stream.cc,
	src/common/nmv-scope-logger.cc,
	src/persp/dbgperspective/nmv-dbg-perspective.cc: did some style
	cleanup.

2006-12-07  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 07 Dec 2006 20:49:54 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: fixed some typos.
	* TODO: updated this.

2006-12-07  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 07 Dec 2006 17:20:53 +0100 Dodji Seketeli
	* src/common/nmv-dynamic-module.cc: added some logs in the
	"module-loading-domain" domain to know what modules are being loaded.

2006-12-07  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 07 Dec 2006 13:58:13 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::init_actions():  put the RunMenuItemAction in
	s_debugger_ready_action_entries (remove it from
	s_target_connected_action_entries) so that we can restart the target
	only when the debugger is in the ready state. Otherwise, some users
	are tempted to restart the target while it is running (without
	stopping it first), and that is impossible.

2006-12-06  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 06 Dec 2006 11:32:20 +0100 Dodji Seketeli
	* NEWS: updated this

2006-12-06  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 06 Dec 2006 07:53:06 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-popup-tip.h,cc:
	PopupTip::Priv::paint_window(): don't move window after painting it.
	It makes weird flashes on some parts of the root window, otherwise.
	Overload PopupTip::show() and PopupTip::show_all() (initially
	defined in the parent Gtk::Widget class) to make the popuptip move
	_before_ showing. Added PopupTip::show_at_position() so that we can
	set the position at which the tip must be shown at before moving it
	and showing it.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::show_underline_tip_at_position(): use
	the new PopupTip::show_at_position() to make the popuptip appear
	where we want. This should fix the issue raised in comment #6 of bug
	#381402. This bug is maybe going to be killed eventually. Let's keep
	hope.

2006-12-06  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	fixed a typo Changed title of the filechooserbutton so that when it pops
	* NEWS: fixed a typo
	* src/persp/dbgperspective/nmv-locate-file-dialog.cc,
	src/persp/dbgperspective/glade/locatefiledialog.glade: Changed title of
	the filechooserbutton so that when it pops up the window title doesn't say
	"select a core file" or something similar.  Now it prompts you to select
	the source file that we're looking for.

2006-12-05  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 05 Dec 2006 22:00:30 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-popup-tip.cc:
	PopupTip::Priv::paint_window(): okay now we have the outline on the
	borders of the popuptip just like for normal tooltips. I was making
	the stupid error of not setting the origin of the box to paint to [0,0].
	Hooray !

2006-12-04  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 05 Dec 2006 00:55:02 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-popup-tip.cc: cleanup up PopupTip a
	bit. Make it use Gtk::Label again (instead of Gtk::TextView). This
	makes it look more like a normal tooltip. This is a first attempt
	at fixing #381402 .

2006-12-03  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 03 Dec 2006 21:35:30 +0100 Dodji Seketeli
	* coding-style.txt: updated this. Added variable initialization rules.

2006-12-03  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 03 Dec 2006 20:43:45 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::stop(): do not test the presence of target_pid anymore.
	we send the SIGINT signal to gdb directly.
	* NEWS: updated this.

2006-12-03  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 03 Dec 2006 18:33:40 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: GDBEngine::stop(): send
	Send the SIGINT signal to gdb itself and have it stop the
	the target as a result. This should fix #381912.

2006-12-03  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	call IDebugger::stop() instead of DBGPerspective::stop() in the shutdown
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: call IDebugger::stop()
	instead of DBGPerspective::stop() in the shutdown signal so that when the
	debugger is not running (e.g. before starting debugging or after the target
	finishes running) it doesn't display an error message.

2006-12-03  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 03 Dec 2006 13:35:20 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-variables-utils.cc:
	break_qname_into_name_elements(): Variable names can actually
	be template types. In that case, make sure we can parse them.
	This should fix #377623.
	* src/common/nmv-ustring.cc: do a smallish cleanup in
	bool UString::operator()! .

2006-12-03  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 03 Dec 2006 12:16:10 +0100 Dodji Seketeli
	* coding-style.txt: added an initial coding style reference.

2006-12-03  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	When gdb doesn't give us the full path to a filename, start looking in the
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: When gdb doesn't give us
	the full path to a filename, start looking in the working directory first.
	If the user is debugging with the working directory where their source files
	are located, then they might never have to manually choose the location of
	the source file.  Also when the user has to manually choose the location of
	the source file, start looking in the working directory.

2006-12-02  Ruben Vermeersch <ruben@savanne.be>

	Added a working_dir parameter to load_program. Implemented the new
	* src/dbgengine/nmv-i-debugger.h: Added a working_dir parameter to
	load_program.
	* src/dbgengine/nmv-gdb-engine.cc: Implemented the new working_dir
	parameter from load_program. It is passed to gdb using the --cd parameter.
	This fixes the "select working dir" folder chooser, it now actually
	selects the working dir.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Pass the working dir to
	the debugger.
	* tests/test-breakpoint.cc: Fix the test to work with the new debugger
	interface.

2006-12-02  Ruben Vermeersch <ruben@savanne.be>

	Changed the title of the working dir folder chooser from "Choose an
	* src/persp/dbgperspective/glade/runprogramdialog.glade: Changed the title
	of the working dir folder chooser from "Choose an executable" to the more
	appropriate "Choose a working directory".

2006-12-02  Ruben Vermeersch <ruben@savanne.be>

	Bugs are now in bugzilla
	* README: Bugs are now in bugzilla

2006-12-01  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 01 Dec 2006 23:52:51 +0100 Dodji Seketeli
	* src/common/nmv-tools.cc,h: be capable to ignore errors happening
	during sql scripts execution.
	* src/common/nmv-exception.h: don't use LOG_EXCEPTION to log errors
	in the RETURN_*_IF_FAIL macros.
	* src/common/nmv-transaction.h: be capable to bypass transactions.
	* src/persp/dbgperspective/nmv-sess-mgr.cc: now when there is a
	mismatch between REQUIRED_DB_SCHEMA_VERSION  and the version number
	stored in the schemainfo.version column of the database, drop all
	tables and recreate them. Okay, in the future we will have to be
	less brutal, but that works with a minimum of effort for now.
	Bumped REQUIRED_DB_SCHEMA_VERSION from "1.0" to "1.1".
	* src/persp/dbgperspective/sqlscripts/sqlite/create-tables.sql:
	bumped the database version number from "1.0" to "1.1".
	* src/persp/dbgperspective/sqlscripts/sqlite/drop-tables.sql:  added
	a drop table script that drops all tables that are created by
	the "create-tables.sql" script. This script must be maintained so
	that it stays in sync with the "create-tables.sql" one.

2006-12-01  Ruben Vermeersch <ruben@savanne.be>

	Changed "Sélectionner un fichier" to "Choose an executable".
	* src/persp/dbgperspective/glade/runprogramdialog.glade: Changed
	"Sélectionner un fichier" to "Choose an executable".

2006-12-01  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 01 Dec 2006 21:40:36 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-locate-file-dialog.cc: fixed
	compilation warnings/error triggered by the NEMIVER_DEVEL=on env
	variable. This variable if turned on at configure time triggers some
	rather aggressive gcc flags that nicely catch lots of potential
	warnings/errors.

2006-11-30  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	fix the search path stuff so that if you select the location of a file
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: fix the search path stuff
	so that if you select the location of a file manually, it gets added to a
	session-specific search path list.  This reduces the possibility of adding
	paths for two different projects to a global search list and then having the
	wrong main.cc accidentally be opened by nemiver because it was first in the
	search path list.
	Also fixed an error with some versions of gdb where attempting to
	toggle a breakpoint would actually add duplicate breakpoints because it
	would check to see if a breakpoint already existed and it would be comparing
	a full pathname against a basename and thinking there was no breakpoint set
	yet so it would set another.  Hopefully none of these changes cause
	regressions for those that have a well-behaved version of gdb.
	Also open all of the 'opened files' in the session when executing a saved
	session.
	* src/persp/dbgperspective/nmv-sess-mgr.cc,
	src/persp/dbgperspective/nmv-sess-mgr.h: add functionality to store and load
	search paths in the session database
	* src/persp/dbgperspective/sqlscripts/sqlite/create-tables.sql: add a new
	table to the database: searchpaths.  This stores a list of searchpaths
	related to particular sessions.
	*** WARNING: this modifies the database, so you'll need to either remove
	your old session database or create the new table manually for nemiver to
	work correctly ***

2006-11-30  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Fix for poorly-behaved versions of gdb such as the one that ships with
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Fix for poorly-behaved
	versions of gdb such as the one that ships with ubuntu dapper.  These
	versions of gdb don't return the full file path when they return information
	about a set breakpoint, so it's not easy to konw where to apply the
	breakpoint marker.  What this patch does is first looks for a file of the
	given name in the search path directories and if that fails, pops up a
	dialog asking the user to locate the file on disk.  It also automatically
	adds the parent directory to the list of search files, though this will be
	changed to only add it to a list of session-specific search paths when
	session-specific search paths are added. This is a partial fix for bug
	#378294
	* src/persp/dbgperspective/nmv-locate-file-dialog.cc,
	src/persp/dbgperspective/nmv-locate-file-dialog.h,
	src/persp/dbgperspective/Makefile.am: add new 'locate file' dialog source
	files
	* src/persp/dbgperspective/glade/locatefiledialog.glade,
	src/persp/dbgperspective/glade/Makefile.am: add glade file for new dialog

2006-11-29  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 29 Nov 2006 23:58:25 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-run-program-dialog.cc:
	properly convert the current working dir name to utf8.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: use
	Glib::filename_to_utf8() to convert filenames to utf8.

2006-11-29  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add an ID column to the list of saved sessions so that you can easily
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.cc: add an ID column to
	the list of saved sessions so that you can easily correlate the list in this
	dialog to the list from `nemiver --listsessions`

2006-11-28  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 28 Nov 2006 23:52:58 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-var-inspector.cc:
	make VarInspector::Priv inherit from sigc::trackable so that
	it gets disconnected from the treeview if it gets destroyed first.
	It seems that happens has someone reported a crash that makes me
	think about it.
	VarInspector::Priv::build_widget(): Share the ownership of the
	treeview with the container widget it is packed it.
	VarInspector::Priv::set_variale_type(): add an assert here.
	VarInspector::Priv::on_pointed_variable_value_signal(): solve an
	assert that was getting hit too much.

2006-11-28  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 28 Nov 2006 08:04:17 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-load-core-dialog.cc:
	LoadCoreDialog::program_name(): put the return statement outside the
	try/catch block to keep the compiler happy.
	LoadCoreDialog::core_file(): ditto
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: added the "F12"
	shortcut to display the variable inspector.
	* src/persp/dbgperspective/nmv-var-inspector.cc: add support for
	variable dereferencing (for variables that are of pointer type)
	in the variable inspector.

2006-11-28  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	use the Priv data member widgets instead of getting the widget from glade
	* src/persp/dbgperspective/nmv-load-core-dialog.cc: use the Priv data member
	widgets instead of getting the widget from glade every time in the getters
	and setters for program_name and core_file.

2006-11-28  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add a more complex variable to the test to trigger the behavior described
	* tests/test-templated-var.cc: add a more complex variable to the test to
	trigger the behavior described in comment #7 of bug #377623

2006-11-27  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	quick fix for a segfault when gdb doesn't return full path information.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: quick fix for a segfault
	when gdb doesn't return full path information.  Also slightly re-worded the
	popup dialog suggesting to add the file path to the preferences

2006-11-26  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 26 Nov 2006 19:42:01 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: GDBEngine::load_program():
	set the command name as "load-program". Once we attached to the
	program, get the target info, so that we can later stop it.
	Among the target info is the target pid. We need that so that we
	we can later send the STOP signal to the target to stop it.

2006-11-26  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 26 Nov 2006 19:13:43 +0100 Dodji Seketeli
	* TODO, NEWS: updated both. Put the "search facility" item on top
	of the TODO.

2006-11-26  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 26 Nov 2006 18:13:14 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	Remove the IDebugger::Command class from the public api. Make it
	hidden.
	Remove the "run_loop" argument from the IDebugger entry points.
	Add support for cookies here. A cookie is a string of text
	that can be "attached" to the command send to the underlying
	debugger engine. That cookie is latter sent back to the caller
	in the IDebugger::command_done_signal() so that she knows
	the command that got done was the one she previously
	attached the cookie to.
	Also, each command now gets a "name" that is different from
	the "gdb" command name. That way, clients can make tests against
	these command names in a portable (w.r.t underlying debugger
	engines) way.
	* src/common/nmv-proc-mgr.h,cc: added
	Process::get_process_from_pid(),
	Process::get_process_from_name(). refactored
	ProcMgr::get_all_process_list to make it use
	Process::get_process_from_pid().
	Also, moved src/persp/dbgperspective/nmv-proc-mgr.cc,h into
	src/common
	* src/main.cc: added the "nemiver --attach <foo>" option.
	foo can be either a pid, or a process name.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: after we attached
	to the target, do a little IDebugger::step_over() to make the
	perspective update the callstack, local variables etc.
	Display a user message to tell the user to try to update the
	source file search directories option when nemiver doesn't find
	a source file.
	* src/persp/dbgperspective/menus/menus.xml: don't display the
	"ShowCommandMenu" anymore, because the IDebugger::execute_command()
	got removed from the public API. It was making the public api
	specific to gdb. I really need to code a symbolic interpreter on top
	of the IDebugger public api.
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc: double clicking
	on a row makes nemiver attach to the process.
	* src/persp/dbgperspective/nmv-call-stack.cc: update this to comply
	with the IDebugger api changes.
	* src/persp/dbgperspective/glade/bodycontainer.glade: give more space
	to the status notebook.
	* tests/test-breakpoint.cc: update to comply with IDebugger api
	changes.
	* configure.ac: bump version number to 0.2.0

2006-11-24  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 24 Nov 2006 23:02:28 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::parse_member_variable(): during the parsing
	of a value inside a member variable, do not assume the end
	the end of the value is the "," string, but rather ", ".
	Because some values can be Foo<int,char> (notice the comma).
	This entry is the first attempt at fixing #377623 .
	* tests/test-templated-var.cc: wrote this smallish test code
	to reproduce #377623 and serve a regression test it.

2006-11-24  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 24 Nov 2006 14:28:48 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::get_source_editor_from_path(): add some loggin in the
	default domain.
	DBGPerspective::set_where(): when the file is not found in the opened
	files (based on it fullname), look it up in the opened files based on it
	base name only.
	DBGPerspective::append_visual_breakpoint(): ditto
	DBGPerspective::delete_visual_breakpoint(): ditto

2006-11-23  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 23 Nov 2006 16:01:30 +0100 Dodji Seketeli
	* COPYING: updated the FSF address
	* NEWS: updated.

2006-11-22  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 22 Nov 2006 23:29:49 +0100 Dodji Seketeli
	* src/common/nmv-plugin.cc:
	PluginManager::load_plugin_from_path(): lookup plugins in
	in the in-memory plugin map before instanciating a new plugin
	object. That ensures that we don't have two (different)
	physical object representing the same logical plugin.
	Also, put all instanciated plugins the in memory plugin map, even the
	dependencies.
	* src/workbench/nmv-workbench.cc: remove perspective bodies from
	their container at destructions time.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::init_body (): mak m_priv->body_main_paned be
	destroys by DBGPerspective because we unparent
	it from the bodycontainer.glade, and it will be later packed
	to widgets coming from workbench.glade.
	It seems like unparenting makes "us" (DBGPerspective) responsible
	of managing the destruction of that widget. That's why the
	the sourceviews notebook (child of m_priv->body_main_paned) was not
	getting destroyed as a result of the destruction of
	workbench.glade widgets. This entry is a second at fixing #377872.
	I hope this fixes the root cause.
	* src/persp/dbgperspective/nmv-dbg-perspective.h: don't make this
	inherit sigc::trackable. I made that to try fix #377872, but
	I hope changes made in this entry will better fix that bug.

2006-11-22  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	ignore properties
	* update svn:ignore properties

2006-11-21  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 21 Nov 2006 22:46:29 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.h: make DBGPerspective
	extend sigc::trackable so that it gets automagically disconnected at
	destruction time. This should fix #377872.
	* NEWS: update this.

2006-11-21  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Fix a bug where the target executable keeps running after quitting
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Fix a bug where the
	target executable keeps running after quitting nemiver.  To reproduce the
	problem, start nemiver, select File > Resume Saved Session... > [pick a
	session to resume].  After the session has been loaded, immediately press
	Ctrl-Q to quit nemiver.  The nemiver window will disappear, but the target
	executable window will pop up and you have to manually close it.  This
	change explicitly calls stop() on the debugger when it gets the shutdown
	signal so that the target won't continue running.

2006-11-21  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	When opening a source file (e.g. file > open) start the filechooser in the
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: When opening a source
	file (e.g. file > open) start the filechooser in the working directory
	specified in the session settings.
	* src/persp/dbgperspective/schemas/Makefile.am: restart gconfd via
	'gconftool-2 --shutdown' instead of 'killall' as recommended on the gconf
	website
	* src/persp/dbgperspective/sqlscripts/sqlite/Makefile.am:  remove
	unnecessary trailing slash on sqlscripts directory

2006-11-21  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 21 Nov 2006 09:23:08 +0100 Dodji Seketeli
	* NEWS: udpated.

2006-11-21  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 21 Nov 2006 08:01:40 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	don't forget to set the where marker in
	DBGPerspective::on_frame_selected_signal() .

2006-11-20  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 21 Nov 2006 00:41:27 +0100 Dodji Seketeli
	* nmv-gdb-engine.cc: GDBEngine::Priv::parse_frame(): forgot to parse
	file_name, file_full_name and line information of frame.
	This was leading to subtle bugs in the IDebugger::stopped_signal()
	frame parameter not carrying filename and line information.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::on_debugger_stopped_signal(): update the where
	pointer in here.
	DBGPerspective::on_frame_selected_signal(): don't update the where
	pointer in here.
	DBGPerspective::get_contextual_menu(): add an "inspect variable"
	menu item to the contextual menu.
	DBGPerspective::popup_source_view_contextual_menu(): make sure
	poping the contextual menu up don't clear the text (variable name)
	that may have been selected.
	DBGPerspective::inspect_variable(): detect if a text was selected
	when the variable inspecting request arises. If yes, consider it as
	variable name, and try to inspect that variable.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc,h:  rename
	VarInspectorDialog::variable_name() into
	VarInspectorDialog::inspect_variable(). It does what you think it
	does.
	* src/persp/dbgperspective/nmv-call-stack.cc:
	Priv::on_frames_params_listed_signal(): don't emit a signal when
	listing frames and selecting the frame 0.

2006-11-20  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 20 Nov 2006 20:30:30 +0100 Dodji Seketeli
	* TODO: updated

2006-11-20  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 20 Nov 2006 19:06:43 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h: added the
	the IDebugger::select_frame() function.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Now, the CallStack::frame_selected_signal() is emitted after the
	CallStack calls IDebugger::select_frame(). That is triggered by the
	user clicking on of the callstack rows. So in
	DBGPerspective::on_frame_selected_signal(), make the local variables
	inspector show the variables of the current function.
	* src/persp/dbgperspective/nmv-call-stack.cc: call
	IDebugger::select_frame() when the user clicks to select a frame.
	Detect the IDebugger::command_done_signal() that follows. Beware, lots
	of commands generate a done signal, so we need to hook on the done
	signal that got generated by our call to IDebugger::select_frame.
	I have done this in a non portable way because I need to know some
	specifics of gdb. I need to add a 'cookie' mechanism so that I can
	know that a "command done signal" comes from a given command I sent.
	Anyway, once the "command done signal" is detected, emit
	CallStack::frame_selected_signal(), later on trapped by the perspective
	etc ...
	This entry adds the gdb "up" feature to nemiver. Now, when you select a
	frame, you can see the variables of that frame.

2006-11-20  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 20 Nov 2006 09:50:09 +0100 Dodji Seketeli
	* po/fr.po: updated French translation.

2006-11-20  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 20 Nov 2006 07:09:10 +0100 Dodji Seketeli
	* src/common/nmv-safe-ptr.h: removed operaror=(const PointerType *) .
	"FooSafePtr s = new Foo" Is no more possible. You have to use the
	SafePtr::reset() function: "FooSafePtr s; s.reset (new Foor)"
	or "FooSafePtr s (new Foo)" ;
	* */*: prograted that safeptr change. Added logging to numerous
	destructors in the "destructor-domain" log domain.
	* src/uicommon/nmv-ui-utils.h: added WigetRef/WidgetUnref functors
	to be used with SafePtr.
	* src/common/nmv-object.h,cc: added Object::enable_refcount() and
	Object::is_refcount_enable() so that refcount can be disabled for
	Objects supposed to be singleton.
	* src/persp/dbgperspective/nmv-variables-utils.cc,h: created this
	to share graphical variables management functions among different
	graphical variable management widgets.
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc: renamed
	VarsEditor into this. Refactored this to put some code in
	nmv-variables-utils.h
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add a
	variable inspector dialog.
	It not prefilled with the currently selected variable yet.
	You have to type in the variable name for the moment.
	* src/persp/dbgperspective/nmv-var-inspector.h,cc: created a
	VariableInspector widget.
	* src/persp/dbgperspective/nmv-var-inspector-dialog.cc,h: created
	a new variable inspector dialog using the VariableInspector widget.
	* src/persp/dbgperspective/menus/menus.xml: added the
	"inspectVariableMenuItem".
	* src/dbdimpl/sqlite/nmv-sqlite-cnx-mgr-drv.cc: make the connection
	manager be a singleton.
	* configure.ac: downgrade intltool requirement to 0.33 .

2006-11-17  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 18 Nov 2006 00:46:06 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: don't put
	the terminal in a scrolledwindow. It doesn't handle vte scrolling
	properly when the size of text thrown at it > scrollback buffer
	size. Build a vbox + scrollbar ourselves instead. That works much
	better.
	* src/persp/dbgperspective/nmv-terminal.cc: set the size of
	scrollback size to 1000 lines and set the terminal emulation to
	xterm by default.
	* tests/test-stdout.cc: added this test program that spits a lot of
	lines to stdout to test the behaviour of nemiver's terminal widget.
	* tests/Makefile.am: compile the new test program.

2006-11-17  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 17 Nov 2006 21:58:13 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-local-vars-inspector.cc,h: renamed
	src/persp/dbgperspective/nmv-vars-editor.cc,h into this file.
	* src/persp/dbgperspective/Makefile.am: reflect that modification in
	here.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: progagate that
	change here

2006-11-16  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 16 Nov 2006 09:03:07 +0100 Dodji Seketeli
	* TODO, NEWS: the "files lookup during breakpoint workflow" item is done.

2006-11-15  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 15 Nov 2006 18:40:31 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::get_source_editor_from_path(): added a param to lookup
	source editors based on file basemanes.
	DBGPerspective::append_breakpoints(): when looking up files that don't
	have full path information, lookup in opened files first.

2006-11-14  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 14 Nov 2006 13:41:10 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: forgot to catch some
	exceptions. Every signal handler must be try/catch protected.

2006-11-14  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 14 Nov 2006 12:10:20 +0100 Dodji Seketeli
	* src/common/nmv-log-stream-utils.h: sync each logged line to disk.
	* TODO,NEWS: update these.

2006-11-14  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 14 Nov 2006 11:02:08 +0100 Dodji Seketeli
	* TODO: added a new item in here, removed the varseditor modification
	items.

2006-11-12  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 12 Nov 2006 23:57:13 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-vars-editor.cc:
	in VarsEditor::Priv::is_type_a_pointer(): detect when a type is a
	Foo * const. (not only Foo*). GDB reports const pointers like that.
	in VarsEditor::Priv::on_pointed_variable_value_signal(): lookup
	dereferenced variables in locals _and_ in function arguments.
	This entry now lets you dereference the 'this' pointer, when he shows
	up among function arguments.

2006-11-12  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 12 Nov 2006 17:25:25 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h: renamed
	IDebugger::Frame::function() in IDebugger::Frame::function_name().
	* src/uicommon/nmv-ui-utils.h,src/common/nmv-exception.h: log an error
	when an exception is caught.
	* src/common/nmv-ustring.cc: in UString::chomp() : fix this for the
	cases when the string has zero size.
	* src/persp/dbgperspective/schemas/Makefile.am: fix a typo here.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: add a
	DBGPerspective::going_to_run_target_signal(). In the default
	callback initialize the local variables editor because now that
	editor is not necessarily initialized at each stop.
	In DBGPerspective::try_to_request_show_variable_value_at_position():
	when the mouse is not on a 'word', don't generate an exception.
	Return quietly.
	* src/persp/dbgperspective/nmv-source-editor.cc,h:
	SourceEditor::get_word_at_position(): make this return a boolean to
	notify whether if the word has been found or not.
	* src/persp/dbgperspective/nmv-vars-editor.cc: big changes in here.
	Basically, don't clear and redraw the widget at each target stop.
	Variables are updated in an incremental way now.
	Also, variables that have changed between two stop are now
	highlighted in red. woot. This is a rather big change, so it needs
	some testing.

2006-11-10  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 10 Nov 2006 13:44:03 +0100 Dodji Seketeli

2006-11-10  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 10 Nov 2006 13:21:02 +0100 Dodji Seketeli
	* Makefile.am: fix the tag-release-only target.

2006-11-10  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 10 Nov 2006 12:47:18 +0100 Dodji Seketeli
	* README: udpated this according to the last discussion I had with Jonner.
	* Makefile.am: updated the release stuff part.
	* NEWS: updated this for the 0.1.0 release.

2006-11-08  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 08 Nov 2006 22:58:44 +0100 Dodji Seketeli
	* configure.ac: set version number to 0.1.0
	* Makefile.am: update releasing information.
	* NEWS: update this, preparing the 0.1.0 release.
	* po/fr.po: set encoding to utf8

2006-11-05  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 05 Nov 2006 15:06:53 +0100 Dodji Seketeli
	* src/persp/Makefile.am: added the headers to the EXTRA_DIST.
	* po/POTFILES.in: flag input files as having utf8 encoding, as I use
	utf8 as default encoding. Otherwise, make distcheck complains.
	This entry actually makes nemiver pass distcheck.

2006-11-05  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 05 Nov 2006 13:46:41 +0100 Dodji Seketeli
	* src/persp/dbgperspective/schemas/Makefile.am: update gconf2-d by
	default now again.
	* src/persp/dbgperspective/glade/preferencesdialog.glade:
	The preferences dialog doesn't need a cancel button. Properties are
	instant apply, so there is nothing to cancel.

2006-11-05  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 05 Nov 2006 13:17:16 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	DBGPerspective::open_file(): set source code highlight on by
	default, in case we can't talk with the configuration manager.

2006-11-05  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 05 Nov 2006 12:42:08 +0100 Dodji Seketeli
	* TODO: removed that item: 'grey out' dialogs okay buttons until the user
	selected something. It can be considered done now. Added a new item
	there as well.

2006-11-05  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 05 Nov 2006 03:40:46 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-load-core-dialog.cc: grey out the ok
	button until the makes a choice.
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.cc,h: ditto.
	* src/persp/dbgperspective/nmv-run-program-dialog.cc: ditto.
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc: ditto + made a bit
	of cleanup. Use the priv idiom here.

2006-11-04  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 04 Nov 2006 01:19:18 +0100 Dodji Seketeli
	* src/persp/dbgperspective/glade/loadcoredialog.glade: put the default
	size (width,height) of the dialog to (350,200) because it's needed
	to carry the french translated text in that widget. <sigh/>.
	* src/persp/dbgperspective/glade/savedsessionsdialog.glade: ditto.
	* src/persp/dbgperspective/glade/runprogramdialog.glade: ditto.
	* po/LINGUAS: added a line with fr here.
	* po/fr.po:  added initial french translation.
	* po/nemiver.pot: added this file as well.

2006-11-03  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 02 Nov 2006 23:02:13 +0100 Dodji Seketeli
	* po/POTFILES.in: added missing files in here.

2006-11-02  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 02 Nov 2006 23:02:13 +0100 Dodji Seketeli
	* src/persp/dbgperspective/nmv-dialog.cc,h: put the priv idom back
	here. Added  Dialog::widget() and Dialog::glade() protected methods
	to access the private bits children classes may need.
	* src/persp/dbgperspective/nmv-preferences-dialog.cc: refactorise
	this according to the change in nemiver::Dialog.
	Instanciate Preference::Priv with the necessary bits coming from
	nemiver::Dialog .
	* src/persp/dbgperspective/nmv-load-core-dialog.cc,h: use
	Dialog::widget() and Dialog::glade() to access the parent Dialog
	private bits.
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.cc: same thing
	as in the other dialogs. Try to respect the style of the project:
	members of m_priv don't start with m_, because they'll be accessed
	via m_priv->foo. m_priv has the m_ already. Function arguments are
	prefixed with a_ . Try to have lines not much longuer than 80
	characters.
	* src/persp/dbgperspective/nmv-run-program-dialog.cc: same as the other
	dialogs.
	* src/persp/dbgperspective/nmv-proc-list-dialog.cc: same  as the other
	dialogs.
	* src/persp/dbgperspective/nmv-dbg-perspective.cc:
	Make RunProgramDialog::working_directory() gets called with
	absolute paths. Otherwise, I get some warnings at runtime.
	Also, the nemiver::Terminal's scrolled window needs some special care:
	It must be Gtk::ScrolledWindow::set_vadjustment() to the adjustment of
	nemiver::Terminal. Otherwise, scrolling is broken in the
	notebook status terminal.
	* src/persp/dbgperspective/nmv-terminal.cc,h: added
	Terminal::adjustment () to get the adjustment of the terminal.
	This is necessary when the terminal is packed in a scrolled window.
	In that case, the scrolled window's must share the same adjustment
	object as the terminal. Otherwise, the scrolled windows won't be
	able to control the terminal's scrolling.
	Also, enable text text scrolling in the vte terminal underlying
	widget.

2006-11-02  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	marked the "Execute" button as the default action for the dialog so that,
	* src/persp/dbgperspective/glade/runprogramdialog.glade,
	src/persp/dbgperspective/glade/savedsessionsdialog.glade: marked the
	"Execute" button as the default action for the dialog so that, for example,
	double-clicking a treeview row or pressing enter in the dialog will
	automatically select the default action.  Minor changes, but they make
	keyboard usability much better.
	* src/persp/dbgperspective/nmv-saved-sessions-dialog.h,
	src/persp/dbgperspective/nmv-run-program-dialog.h: reverted dialog back to
	using the Priv idiom like they were before we abstracted out a common Dialog
	base class because I was sick of needing to recompile the entire
	nmv-dbg-perspective.cc file whenever changing private members of dialogs.
	I don't have a lot of experience with the Priv idiom, however, so there may
	be some ugliness there, so I'd recommend a quick review.  In particular, the
	base Dialog class contains members m_glade (the glade Xml), and m_dialog
	(the Gtk::Dialog) which i needed to access from within the Priv class
	functions, so I had to pass around pointers to these things.  If there's a
	better way to do this, please feel free to improve it.
	* src/persp/dbgperspective/nmv-run-program-dialog.cc,
	src/persp/dbgperspective/nmv-saved-sessions-dialog.cc: re-organize these
	files to use the Priv idiom and implement the default action activation
	mentioned above.  In the 'run program' dialog, you can now press enter when
	you're in the 'arguments' text entry to click the OK buttton, and in the
	'saved sessions' dialog, you can either press enter when a tree row is
	selected or double-click an item in the treeview to click 'OK'

2006-11-02  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	use SourceEditor::scroll_to_line() instead of doing it manually so that
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: use
	SourceEditor::scroll_to_line() instead of doing it manually so that
	scrolling to the breakpoints also uses the 10% margin

2006-11-02  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Changing the libnemiveruicommon library to a static library was causing
	*** Warning: Linking the shared library libworkbenchmod.la against the
	*** static library ../../src/uicommon/libnemiveruicommon.a is not portable!
	Resulting in this error on my amd64 machine:
	/usr/bin/ld: ../../src/uicommon/libnemiveruicommon.a(nmv-ui-utils.o):
	relocation R_X86_64_32 against `a local symbol' can not be used when making
	a shared object; recompile with -fPIC
	../../src/uicommon/libnemiveruicommon.a: could not read symbols: Bad value
	The fix is to make the 'static' library also a LTLIBRARY, but don't install
	it.  See http://sources.redhat.com/ml/automake/2003-07/msg00064.html
	* src/uicommon/Makefile.am: Change library back to an LTLIBRARY, but still
	don't install it
	* src/Makefile.am: update library filename (.la vs .a)
	* src/persp/dbgperspective/Makefile.am: update library filename (.la vs .a)
	* src/workbench/Makefile.am: update library filename (.la vs .a)

2006-11-01  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 01 Nov 2006 22:05:54 +0100 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: Add an "EMPTY_TYPE" content type
	to GDBMIValue.
	GDBEngine::parse_gdbmi_tuple(): fixed a typo here. When the typle
	was empty ("{}") the a_to out parameter was not set. not good.
	GDBEngine::parse_gdbmi_value(): in the case of an empty gdbmi tuple,
	set the value content to EMPTY_TYPE .
	GDBEngine::parse_threads_list(): beware the thread list can be empty
	in some cases, for instance, when an app has exited. We get the
	signal in a context where the target has zero threads (the target
	has exited).
	* src/persp/dbgperspective/nmv-throbber.cc,h: make the functions
	virtual so that we can derive from it and switch from one
	implementation to an other.
	* src/persp/dbgperspective/nmv-ephy-throbber.h,cc: create an
	EphyTrhobber widget that uses the epiphany throbber.
	* src/persp/dbgperspective/ephy-spinner.c,h: add these files from
	epiphany source code. We now have a throbber that features a moving
	foot. Nemiver is now DaMovingFoot !!!

2006-11-01  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Added a couple new items
	* TODO: Added a couple new items

2006-11-01  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 01 Nov 2006 19:04:45 +0100 Dodji Seketeli
	* src/main.cc: man, don't reference "DBGPerspective" anywhere anymore.

2006-11-01  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 01 Nov 2006 17:14:30 +0100 Dodji Seketeli
	* src/main.cc: DBGPerspective plugin is now called dbgperspective.
	* src/persp/dbgperspective/schemas/Makefile.am: by default, don't
	killall -HUP gconf2-d. You can nevertheless do RESTART_GCONF=1 make
	install, if you wan't to restart gconfd upon install.

2006-11-01  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Added some basic documentation in preparation for the first release.
	* README: Added some basic documentation in preparation for the first
	release.

2006-11-01  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add information about the mailing list and encourage people to contact us
	* AUTHORS: add information about the mailing list and encourage people to
	contact us via the mailing list
	* src/persp/dbgperspective/nmv-dbg-perspective.cc: Fix another instance of
	keyboard shortcut duplication.  Both "_Saved Sessions..." and "_Save Session
	to disk" used "S" as the keyboard shortcut.  Since "S" is a standard
	shortcut for the action of saving something, I changed the first one to "v"
	and reworded it slightly to "Resume Sa_ved Session..."

2006-10-31  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 31 Oct 2006 15:07:28 +0100 Dodji Seketeli
	* src/workbench/Makefile.am: link against the now static library
	libnemiveruicommon.a .
	* src/dbgengine/libdbgengine.pc.in: remove this file from repository.
	* src/uicommon/Makefile.am: make libnemiveruicommon.a be a static
	library that is not installed.
	* src/Makefile.am: make the nemiver executable link with the now static
	libnemiveruicommon.a
	* configure.ac: removed src/dbgengine/nemiver-gdb-plugin.pc and
	src/dbgengine/libdbgengine.cc from distribution.

2006-10-31  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	change the do_scroll() function so that the current line must be at least
	* src/persp/dbgperspective/nmv-source-editor.cc: change the do_scroll()
	function so that the current line must be at least within a 10% margin on
	the top and bottom of the source editor.  It turns out that this was as
	simple as adding an extra argument to the TextView::scroll_to() function. I
	tried a few different values (including 50% which tried to keep the current
	line always in the middle of the source editor), but 10% seemed about right
	to me.  That way the text doesn't scroll too often (which makes me lose my
	place), but it still makes sure that you have enough context around to make
	sense of the code.  But the value could be tweaked if desired.
	* TODO: remove finished item from the list

2006-10-30  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 30 Oct 2006 22:37:11 +0100 Dodji Seketeli
	* src/dbgengine/Makefile.am: install the dynmod iface into
	$prefix/include/nemiver/dynmods.
	* src/workbench/nmv-i-perspective.h: moved this into
	src/persp/nmv-i-perspective.h
	* src/workbench/Makefile.am: install the dynmod iface into
	$(prefix)/include/nemiver/dynmods.
	* src/confmgr/Makefile.am: install the dynmod iface into
	$(prefix)/include/nemiver/dynmods.

2006-10-30  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 30 Oct 2006 22:17:02 +0100 Dodji Seketeli
	* src/dbgperspective: move this into src/persp/dbgperspective so that
	we can have several types of perspective plugin under src/persp in
	the future.

2006-10-30  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 30 Oct 2006 22:07:00 +0100 Dodji Seketeli
	* added the src/persp directory.

2006-10-30  Dodji Seketeli <dodji@src.gnome.org>


2006-10-30  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 30 Oct 2006 21:08:02 +0100 Dodji Seketeli
	* src/DBGPerspective: rename this directory into src/dbgperspctive.
	Mixed case sucks for me. It takes too much typing  :-) .
	Propagate this change wherever needed.

2006-10-30  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add a note about keeping the current line centered in the source editor so
	* TODO: add a note about keeping the current line centered in the source
	editor so I don't forget about it
	* src/DBGPerspective/glade/preferencesdialog.glade: Change the stock ID on
	the button to "Remove" source directories from Stock::DELETE to
	Stock::REMOVE.  This matches the Remove button for environment variables now
	* src/DBGPerspective/glade/proclistdialog.glade: Fix capitalization of the
	window title of the Attach to process dialog.  Also change the wording to
	match the menu item more closely (i.e. "Attach to a running program" instead
	of "Attach to a process" since the menu item says "Attach to running
	program")

2006-10-30  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 30 Oct 2006 10:07:07 +0100 Dodji Seketeli
	* TODO: removed the "add/show lines numbers in prefs" from TODO. This task
	is done. Added new tasks in here. Nothing targeted for pre-0.1 though.

2006-10-29  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	a few minor HIG fixes, mostly involving spacing, border widths, and
	* src/DBGPerspective/glade/preferencesdialog.glade,
	src/DBGPerspective/glade/proclistdialog.glade,
	src/DBGPerspective/glade/savedsessionsdialog.glade: a few minor HIG fixes,
	mostly involving spacing, border widths, and capitalization.
	* src/DBGPerspective/nmv-dbg-perspective.cc: add a stock icon for stop,
	capitalize the 'preference' menu item, Renamed the "Continue until" menu
	"Run to cursor".  Feel free to change it back if you don't like it.

2006-10-29  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 29 Oct 2006 23:00:24 +0100 Dodji Seketeli
	* src/DBGPerspective/nmv-dbg-perspective.cc: make sure the
	source_editor->source_view ().signal_leave_notify_event() get
	delivered to us before it get delivered to the default slot.
	* src/DBGPerspective/nmv-source-editor.cc: oops, forgot to
	::add_masks() a bunch of events, especially the
	Gdk::LEAVE_NOTIFY_MASK. Otherwise, we don't detect when we get out
	of the source view area. This lead to a hover on variables bugs
	reported by Jonathon Jongsma. I hope this entry fixes it.

2006-10-29  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 29 Oct 2006 21:51:28 +0100 Dodji Seketeli
	* src/DBGPerspective/nmv-preferences-dialog.cc,h: make this talk
	with confmgr to store the prefs changed by the user and to init
	the widget. Make the dialog take an IWorkbench& in parameter to
	acess the IConfMgr singleton.
	Take the new source editor related prefs in account.
	* src/DBGPerspective/schemas/nemiver-dbgperspective.schemas: added
	two new keys: /apps/nemiver/dbgperspective/show-source-line-numbers
	and: /apps/nemiver/dbgperspective/highlight-source-code.
	* src/DBGPerspective/nmv-dbg-perspective.cc: update this to
	enjoy the new PreferencesDialog. Get the "highlight source code" and
	"show line numbers" prefs from confmgr.
	* src/DBGPerspective/nmv-source-editor.cc: don't show line numbers by
	default. Clients will do that.
	* src/DBGPerspective/glade/preferencesdialog.glade: add
	source editor related preferences.
	* src/confmgr/nmv-gconf-mgr.cc: in client_notify_func(), cast to bool
	when setting gboolean value to a boost variant, otherwise, the
	variant later thinks it has an int.

2006-10-29  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add a Save icon to the new "Save session to disk" menu item
	* src/DBGPerspective/nmv-dbg-perspective.cc: add a Save icon to the new
	"Save session to disk" menu item

2006-10-28  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 28 Oct 2006 22:28:46 +0200 Dodji Seketeli
	* TODO: remove the on demand session serialisation from TODO. This
	item is now done.
	* src/DBGPerspective/nmv-dbg-perspective.cc,
	src/DBGPerspective/menus/menus.xml: added the save session
	menu action.

2006-10-28  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 28 Oct 2006 14:06:44 +0200 Dodji Seketeli
	* TODO: removed the "continue until" task from TODO.
	I won't do the "jump to line" task for now because it seems there
	is no gdb/mi command to do "jump to line". I will need to do this
	using the defaut gdb interpreter, but later.

2006-10-28  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 28 Oct 2006 13:05:55 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-dbg-perspective.cc,
	src/DBGPerspective/menus/menus.xml: add the "continue until"
	menu item to the "debug" menu and to the contextual menu.
	Basically, it makes the debugger continue execution untill the
	currently selected line
	* src/DBGPerspective/nmv-source-editor.cc,h: added
	SourceEditor::get_file_name() to the the current file basename.
	This is used by the "continue until" feature.

2006-10-28  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 28 Oct 2006 11:43:19 +0200 Dodji Seketeli
	* TODO: removed the thread selection widget task from TODO.

2006-10-28  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 28 Oct 2006 11:25:01 +0200 Dodji Seketeli
	* configure.ac, */Makefile.am: cleanup link time deps to that
	libraries links with what they need _only_ .
	* src/workbench/nmv-workbench.cc: do the gnomevfs init here so that
	it is not done in src/common/nmv-initializer.cc anymore. This way
	libnemivercommon.so only depends on glibmm .
	* src/DBGPerspective/nmv-dbg-perspective.cc: when the user hovers on the
	file editor notebook label, show the full path of the file.
	Stop the mouse immobile timer when the mouse leaves the source
	editor. This prevents from randomly showing the variable content
	popup tip.
	Cleaner way to update the call stack and the local variables
	when the user selects another thread.
	Limit the number of saved debugging session to 5. I need to set a
	gconf for that, instead of the hardcoding the value '5'.
	* src/DBGPerspective/nmv-vars-editor.cc: kill a memory leak in here.
	Add VarsEditor::show_local_variables_of_current_function() to
	trigger the display of the local variables of the current function,
	on demand.
	* src/DBGPerspective/nmv-call-stack.cc: implement the
	CallStack::update_stack() function that was cowardly left
	unimplemented.
	* src/common/nmv-initializer.cc: remove
	gnome_vfs_init/gnome_vfs_shutdown() from here. This avoids linking
	libnemivercommon against the world, including avahi. That was too
	much.
	* src/main.cc: kill a memory leak in here.
	* tests/Makefile.am: link against libnemivercommon.so only.

2006-10-27  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 27 Oct 2006 20:02:32 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-thread-list.cc: make this work somehow.
	* src/DBGPerspective/nmv-dbg-perspective.cc: Pack the thread-list widget
	in the call stack view widget. when the user selects a new
	thread, make sure we list the local variables and the call stack.
	Okay this is the first changeset in which we have the thread list
	working somehow.

2006-10-27  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 27 Oct 2006 08:07:36 +0200 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h: cleanup the API a
	bit. Make IDebugger::Frame contain the frame level. Remove the
	a_level param from the GDBEngine::Priv::parse_frame() function.
	Remove the duplicate of that function. Because of the (public) API
	cleanup, I was obliged to update many of the clients of
	nmv-i-debugger.h .
	* src/DBGPerspective/nmv-thread-list.cc: connect to debugger and
	widget signals. Still nothing visible yet. I still have to make
	IDebugger list the frame stack and the local variables when the user
	switches from a thread to another.

2006-10-25  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 25 Oct 2006 23:22:54 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-tread-list.cc,h: started to hack on this
	thread list component. . I just push what I have for now.
	Nothing is visible yet.

2006-10-25  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 25 Oct 2006 21:46:51 +0200 Dodji Seketeli
	* libgdbmod.pc has been renamed. Rename it in Makefile.am as well.

2006-10-24  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	add more fine-grained _LIBS and _CFLAGS variables so that we don't have to
	* configure.ac: add more fine-grained _LIBS and _CFLAGS variables so that we
	don't have to link all libraries against every dependency
	* src/common/libnemivercommon.pc.in: improve dependencies, only add
	NEMIVER_INCLUDE_DIR to the include path instead of
	NEMIVER_INCLUD_DIR/libnemivercommon.  To include a header from
	libnemivercommon, you must now specify libnemivercommon/header.h
	* src/uicommon/Makefile.am, src/workbench/Makefile.am,
	src/common/Makefile.am, src/confmgr/Makefile.am,
	src/dbdimpl/sqlite/Makefile.am, src/dbgengine/Makefile.am: only link against
	required libraries instead of all libraries
	* src/dbgengine/libdbgengine.pc.in: only include NEMIVER_INCLUDE_DIR
	* src/dbgengine/libgdbmod.pc.in: renamed to nemiver-gdb-plugin.pc.in

2006-10-23  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Add some infrastructure to make it easier to do releases. making the
	* Makefile.am: Add some infrastructure to make it easier to do releases.
	making the 'release-publish' target will automatically do a distcheck, sign
	the release tarball with gpg, tag the release in svn, and upload to the gna
	download server.  I haven't actually tested the svn tagging and uploading
	yet.  It's early, but I figured I'd get this stuff in place so when we want
	to make a release it goes quickly.  Also added a few files to DISTCLEANFILES
	to pass distcheck.
	* configure.ac: disable symbols visibility control by default for x86_64
	architectures so that I don't need to specify it manually everytime I
	re-autogen.  Disable gconf schemas installation during distcheck so that
	distcheck doesn't fail
	* README: removed the note about symbols visibility on amd64 since it's
	disabled by default for x86_64 in configure.ac
	* src/DBGPerspective/schemas/Makefile.am: Only install the schemas if the
	--enable-schemas-install configure option is set (default = yes)
	* po/ChangeLog: added this file (empty) since distcheck seems to insist on
	having it

2006-10-23  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	oops, need to add libglademm.h include here. Removing it from nmv-env.h
	* src/uicommon/nmv-ui-utils.h: oops, need to add libglademm.h include here.
	Removing it from nmv-env.h broke this.

2006-10-23  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	generate .pc files from .pc.in files, define a symbol for
	* configure.ac: generate .pc files from .pc.in files, define a symbol for
	NEMIVER_INCLUDE_DIR that can be used in subdir makefiles and .pc files
	* src/common/libnemivercommon.pc.in, src/common/Makefile.am: install
	pkg-config file for libnemivercommon
	* src/common/nmv-env.h: remove include for libglademm.h since we don't
	actually use any symbols from libglademm and we don't want this as a
	dependency in libnemivercommon
	* src/dbgengine/Makefile.am, src/dbgengine/libdbgengine.pc.in,
	src/dbgengine/libgdbmod.pc.in: install new pkg-config files for dbgengine
	and the gdb backend
	* src/confmgr/Makefile.am, src/uicommon/Makefile.am,
	src/workbench/Makefile.am: use new NEMIVER_INCLUDE_DIR variable
	* TODO: remove libnemivercommon.pc task

2006-10-22  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 22 Oct 2006 23:50:27 +0200 Dodji Seketeli
	* TODO: updated this. Move the [pre 0.1] task to the top. Add
	a libnemivercommon.pc task.

2006-10-22  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 22 Oct 2006 23:31:50 +0200 Dodji Seketeli
	* src/*Makefile.am: cleanup to make sure the public header get
	installed in $(prefix)/include/nemiver.

2006-10-22  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 22 Oct 2006 22:42:34 +0200 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h: we can now list
	the threads of the target and select select one of them.
	Functions are IDebugger::list_threads() and
	IDebugger::select_thread(). The two signaling functions are
	IDebugger::threads_listed_signal() and
	IDebugger::thread_selected_signal().
	* tests/test-breakpoint.cc:  updated this to test the new thread
	thing. The way I use this is:
	cd tests ; ./runtestbreakpoints .libs/fooprog
	And I look at the output :-)

2006-10-22  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	made it so that the status notebook pane doesn't resize with the main
	* src/DBGPerspective/glade/bodycontainer.glade: made it so that the status
	notebook pane doesn't resize with the main window.  In other words, when you
	make the main window bigger or smaller, the status notebook will stay the
	same size and the sourceview section will get bigger or smaller.  I think
	this is a more expected behavior.

2006-10-22  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	added a note about compiling without symbols visibility control on amd64
	* README: added a note about compiling without symbols visibility control on
	amd64 machines.

2006-10-20  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 20 Oct 2006 08:59:21 +0200 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: replaced
	parse_tuple(), parse_list(), parse_value(), parse_result()
	by parse_gdbmi_tuple(), parse_gdbmi_list(),
	parse_gdbmi_value(), parse_gdbmi_result() for better legibility.
	Started to add GDBEngine::Priv::parse_threads_list() to parse
	the thread list result record, which is the result of the
	gdb command "-thread-list-ids". It isn't used yet.
	* src/DBGPerspective/nmv-dbg-perspective.cc: renamed
	DBGPerspective::on_call_stack_copy_to_clipboard into
	DBGperspective::on_call_stack_copy_to_clipboad_action() to keep
	the naming scheme homogenous with what already exists.
	In DBGPerspective::load_menu(): put the return statement outside the
	try/catch block to prevent gcc from warn about the function not
	returning any value.
	* TODO: updated this. Pointer dereferencing is done now.

2006-10-20  Jonathon Jongsma <jjongsma@src.gnome.org>

	removed the copy-to-clipboard item from the TODO list since it's basically done now

2006-10-20  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	added new context menu for copying the call stack to the clipboard Don't
	* src/DBGPerspective/menus/Makefile.am,
	src/DBGPerspective/menus/callstackpopup.xml: added new context menu for
	copying the call stack to the clipboard
	* src/DBGPerspective/nmv-call-stack.cc, src/DBGPerspective/nmv-call-stack.h:
	Don't copy to clipboard on double-click anymore, just provide a to_string()
	function that we can use to get a string representation of the full call
	stack and can copy to the clipboard when a menu item is selected
	* src/DBGPerspective/nmv-dbg-perspective.cc: popup a context menu when
	right-clicking on the call stack to copy it to the clipboard

2006-10-20  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 20 Oct 2006 06:35:42 +0200 Dodji Seketeli
	* renamed this file into TODO. That's more accurate now :-)

2006-10-20  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 20 Oct 2006 06:34:57 +0200 Dodji Seketeli
	* updated the todo list.

2006-10-19  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	hack up a little copy-stack-trace-to-clipboard functionality. Currently
	* src/DBGPerspective/nmv-call-stack.cc: hack up a little
	copy-stack-trace-to-clipboard functionality.  Currently it's triggered by
	double-clicking on the call stack treeview, but that's just for testing.  It
	will be changed to a right-click context menu soon.  I seem to be having
	some utf-8 onversion issues from time to time that will probably need to be
	investigated.  I can't help thinking that there's a better way to do this
	whole thing though.  Currently we have two basic data sources: a list of
	Frames and a map of argument lists that apply to these frames.  It seems
	like the argument list should be a member of the Frame class itself.  Then
	we could easily convert the stack Frame to a string by implementing
	Frame::operator<<()

2006-10-18  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 19 Oct 2006 00:21:28 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-vars-editor.cc: no more need to right click
	in the local-vars-editor to either dereference pointers or to look
	at the complete type of a variable. Now, to look at the complete
	type, double click in the type column, on the variable row.
	Pointer variables are dereferenced automatically. When they can't be
	dereferenced, for example because the pointer is set to NULL, the
	pointer has an empty child row. Maybe we could set the name of this
	row to "<undefined value>" or something like that.

2006-10-17  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add two items to todo list: "watch" widget and make variables change color when their values change

2006-10-17  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 18 Oct 2006 00:39:42 +0200 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: OnVariableTypeHandler::do_handle():
	When a request to print a type of a variable fails because the
	variable doesn't exist, don't log an error in the defaut domain.
	Log it in the nmv-gdb-engine.cc log domain, instead.

2006-10-17  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 18 Oct 2006 00:17:05 +0200 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc:
	A bit of cleanup.
	IDebugger::Priv::parse_member_variable(): fix so that it parses sub
	attributes correctly. This is also a bit less complex now.
	* src/dbgengine/nmv-i-debugger.h: fixed
	IDebugger::Variable::build_qname().
	* src/DBGPerspective/nmv-vars-editor.cc: heavily debunk this and  make
	it show and inspect local variables correctly. It sort of works now.

2006-10-15  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 16 Oct 2006 00:12:57 +0200 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc: add traces in cases of error.
	* src/dbgengine/nmv-i-debugger.h: added
	IDebugger::Variable::build_qname() to get the qualified name of a
	variable (eg foo.bar, when bar is a  member of foo).
	* src/DBGPerspective/nmv-vars-editor.cc:  started to add
	infrastructure for better handling of variable inspection
	(including pointer dereferencing and the like). Nothing is visible
	yet, though.
	* src/common/nmv-ustring.cc: made a better implementation of
	UString::chomp(). The previous one was too complicated.
	* short-term-todo-list.txt: updated this.

2006-10-14  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 14 Oct 2006 01:53:56 +0200 Dodji Seketeli
	* src/dbgengine/nmv-i-debugger.h,nmv-gdb-engine.cc: added
	IDebugger::print_pointed_variable_value() and
	IDebugger::pointed_variable_value_signal() to support printing
	the type of a variable.
	* src/DBGPerspective/nmv-vars-editor.cc,h:
	The local variables widget colums are resizable.
	Now, the type of all the local variables are
	printed in the "type" column. Sometimes, the type name spans over
	several lines. In that case, what's shown in the type column is only
	the first line, followed by an ellipsis (...). The user can then right
	click on the row and hit "show type". A dialog popups,
	showing the entire type. This is necessary with non POD types.
	Also, when a row contains a variable "V" which is a pointer,
	the user can right click and choose "dereference". "V"
	immediately gets a child, named "*V" which represents what V
	points to. There are two problems with this for nowre are two
	problems with this for now. First, *V's members don't have type
	information updated yet. Second, each time you hit "next" or
	"continue", the dereferenced variables are lost. You need to right
	click and hit dereference to have them again. Fixing that is a bit
	hard so I commit what I have for now.
	* src/common/nmv-ustring.h,cc: Added UString::printf() and
	UString::vprintf. This allows doing things like:
	UString foo ; foo.printf ("do %", "this"); It sets foo to
	"do this".  This can be usefull to come up with strings that are
	better translatable. Also added UString::get_number_of_lines().
	* src/common/nmv-option-utils.cc,h: fixed some stupidities here.
	I should use Glib::OptionEntry instead of the C api one day.

2006-10-13  Hubert Figuiere <hub@src.gnome.org>

	added debian packaging

2006-10-12  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 12 Oct 2006 22:22:22 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-dbg-perspective.cc: change the name of the
	RunMenuItem into "Restart".

2006-10-12  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	update to mention the copy/paste stack trace feature so that I don't
	* short-term-todo-list.txt: update to mention the copy/paste stack trace
	feature so that I don't forget about it.

2006-10-12  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 12 Oct 2006 14:42:13 +0200 Dodji Seketeli
	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h: renamed
	IDebugger::got_proc_info_signal() into
	IDebugger::got_target_info_signal(). Added
	IDebugger::get_target_info() to trigger target info acquisition.
	Also, prevent IDebugger::stop() from sending the stop signal to
	target when we don't have the target PID, otherwise, we would be
	sending the stop signal to PID 0, which exits the current process.
	* src/DBGPerspective/nmv-dbg-perspective.cc: we get target info (PID
	and absolute path of the exe) using IDebugger::get_target_info().
	Make sure we make that request the first time the target is
	stopped, after we have requested IDebugger::run().
	The problem with that approach is that we cannot stop the target
	(send the stop signal) until the target hasn't stopped at least
	once, because IDebugger needs to know the PID of the target in order
	to send him the signal. Remember, we can't get that PID before the
	target stops at least once.
	The work around would be to find a way to know the PID of the
	target. We can guestimate that looking a the child processes of GDB.
	Also, renamed "Run" menuitem into "Run in a new process", to stress
	that it creates a new process, otherwise people tend to use it
	instead of using "continue".
	* src/DBGPerspective/menus/toolbar.xml,menu.xml: move the run
	menuitem/toolbutton to the end. Put continue at the beginning.

2006-10-12  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 12 Oct 2006 08:53:28 +0200 Dodji Seketeli
	* src/dbgengine/nmv-i-debugger.h,nmv-gdb-engine.cc: added a new
	IDebugger::print_variable_type() interface. This requests the
	engine to print the type of a named variable. As an answer,
	IDebugger later emits the IDebugger::variable_type_signal() event
	carrying a pair variable name/variable type.
	* tests/fooprog.cc,test-breakpoint.cc: updated this to test the
	new IDebugger::print_variable_type() interface.

2006-10-12  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	use monospace font for source editor.
	* src/DBGPerspective/nmv-source-editor.cc: use monospace font for source
	editor.

2006-10-12  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Move "Go to source" above "delete" in the menu add new
	* src/DBGPerspective/menus/breakpointspopup.xml: Move "Go to source" above
	"delete" in the menu
	* src/DBGPerspective/nmv-breakpoints-view.cc,
	src/DBGPerspective/nmv-breakpoints-view.h: add new get_selected_breakpoint()
	function, store breakpoint object in treemodel
	* src/DBGPerspective/nmv-dbg-perspective.cc: Implement actions for
	breakpoint view context menu (i.e. "Go to source" and "delete").  In
	addition, you can jump to a breakpoint in source by double-clicking on it.

2006-10-10  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::on_gdb_stdout_has_data_signal(): in some cases
	gdb can send a complete ouptut record + a part of the next one.
	So detect the end of an output record, parse that relevant part of
	it, and append the coming gdb output to what remains in the incoming
	buffer. This is not done really efficiently for now as it involves
	too much copying and memory allocation. But let's see if this works
	first, optimization will come up later.

2006-10-10  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 10 Oct 2006 13:22:32 +0200 Dodji Seketeli
	* support -Wextra with NEMIVER_DEVEL=on is set.
	* fix a gdbmi parsing bug when parsing function arguments with \" content.
	* rename a static variable to have it not be bound to a variable of the
	same name in the same .so library.

2006-10-10  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	I figured out how to trigger the popup menu on button press instead of
	* src/DBGPerspective/nmv-dbg-perspective.cc: I figured out how to trigger
	the popup menu on button press instead of button release.  It needs to be
	connected with connect_notify() instead of just connect() (see gtkmm bug
	#89780)

2006-10-10  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	a new widget for displaying the list of currently set breakpoints in the
	* src/DBGPerspective/nmv-breakpoints-view.cc,
	src/DBGPerspective/nmv-breakpoints-view.h: a new widget for displaying the
	list of currently set breakpoints in the status notebook area.  It currently
	displays a list of breakpoints that gets updated in a rather crude way after
	breakpoints are added or removed.  It also pops up a context menu which has
	a choice of 'delete' or 'go to source', but these menu items don't currently
	do anything yet.  I thought I'd just commit what I had for now.
	* src/DBGPerspective/Makefile.am: add new breakpoints-view files
	* src/DBGPerspective/menus/Makefile.am,
	src/DBGPerspective/menus/breakpointspopup.xml: add new breakpoints list
	popup menu
	* src/DBGPerspective/nmv-dbg-perspective.cc: incorporate the new Breakpoint
	list widget and popup menu.  Still needs a lot of work, but it's a start.
	* src/main.cc: break out of the loop after we find the session we're looking
	for.

2006-10-09  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 09 Oct 2006 22:21:59 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-popup-tip.cc: use a textview instead of a
	label. Labels don't work very well for long texts.
	* src/DBGPerspective/nmv-dbg-perspective.cc:
	DBGPerspective::on_debugger_variable_value_signal ():
	show variable names in the popup tips.

2006-10-09  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 09 Oct 2006 19:42:42 +0200 Dodji Seketeli
	* to see the content of a variable, left the mouse over it for 1 second.
	* take pending breakpoint into account.
	* make stack trace setting more robust w.r.t some gdb errors.

2006-10-08  Dodji Seketeli <dodji@src.gnome.org>

	Sun, 08 Oct 2006 16:10:47 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-dbg-perspective.cc: update
	DBGPerspective::Priv::prog_path with what comes from
	IDebugger::got_proc_info_signal (). That way,
	DBGPerspective::Priv::prog_name is alway set to the absolute
	prog path. A side effect is that the absolute prog path is saved
	in the on disk saved session. This fixes a problem reported by
	Jonner at https://mail.gna.org/public/nemiver-list/2006-10/msg00004.html .

2006-10-06  Dodji Seketeli <dodji@src.gnome.org>

	Sat, 07 Oct 2006 01:44:09 +0200 Dodji Seketeli
	* src/worbench/nmv-workbench.cc,nmv-i-workbench: add a
	IWorkbench::get_main_context() API.
	* src/DBGPerspective/nmv-dbg-perspective.cc: started to add
	some infrastructure code to help trigger an action when the mouse
	is put on a word for more than one second. This will be used to
	popup a tooltip showing the content of a variable when the mouse is
	set over the variable for at least one second or so. More on this
	later.
	* src/DBGPerspective/nmv-source-editor.cc: a bit of cleanup.

2006-10-06  Dodji Seketeli <dodji@src.gnome.org>

	Fri, 06 Oct 2006 18:54:31 +0200 Dodji Seketeli
	* short-term-todo-list.txt: updated task list

2006-10-05  Dodji Seketeli <dodji@src.gnome.org>

	Thu, 05 Oct 2006 23:56:29 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-vars-editor.cc: removed the global variables
	row from the variable editor because there are way too much global
	variables in a program. Showing them there is counter productive.
	Instead, VarsEditor should turn into a real variable inspector widget
	that could show the content of arbitrary variables and be able to
	edit variables, as well. This is obviously a post 0.1 feature.
	* short-term-todo-list.txt: updated this.

2006-10-04  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 04 Oct 2006 23:35:26 +0200 Dodji Seketeli
	* src/nmv-dbg-engine.cc: make LOG_PARSING_ERROR() show up in the
	default domain because I suspect a couple of parsing errors to occurs.
	So I want to make them appear.
	GDBEngine::Priv::parse_member_variable(): Fix this function to make
	it support objects/structure table parsing too. GDBMI is a bit
	harsh because when you get ^done,value="<foo>", you don't know if
	foo is going to be a table or not. This function is really getting a
	bit hackish to my taste. Maybe I should find a way to split it into
	several functions, each one parsing a different kind of variable.

2006-10-03  Dodji Seketeli <dodji@src.gnome.org>

	Wed, 04 Oct 2006 00:46:31 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-sess-mgr.h,cc: added a
	ISessMgr::clear_session() api, to clear an existing session without
	deleting it. Deleting means erasing everything including erasing the
	session entry in the sessions table. clearing meanings erasing the
	session content, but keeping the entry in the sessions table.
	* src/DBGPerspective/nmv-dbg-perspective.cc:
	in DBGPerspective::record_and_save_session() clear what's in the
	session before adding more stuff to it. Otherwise, the session
	content keeps growing, which leads to the duplication of data
	pointed to by Jonner in
	https://mail.gna.org/public/nemiver-list/2006-10/msg00001.html .
	This should fix that bug.

2006-10-03  Dodji Seketeli <dodji@src.gnome.org>

	Tue, 03 Oct 2006 08:42:00 +0200 Dodji Seketeli
	* src/DBGPerspective/nmv-dbg-perspective.cc,h:
	DBGPerspective::execute_program(): add a vector of breakpoints to set,
	in parameter.
	In DBGPerspective::execute_session(): load the breapoints saved in
	the session and call DBGPerspective::execute_program() with them.

2006-10-03  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	remove an item from the TODO list that Dodji already implemented. I
	* short-term-todo-list.txt: remove an item from the TODO list that Dodji
	already implemented.  I haven't had much time to hack on nemiver lately, but
	at least I can do a little housekeeping :)  Also added a few more things to
	svn:ignore

2006-10-02  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 02 Oct 2006 23:38:51 +0200 Dodji Seketeli
	* short-term-todo-list.txt: updated the todo list.

2006-10-02  Dodji Seketeli <dodji@src.gnome.org>

	Mon, 02 Oct 2006 22:21:56 +0200 Dodji Seketeli
	* src/dbgengine/nmv-i-debugger.h: add a new parameter to
	IDebugger::got_proc_info_signal(): the path of the target.
	Added IDebugger::get_env_variables () and IDebugger::get_target_path().
	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::extract_proc_info(). Make this extract the target
	path as well as the process ID. Implement the new interfaces that
	got added. In GDBEngine::load_program() don't 'info proc" here
	because the target may not have been really loaded. This should be
	done in IDebugger::run() or in the IDebugger::attach() only.
	* src/DBGPerspective/nmv-dbg-perspective.cc: in
	DBGPerspective::get_contextual_menu(): add the content of the
	'debug' menu to the contextual menu.
	* tests/test-breakpoint.cc: update to reflect api changes in
	IDebugger.

2006-10-01  Dodji Seketeli <dodji@src.gnome.org>

	* src/main.cc: now,  "nemiver myprog progarg0 progarg1" works.
	no more need to do nemiver --debug myprog progarg0 progarg1.
	* src/DBGPerspective/glade/runprogramdialog.gladep: removed this
	file from svn.
	* src/dbgengine/nmv-gdb-engine.cc: GDBEngine::Priv::launch_gdb():
	locate the absolute filepath of the program being launched, scanning
	the PATH environement variable and the cwd.
	If the program is not found, return an error.
	Now, if I type 'nemiver aprog', the debugger will locate
	aprog in the path and launch it. There is no more need to give
	the exact absolute path.

2006-09-30  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-preferences-dialog.cc,h: renamed
	nmv-cur-session-props-dialog.h,cc. Also fix some bugs in
	adding/removing directories.
	* src/DBGPerspective/nmv-dbg-perspective.cc: propagate the
	rename of nmv-cur-session-props-dialog.h into
	nmv-preference-dialog.h
	* src/DBGPerspective/glade/preferencesialog.glade: make the
	scrollbars automatic. Renamed currentsessiondialog.glade into
	preferencesdialog.glade.

2006-09-30  Dodji Seketeli <dodji@src.gnome.org>

	* menus/menubar.xml,src/workbench/nmv-workbench.cc: add an edit menu.
	* src/dbgengine/nmv-gdb-engine.cc: add some more traces.
	* src/DBGPerspective/nmv-dialog.h: add Gtk::Dialog, and
	Gnome::Glade::Xml forward decls to make this .h file self contained
	w.r.t type declarations. Also, prefix the member attributes by "m_".
	All the inherited classes have also been changed to reflect these
	changes.
	* src/DBGPerspective/glade/currentsessiondialog.glade,
	src/DBGPerspective/nmv-cur-session-props-dialog.h,cc: a new
	preference dialogs. It started as a dialog to edit the session
	properties but I turned that it is better putting all the preference
	editing here. I must then change the name of the dialog into
	nmv-preference-dialog.h,cc, I think.
	* src/DBGPerspective/menus/menus.xml: add a edit -> preferences menu.

2006-09-29  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	First crack at creating a dialog for executing saved debugging sessions
	* src/DBGPerspective/glade/savedsessionsdialog.glade: First crack at
	creating a dialog for executing saved debugging sessions from the GUI
	* src/DBGPerspective/glade/Makefile.am: install new glade file
	* src/DBGPerspective/menus/menus.xml: add menu item for launching the saved
	sessions dialog
	* src/DBGPerspective/Makefile.am,
	src/DBGPerspective/nmv-saved-sessions-dialog.cc,
	src/DBGPerspective/nmv-saved-sessions-dialog.h: add a Saved Sessions dialog.
	The functionality works, but it's just the bare minimum right now (e.g. pick
	a session and execute it).  You can't yet edit anything about the session or
	remove a session from the list.
	* src/DBGPerspective/nmv-dbg-perspective.cc: connect the new saved sessions
	menu item to the dialog, and execute the selected session if the user clicks
	OK on the dialog.

2006-09-29  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	missing quote for fullfilename in add breakpoint sql query. $schemafiles
	* src/DBGPerspective/nmv-sess-mgr.cc: missing quote for fullfilename in add
	breakpoint sql query.
	* src/DBGPerspective/schemas/Makefile.am: $schemafiles was not defined, use
	$files instead

2006-09-28  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-i-debugger.h: renamed
	IDebugger::BreakPoint::full_file_name() into
	IDebugger::Breakpoint::file_full_name() so that it is homogeneous with
	IDebugger::Frame::file_full_name().
	* src/dbgengine/nmv-gdb-engine.cc,
	src/DBGPerspective/nmv-sess-mgr.h,cc:
	propagated the IDebugger::Breakpoint::full_file_name() change.
	Also, add a ISessMgr::BreakPoint::file_full_name() property.
	* src/DBGPerspective/sqlscripts/sqlite/create-tables.sql: updated
	the database to add the new file_full_name property in the
	breakpoints table.
	* src/uicommon/nmv-ui-utils.h: move the get_widget_from_glade()
	helpers from nmv-env.h to here. nmv-env.h doesn't depend on Gtk+
	anymore.
	* src/common/nmv-namespace.h: add a couple of namespace macros
	to keep emacs users happy with w.r.t indentation and namespaces.
	* src/DBGPerspective/nmv-dialog.cc,
	src/DBGPerspective/nmv-load-core-dialog.cc,
	src/DBGPerspective/nmv-run-program-dialog.cc,
	src/DBGPerspective/nmv-proc-list-dialog.cc:
	propagated the ui_utils::get_widget_from_glade() move.
	* src/confmgr/nmv-i-conf-mgr.h,nmv-gconf-mgr.h: added a new
	IConfMgr dynmod to abstract configuration properties storage
	management.
	Today, only a gconf backend implementation is provided.
	Should a sqlite3 backend be needed, it could be easily be added.
	* src/workbench/nmv-i-workbench.h,,nmv-workbench.cc:
	remove the previous propertie map.
	Add a IWorkbench::get_configuration_manager() entry point to get
	the Conf manager. Do the proper initialisation of the ConfManager.
	* src/DBGPerspective/nmv-dbg-perspective.cc: When the debugging info
	don't provide the full source file paths, use IConfMgr to look up
	source files in the list of directories pointed to by the
	/apps/nemiver/dbgperspective/source-search-dirs key. It seems to
	work. We still lack a GUI to update settings that sit in gconf.
	* src/main.cc: don't use the IWorkbench::properties() anymore as
	it has disapeared.

2006-09-25  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/schemas/Makefile.am,
	src/DBGPerspective/schemas/nemiver-dbgperspective.schemas,
	src/DBGPerspective/Makefile.am,
	configure.ac: added a gconf schema to store nemiver's properties
	to come.

2006-09-25  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Add ability to load environment variables that have been saved with the
	* src/DBGPerspective/nmv-dbg-perspective.cc: Add ability to load environment
	variables that have been saved with the session and display them in the
	Execute dialog, etc.
	* src/DBGPerspective/nmv-sess-mgr.cc, src/DBGPerspective/nmv-sess-mgr.h:
	save and restore environment variables when saving and restoring sessions
	* src/DBGPerspective/sqlscripts/sqlite/create-tables.sql: add an
	env_variables table to the session database

2006-09-25  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Fixed a minor bug where when joining from iterators. This came up when you
	* src/common/nmv-ustring.cc: Fixed a minor bug where when joining from
	iterators.  This came up when you pass an argument on the command line (e.g.
	nemiver --debug="/path/to/foo --arg" which ended up duplicating the first
	argument (i.e. it would show "--arg --arg" as the arguments for that
	session).  Fixed by incrementing the iterator before entering the loop

2006-09-24  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-source-editor.cc,h: okay, fire a
	SourceEditor::marker_region_got_clicked_signal() whenever
	a user left clicks in the marker region of the source view.
	* src/DBGPerspective/nmv-dbg-perspective.cc: toggle breakpoint
	when the user clicks in the marker region.
	* short-term-todo-list.txt: udpated todo list.
	* src/dbgengine/nmv-gdb-engine.cc: add more traces to the breakpoints
	parsing code. Do not require the breakpoint gdbmi output to have
	the fullname property as some debug info set don't have it. Client
	code should work things out with the file property only.
	I haven't updated client code for the moment, though.
	Traces on the client side should show and empty fullname property.

2006-09-23  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	I guess I'm an author now don't set the initial value of the core file to
	* AUTHORS: I guess I'm an author now
	* src/DBGPerspective/nmv-load-core-dialog.cc: don't set the initial value of
	the core file to the current working directory.  This doesn't make much
	sense to me.  It already uses the current working directory for the starting
	point for browing for a core file.
	* src/workbench/nmv-workbench.cc: added an "About" dialog.

2006-09-23  Dodji Seketeli <dodji@src.gnome.org>

	* short-term-todo-list.txt: updated TODO list

2006-09-23  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc, src/dbgengine/nmv-i-debugger.h:
	Added IDebugger::state_changed_signal() to that IDebugger notifies
	clients about it's state. State client side state management code
	can then be *much* simplified.
	* src/DBGPerspective/nmv-dbg-perspective.cc: simplified state
	management code a lot. Basically state manement happens
	in only one signal handler, instead of being scattered throught
	the perspective's code. That happens in
	DBGPerspective::on_debugger_state_changed_signal (), logically.
	* src/DBGPerpective/nmv-throbber.h,cc: this is a throbber, not a
	throbb*l*er. Okay, renamed a couple of files for + did some seding
	for that.

2006-09-23  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Moved the button for adding a new environment variable beside the
	* src/DBGPerspective/glade/runprogramdialog.glade: Moved the button for
	adding a new environment variable beside the treeview.  Added a remove
	button.
	* src/DBGPerspective/nmv-run-program-dialog.cc,
	src/DBGPerspective/nmv-run-program-dialog.h: connected the 'remove variable'
	button actions and made it set sensitivity based on whether a row was
	selected in the treeview

2006-09-23  Dodji Seketeli <dodji@src.gnome.org>

	* short-term-todo-list.txt: updated this a bit. Surprisingly, some
	items went out because they got done ! So I added some new items.
	What a funny game :-).

2006-09-23  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Mark the columm headers of the environment variable treeview for
	* src/DBGPerspective/nmv-run-program-dialog.cc: Mark the columm headers of
	the environment variable treeview for translation (also renamed "variable"
	to "name" since the section title already says "environment variables").
	Improved the process of adding a variable significantly by selecting the
	newly added row and setting the cursor so the user can immediately start
	typing the variable name and value.  I still need to add the ability to be
	able to <tab> from one column to the next.

2006-09-22  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	more cleanup. Removed some glade backup files from version control
	* glade/workbench.glade.bak, glade/workbench.gladep.bak: more cleanup.
	Removed some glade backup files from version control

2006-09-22  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	remove duplicate and unused configuration files for the workbench
	* src/workbench/Workbench.conf, src/workbench/Workbench.conf.in: remove
	duplicate and unused configuration files for the workbench

2006-09-22  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Enable the environment variables treeview Beginning implementation of the
	* src/DBGPerspective/glade/runprogramdialog.glade: Enable the environment
	variables treeview
	* src/DBGPerspective/nmv-run-program-dialog.cc, nmv-run-program-dialog.h:
	Beginning implementation of the ability to set environment variables in the
	"Execute" dialog.  It's a really bad user experience right now, but I
	haven't decided on a final approach yet.  Currently there's an "Add" button
	that will append an empty row onto the treeview of environment variables.
	The User can then click on that blank row and edit the cells to define the
	variable name and value.  This isn't very discoverable, because it's not
	obvious that a new empty row has been added.  We need a better solution for
	the UI.
	* src/DBGPerspective/nmv-dbg-perspective.cc: connect to dialog to get the
	environment variables map

2006-09-21  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	detect when the target received a signal or an error.
	Add two new signals: IDebugger::signal_received_signal() and
	IDebugger:error_signal(). Renamed IDebugger::error_message_signal()
	into IDebugger::log_message_signal(). The later name reflects more
	what the signal is about. Did some logging cleanup. Fix the
	debugger error detection parsing code.
	Added a new IDebugger::add_env_variables() to support setting
	environment variables for running the target.
	* src/DBGPerspective/nmv-dbg-perspective.cc: notify the user whenever
	the target receives a signal or when the debugger engine itself gets
	and error. Also made the API change to prepare the support of
	setting environment variables for the target. Now everything is
	in place, we just need to get the enviroment variable values from
	the GUI.
	* src/DBGPerspective/nmv-proc-list-dialog.cc:
	ProcListDialog::run(): fix a gdb warning: the function must return
	a value.
	* src/main.cc: DBGPerspective::execute_program() now takes
	an environment variables map.

2006-09-19  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	switch back the accelerator for loading a core file to "L" since "C" is
	* src/DBGPerspective/nmv-dbg-perspective.cc: switch back the accelerator for
	loading a core file to "L" since "C" is already taken by "Close"

2006-09-19  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	abstracted out a common base Dialog class for nemiver add new base Dialog
	* src/DBGPerspective/nmv-dialog.cc, src/DBGPerspective/nmv-dialog.h:
	abstracted out a common base Dialog class for nemiver
	* src/DBGPerspective/Makefile.am: add new base Dialog files
	* src/DBGPerspective/nmv-load-core-dialog.cc,
	src/DBGPerspective/nmv-load-core-dialog.h: inherit from Dialog
	* src/DBGPerspective/nmv-proc-list-dialog.cc,
	src/DBGPerspective/nmv-proc-list-dialog.h: inherit from Dialog
	* src/DBGPerspective/nmv-run-program-dialog.cc,
	src/DBGPerspective/nmv-run-program-dialog.h: inherit from Dialog

2006-09-19  Dodji Seketeli <dodji@src.gnome.org>

	* configure.ac, src/term: removed the src/temp directory

2006-09-18  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	add a tty parameter to IDebugger::attach_to_program()
	and IDebugger::load_program().
	* src/DBGPerspective/nmv-terminal.cc,h:
	added this small and simple terminal implementation based on vte.
	* src/DBGPerspective/nmv-dbg-perspective.cc: added a "target terminal"
	in so that targets' terminal can be redirected there.
	When a target needs some stdout/stdin interaction with the user,
	it can now be done via that tab.

2006-09-18  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-load-core-dialog.cc,h: put Jonner as the
	author here.

2006-09-18  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	added new LoadCoreDialog files Added new glade file for the new Load Core
	* src/DBGPerspective/Makefile.am: added new LoadCoreDialog files
	* src/DBGPerspective/glade/Makefile.am: Added new glade file for the new
	Load Core Dialog window
	* src/DBGPerspective/glade/loadcoredialog.glade: new file
	* src/DBGPerspective/nmv-load-core-dialog.cc: new file
	* src/DBGPerspective/nmv-load-core-dialog.h: new file
	* src/DBGPerspective/nmv-dbg-perspective.cc: integrate the new Load Core
	file dialog, update the menu text and accelerators for a couple of the
	actions in the 'File' menu. (loading a core file is now Alt+F -> C).
	* src/DBGPerspective/nmv-run-program-dialog.cc: removed an extra include
	that is no longer needed

2006-09-18  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	ignore: Cleanup. Ignore a bunch more files I thought I removed this last
	* svn:ignore: Cleanup.  Ignore a bunch more files
	* src/DBGPerspective/glade/runprogramdialog.glade.bak: I thought I removed
	this last time

2006-09-18  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	Added new glade dialog window from Baptiste Mille-Mathias. Thanks!
	* src/DBGPerspective/glade/runprogramdialog.glade: Added new glade dialog
	window from Baptiste Mille-Mathias.  Thanks!  Modified slightly to increase
	width to fit a title.  Also, the environment variables portion of the dialog
	is hidden for now until we add support for setting environment variables.
	* src/DBGPerspective/nmv-dbg-perspective.cc: add "..." at the end of the
	"Execute" menu item to make it more obvious that it will open a dialog
	window instead of immediately perform an action.
	* src/DBGPerspective/nmv-run-program-dialog.cc: integrate new glade file
	* src/DBGPerspective/glade/runprogramdialog.glade.bak: removed
	* src/DBGPerspective/glade/runprogramdialog.gladep.bak: removed

2006-09-17  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: change this to reflect
	the API change in libgsvmm 0.1.0
	* src/term/nmv-terminal.cc: started to hack up this small vte based
	terminal called nmvterm.
	The aim is not to have a full featured terminal but
	something light so that we can redirect targets' tty to it.
	I think I will need to code an ITerminal interface responsible
	to drive this terminal process from inside nemiver. I will
	also use Gtk::Socket/Plug to make sure nmvterm's widget show up
	in a widget embedded in a nemiver's debugger perspetive. Nice hacks
	to come.
	* src/common/nmv-env.h: added NEMIVER_BEGIN_NAMESPACE and
	NEMIVER_AND_NAMESPACE macros to keep emacs users indentation support
	happy.
	* configure.ac: check the availability of vte.

2006-09-17  Dodji Seketeli <dodji@src.gnome.org>

	* sed.sh, sed2.sh: remove these from repository.
	* src/dbgengine/nmv-gdb-engine.cc: did a bit of code cleanup.
	* configure.ac: rely on libgtksourceview-1.0, version 0.1.0 now.
	no more gtksourceviewmm-1.0
	* tests/inout.cc: added some logs.

2006-09-16  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::parse_variable_value(): don't throw exeception
	on parsing errors.
	* tests/inout.cc: added this testing material prog to work on
	target input/output handling.

2006-09-16  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::parse_variable_value(): don't forget to parse
	simple variable value as well eg: value="8". We did parse compound
	values only.
	GDBEngine::Priv::parse_stream_record(): replace the leading chars
	"\\n" in stream record by an end-of-line character. Stream records
	are now nicers to print.
	GDBEngine::Priv::parse_result_record(): reflect the change in
	GDBEngine::Priv::parse_variable_value().
	OnStreamRecordHandler::do_handle(): group all the stream records of
	of a given gdb output record and fire just one signal per type of
	record (IDebugger::console_message_signal(),
	IDebugger::target_ouput(), or IDebugger::debugger_log()). In the
	past, I use to fire one signal per stream record.
	* src/DBGPerspective/nmv-vars-editor.cc: now show function arguments
	as well as local variables. Fixing the debugger engine leads
	to correctly showing simple variables as well. Show local variable
	types when the information is available.
	* src/DBGPerspective/nmv-dbg-perspective.cc: add traces to help
	debug the breakpoints setting workflows.
	Make sure that the callstack status notebook tab gets selected by default.
	* src/common/nmv-log-stream.cc,h,nmv-log-stream-utils:
	Did some code cleanup in here.
	* src/common/nmv-exception.h: prefix the exception log messages by
	"|X|".

2006-09-14  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc:
	GDBEngine::Priv::parse_member_variable(): debugged this to a point
	that makes it suck much less. It seems like the parsing is quite
	right. The main problem being that I have to learn what to parse
	by sending data to gdb and see what comes out <grin/>.
	GDBEngine::Priv::parse_result_record(): make this parse variable
	value when needed. Okay, IDebugger know fires a
	IDebugger::variable_value_signal() as the result of the
	IDebugger::print_variable_value() now. YAY !
	* src/DBGPerspective/nmv-vars-editor.cc: make this show the local
	variables. Basically, when we get the list of local variables, loop
	over that list and call IDebugger::print_variable_value() for each.
	These calls further results in a bunch of events
	IDebugger::variable_value_signal(), feeding us with the complete
	description of the variable. We just show that complete list.
	This entry basically shows the local variables in each frame \o/ .
	It still need some polish though, but the basics are in the box.

2006-09-14  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc: fought hard to parse gdbmi variable
	value (result of -data-evaluate-expression). I still have to debug
	the result of the parsing and make sure it is correct.
	At this point, nothing is visible yet.
	* src/DBGPerspective/nmv-vars-editor.cc: started to prepare the code
	here for when we get IDebugger::Variable with full info from
	IDebugger. We are not there yet.

2006-09-12  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc: debug the parsing of local
	variables.
	* src/DBGPerspective/nmv-vars-editor.cc,h: went forward on the variable
	editor. It can now show variables, but not their attributes.
	* src/DBGPerspective/nmv-dbg-perspective.cc: show the variable editor
	in the notebook.

2006-09-10  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-vars-editor.cc,h: added this.
	Started to hack on the variable editor. I am still far far in the
	limbos.
	* short-term-todo-list.txt: updated the todo list.

2006-09-09  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	add a IDebugger::currenf_frame_signal() emitted when the user
	loads a core file. This indicates the number of the frame where
	the signal occured, which is basically zero. I added this signal
	for debugging purposes, because working on it helped me iron out
	lots of glitches here and there. Parse what gdbs throws out when we
	load a core file.
	Add a IDebugger::load_core_file() entry point. The says it all.
	* src/DBGPerspective/menus/menus.xml,
	src/DBGPerspective/nmv-dbg-perspective.cc:added "load core" menu
	entries/actions. Today, the user is asked twice to load a file.
	Once to load a core file, and the other time to load a program
	image. We should come up with a nice widget that shows the two
	step at the same place so that the user has a better experience
	in this process.
	* src/common/nmv-log-stream.cc: add support for the environement
	variable nmv_log_domain="domain" to set up domain filters for
	logging. Oh, I have also added the wildcard 'all' domain.
	Setting nmv_log_domain=all pulls *all* the logs from all the domains.
	Beware, that *is* verbose.
	* tests/Makefile.am, tests/test-core.cc: added a test to load
	core files. To run it, do ./runtestcore <prog> <core>
	* tests/do-core.cc: added this crasher which sole job is to dump
	a core that can be used later by runtestcore.

2006-09-09  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	use gnome-autogen.sh from gnome-common instead of maintaining a separate
	* autogen.sh: use gnome-autogen.sh from gnome-common instead of maintaining
	a separate autogen.sh script
	* depcomp, install-sh, missing: remove automake-generated files

2006-09-09  Dodji Seketeli <dodji@src.gnome.org>


2006-09-09  Dodji Seketeli <dodji@src.gnome.org>

	* src/dbgengine: moved src/DBGPerspective/dbgengine over here.
	Now, the dbgengine dynmod is "independant" from the the Debugger
	graphical perspective. One can use it from outside that perspective.
	See the test/test-breakpoing.cc test as an example.
	To run that test, do cd tests ; ./runtestbreakpoint .libs/fooprog .
	* src/dbgengine/nmv-gdb-engine.cc: do a bit of cleanup. Wire the
	IDebugger::program_finished_signal(). I forgot to wire it in the
	first place.
	* src/dbgengine/nmv-i-debugger.h: Remove the
	IDebugger::Frame::Parameter, as it is no used. Remember, I use
	IDebugger::Variabl instead.
	* src/DBGPerspective/nmv-dbg-perspective.cc: use the
	IDebugger::program_finished_signal() instead of fiddling with
	the IDebugger::stopped_signal() and the "StopReason" field.
	* src/common/nmv-dynamic-module.h: make
	DynamicModule::get_module_loader() public.
	* src/common/nmv-proc-utils.cc,h: make a bit of cleanup.
	* tests/test-breakpoint.cc: make this work properly with the main
	loop. Remove the former sleep(1) hacks. Now this properly works
	with the mainloop. What a beauty.
	I was obliged to to do this in several svn commits because I had
	svn problems <grin/>

2006-09-09  Dodji Seketeli <dodji@src.gnome.org>


2006-09-09  Dodji Seketeli <dodji@src.gnome.org>


2006-09-08  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,
	src/common/nmv-proc-utils.cc,h: remove
	* autogen.sh: add autoheader in there.
	GDBEngine::Priv::launch_program() and
	GDBEngine::Priv::attach_channel_to_loop_context_as_source(). Put them
	in nmv-proc-utils.h.

2006-09-08  Jonathon Jongsma <jjongsma@src.gnome.org>

	Add i18n support

2006-09-07  Dodji Seketeli <dodji@src.gnome.org>

	* added short-term-todo-list.txt

2006-09-06  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,
	src/DBGPerspective/dbgengine/nmv-i-debugger.h:
	don't use the IDebugger::FrameParameter, use IDebugger::Variable
	instead. Implement the IDebugger::list_local_variables() call.
	Make it fire the IDebugger::local_variables_listed_signal() event.
	* src/DBGPerspective/nmv-call-stack.cc: update this to use
	IDebugger::Variable instead of IDebugger::FrameParameter

2006-09-05  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,
	src/DBGPerspective/dbgengine/nmv-i-debugger.h: started to work
	the local variables parsing code. Nothing works yet.
	* src/DBGPerspective/nmv-dbg-perspective.cc:  don't add a "\n(gdb)"
	string each time a string is sent to the command view.

2006-09-03  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/menus/menus.xml,
	src/DBGPerspective/nmv-dbg-perspective.cc: replace the "set/unset"
	breakpoint menu entries by a single "toggle break" menu entry.
	I did the same in the contextual menu. I find this more convenient.
	Also, place the selection cursor at the same line as the
	"where marker".
	* src/DBGPerspective/nmv-source-editor.cc,h: add some helper code
	here.

2006-09-03  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,
	src/DBGPerspective/dbgengine/nmv-i-debugger.h: issue the
	"info proc" command upon IDebugger::run(), IDebugger::attach()
	and IDebugger::load_program() so that we can get the PID of the
	target program being debugged. I have added the signal
	IDebugger::got_proc_info_signal() to emit that information.
	Based on that work, added IDebugger::stop() to stop the
	current program when it is 'running'. Did a bit of cleanup.
	* src/DBGPerspective/menus/menus.xml,
	src/DBGPerspective/nmv-dbg-perspective.cc:
	added a "stop" menuitem, wired it to the new IDebugger::stop()
	function.
	Prevent a user from attaching to nemiver itself.

2006-09-02  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: consider paths as local
	everywhere, not like URIs. No more gnomevfs is involved in handling
	path. I still use gnomevfs (the C api) to detect file mime types.
	I think I need to wrap the gnome_vfs_get_mime_type_for_name() api.
	It doesn't seems to be wrapped atm. This should fix a bug reported
	by Jonathon Jongsma when trying to open files that have paths with
	characters that must be escaped to have a valid URI.

2006-09-02  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-call-stack.cc: emit the
	CallStack::frame_selection_signal() when the user selects a
	frame. Select the frame 0 by default when a new call stack is
	set.
	* src/DBGPerspective/nmv-dbg-perspective.cc: move the where marker
	when the CallStack::frame_selection_signal() is fired, no more
	when the IDebugger::debugger_stopped_signal() is fired.

2006-08-31  Dodji Seketeli <dodji@src.gnome.org>

	* src/common/nmv-safe-ptr.h: removed the cast operator to PointerType* .
	This leads to safer code. I needed to update a lot of files in the
	entire project to reflect this change.
	* src/DBGPerspective/nmv-throbbler.cc,h: make the throbbler work somehow.
	* src/DBGPerspective/nmv-dbg-perspective.cc: pack the throbbler at the
	right hand side of the toolbar. Start it when the debugger engine is running,
	stop it otherwise, woot. Okay, now that the mechanics are in place,
	we need some much better artwork.
	* src/DBGPerspective/icons/green.png: added this png file show in the
	throbbler when it is stopped.

2006-08-30  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-call-stack.cc: do not show the arguments values
	in the callstack because it can get very long.
	* src/DBGPerspective/nmv-throbbler.cc,h: started to hack on this. Far from
	being finished

2006-08-29  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: debug the
	GDBMIList::get_value_content() method so that the frame params parsing
	works better. Add a bunch of logs for further debug, in any case.
	* src/DBGPerspective/nmv-call-stack.cc: add the function parameters
	to the treeview and update them accordingly. Wow, it seems to *work*. Now
	I can go sleep, I am tired.

2006-08-29  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: properly emit the
	IDebugger::frames_params_listed_signal(), yay !.
	* src/DBGPerspective/nmv-call-stack.cc: hook on the
	IDebugger::frames_params_listed_signal(). The CallStack widget doesn't
	do anything useful with it yet. Next stop is to display the frames
	parameters arguments ... cheers.

2006-08-29  Jonathon Jongsma <jonathon.jongsma@gmail.com>

	check to see if an accel key is registered for each action and if not, use
	* src/uicommon/nmv-ui-utils.cc: check to see if an accel key is registered
	for each action and if not, use an overloaded ActionGroup::add() function
	that doesn't set an accelkey.  This way, any menu items that use a
	Gtk::StockID automatically get their standard accel keys registered.  Now
	menu items Open (<control>O), Quit (<control>Q), and Close (<control>W) all
	work correctly
	* src/workbench/nmv-workbench.cc: Add mnemonic for the _File menu (so that
	<alt>F works).

2006-08-29  Dodji Seketeli <dodji@src.gnome.org>

	* src/common/Makefile.am: add nmv-connection.h and
	nmv-connection-manager.h  so that we pass make distcheck.
	* Makefile.am, nemiver.desktop: applied a patch from Jonathon Jongsma to
	add a nemiver.desktop file.

2006-08-28  Dodji Seketeli <dodji@src.gnome.org>

	* removed svn-commit.tmp, vg.log, patch.txt from the source repository.

2006-08-28  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: debunked the
	gdb/mi list parsing code. It seems to work now. Next stop is to
	emit the proper signal and then to show the function arguments in
	the call stack widget.

2006-08-28  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: spent a lot of time
	debugging the crash that was occuring during the parsing of GDBMI structures.
	It was due to GDBMIValue::get_value_content()
	and GDBMIValue::get_result_content()
	returning copies of list<> and not references. Thus, writting this:
	for (iter = gdbmivalue.get_value_conten ().begin () ;
	iter != gdbmivalue.get_value_content ().end ();
	++iter) {
	//blah
	}
	was leading to subtle crashes because iter was looping out of the list
	bounds, because the two calls to get_value_content() are returning
	*different* list objects. I must change the signature of that method,
	for sure.

2006-08-28  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: cleanup, more call
	stack parsing. Started to work on frame parameters parsing. Still
	bugged atm.
	* src/DBGPerspective/dbgengine/nmv-i-debugger.h: added
	IDebugger::frames_params_listed_signal(), not plugged yet.
	* src/DBGPerspective/nmv-call-stack.h,cc: the callstack thing starts
	working somehow. The function parameters part still doesn't, though.

2006-08-27  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: more stack trace
	parsing. Things are getting better and more solid. Still nothing visible
	yet.
	* src/main.cc: fix the --log-domains option handling.

2006-08-26  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: more stack trace
	parsing. Still does not work.
	* src/DBGPerspective/nmv-sess-mgr.cc: log in default domain here.
	* src/DBGPerspective/nmv-dbg-perspective.cc: applied a patch
	from Jonathon Jongsma to make the notbook tabs behave like epiphany,
	i.e, don't eat up all the screen size, but instead allow horizontal
	scrolling when the number of notebook pages reaches a certain
	number.
	* ltmain.sh,aclocal.m4: remove generated files from repository.

2006-08-26  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: more stack trace
	parsing work. Nothing works yet.
	* src/common/nmv-i-connection-driver.h,
	src/common/nmv-connection.cc,h,
	src/dbdimpl/sqlite/nmv-sqlite-cnx-drv.cc,h: long int and int64 are
	the same on amd64 ...

2006-08-26  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,
	src/DBGPerspective/nmv-dbg-perspective.cc :
	updated this code to use the domain aware
	logging feature that's newly available
	in src/common/nmv-log-stream-utils.h.
	* src/common/nmv-log-stream.cc,h,
	src/common/nmv-scope-logger.h: add a working support for
	logging domain. Basically, one can trigger/disable logging by
	associating a set a logs to a domain name. Enabling/diabling a
	log domain then causes all the logs associated to that logging domain
	to be enabled/disabled.
	* src/main.cc: one can now do nemiver --log-domains "foo bar" to
	enable logging for the domains foo and bar.

2006-08-25  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: mode debugging of the
	GDB/MI variable=value parsing code.
	-

2006-08-25  Dodji Seketeli <dodji@src.gnome.org>

	* modified the autogen.sh to detect automake-1.9 and remove some generated files
	from source repository.

2006-08-25  Dodji Seketeli <dodji@src.gnome.org>

	* src/workbench/Makefile.am, src/DBGPerspective/dbgengine/Makefile.am,
	src/DBGPerspective/Makefile.am, src/dbdimpl/sqlite/Makefile.am:
	add -module -avoid-version options to
	this module.
	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: started to work on
	parsing the generic "variable=value" syntax of GDB/MI. Nothing works
	yet. This is to build the ground for the callstack management.
	* src/DBGPerspective/dbgengine/nmv-i-debugger.h: added
	IDebugger::frame_listed_signal()
	* src/DBGPerspective/nmv-call-stack.cc,h: more work on this. Nothing
	works yet

2006-08-18  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,
	src/DBGPerspective/dbgengine/nmv-gdb-engine.cc, :
	Change in the IDebugger api so that it does not export any knowledge
	of GDB/MI. IDebugger is now a good citizen of the
	"encapsulation-and-code-against-interface" land. This also
	simplifies the client code a lot.
	* src/DBGPerspective/nmv-call-stack.cc,h: started to hack on a call
	stack type. Everything has to be done.
	* src/DBGPerspective/nmv-dbg-perspective.cc: reflect the changes in
	the IDebugger API in here.

2006-08-17  Dodji Seketeli <dodji@src.gnome.org>

	* src/workbench/nmv-workbench.cc: don't add the same action group twice.
	* src/DBGPerspective/nmv-dbg-perspective.cc: make the command, error and
	target output scroll. Debunk the beast a bit.

2006-08-16  Dodji Seketeli <dodji@src.gnome.org>

	* src/workbench/nmv-workbench.cc: cleanup the actions and ui_manager init code.
	* src/DBGPerspective/nmv-dbg-perspective.cc: properly menu accelerators.
	* src/uicommon/nmv-ui-utils.h,cc: add support for accelerators.

2006-08-16  Dodji Seketeli <dodji@src.gnome.org>

	* src/uicommon/nmv-ui-utils.h: change the api of ui_utils::ActionEntry
	to support the creation of ActionToggle objects, as well as Action
	objects.
	* src/workbench/nmv-workbench.cc: reflect the change of
	ui_utils::ActionEntry api.
	* src/DBGPerspective/nmv-dbg-perspective.cc: support showing/hidding
	the command, errors and target output views. This is not well tested
	yet. I know need to make these views scroll <grin/>.

2006-08-13  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,
	src/DBGPerspective/dbgengine/nmv-i-debugger.h	: added an
	IDebuggger::program_finished_signal() here.
	* src/DBGPerspective/nmv-dbg-perspective.cc: added some keyboard
	shortcuts to pilot the debugger: F5 (continue), shift-F5 (run),
	F7 (step into), shift-F7 (step out), F8 (step over). Fix
	the handling of IDebugger::stopped_signal(), handle the
	"program-exited" event.
	* src/DBGPerspective/nmv-source-editor.cc,h:
	added SourceEditor::unset_where_marker() to remove the "where
	marker" from the source editor.

2006-08-12  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: make this rely on the
	new IDebugger API only. Remove the knowledge of GDM/MI from here.
	There are part of this class that are much nicer now.

2006-08-12  Dodji Seketeli <dodji@src.gnome.org>

	* src/workbench/nmv-workbench.cc, nmw-i-workbenc.h: added
	IWorkbenc::get_properties().
	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc,nmv-i-debugger.h:
	added a bunch of rather precise signals to reflect the state of the
	debugger. This is a big step in direction of IDebugger api that
	does not adhere to anything gdb specific. This will also hopefully
	help to simplify the client code.
	Did a bit of cleanup too.  Also make the "attach to process"
	thing work.
	* src/DBGPerspective/nmv-dbg-perspective.cc: started to wire the
	this to the new IDebugger signals, to simplify this code. There
	should not be any knowledge of gdb/mi in this class.

2006-08-11  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: provide the 'attach to
	process' at this level.
	* src/DBGPerspective/nmv-dbg-perspective.cc: wire the 'attach to process'
	functionality so that I can debug it. Okay, it highly broken today ...

2006-08-10  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/menus/menus.xml: add a menu item for the attach
	to a process dialog.
	* src/DBGPerspective/nmv-proc-list-dialog.cc,h: went forward on this.
	* src/DBGPerspective/nmv-dbg-perspective.cc: wired the "attach to
	process dialog" so that we can test it.

2006-08-10  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-proc-list-dialog.cc,h:  more work on this.
	Nothing works yet.

2006-08-09  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-proc-list-dialog.cc,h: started to work on the
	proc list dialog. Nothing works for now.

2006-08-09  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-proc-mgr.cc,h: more work on the libgtop
	wrapper.

2006-08-08  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-proc-mgr.cc,h: added this small class to
	show the list of running processes. Not tested yet.

2006-08-07  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-sess-mgr.cc,h: implemented
	SessMgr::delete_sessions() and SessMgr::delete_session() with default
	transaction.
	* src/main.cc: implemented the --purgesssions and --executesession
	options.

2006-08-06  Dodji Seketeli <dodji@src.gnome.org>

	* src/workbench/nmv-workbench.cc: hide the main window by default.
	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: fix a long standing
	annoying assert.
	* src/DBGPerspective/nmv-sess-mgr.cc,h: make ISessMgr be a pure
	interface.
	* src/DBGPerspective/nmv-dbg-perspective.cc: started to support
	the launching of a recorded session. Nothing works yet.
	* src/main.cc: support the --listsessions option. Next stop is to
	add a --debugsession <sessionnum> option.

2006-08-05  Dodji Seketeli <dodji@src.gnome.org>

	* src/workbench/nmv-i-perspective.h: added some comments.
	* src/workbench/nmv-workbench.cc: emit the
	IWorkbench::shutting_down_signal() signal at app shutdown.
	* src/DBGPerspective/nmv-sess-mgr.cc,h: went forward in
	saving/loading/deleting sessions. It seems the saving part works
	somehow. I haven't really tested it though.
	* src/DBGPerspective/nmv-dbg-perspective.cc: save the session
	at workshop shutdown time. I haven't coded anything to reload
	the sessions yet.
	* src/common/nmv-tools.cc:
	(execute_sql_command_file): check the presence of the sql script
	file before opening it.
	* src/common/nmv-date-utils.h: properly export the functions here.

2006-08-04  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-sess-mgr.cc,h,
	src/DBGPerspective/sqlscripts/sqlite/create-tables.sql:
	more work on the debugger session
	manager. Nothing works yet though.

2006-08-03  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc:
	(DBGPerpective::append_source_editor): fix a typo: don't use
	Gnome::Vfs::Uri::to_string(), but rather Gnome::Vfs::Uri::get_path()
	everywhere. This should fix some annoying bugs.

2006-08-03  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: properly close
	the right source editor when asked.

2006-08-03  Dodji Seketeli <dodji@src.gnome.org>

	* added  workbench/nmv-i-pref-mgr.h

2006-08-03  Dodji Seketeli <dodji@src.gnome.org>

	* added common/nmv-i-connection-driver.h, common/nmv-i-connection-manager-driver.h

2006-08-03  Dodji Seketeli <dodji@src.gnome.org>

	* added src/dbdimpl/*

2006-08-03  Dodji Seketeli <dodji@src.gnome.org>

	* src/*lot-of-files*: started to work on a session manager.
	also, tried to make the nmv-dbg-perspective.cc code more robust.
	Don't emit the "debugger-not-ready' signal after we send the
	"break" command to gdb.

2006-08-01  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: okay, I think I understood
	the cause of the previous crash ==> intialize
	DBGPerspective::Priv::contextual_menu .

2006-08-01  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: better handling of the editor
	state. Don't dynamic_cast in DBGPerspective::popup_source_view_contextual_menu(),
	because some users reported a crash a that point (weird).
	* src/DBGPerspective/nmv-source-editor.cc: code cleanup. Set the source
	editor in the view only state.

2006-08-01  Dodji Seketeli <dodji@src.gnome.org>

	* src/common/nmv-ustring.cc: (UString::join): fix a crasher.
	* src/main.cc: more command line option work. Seems like we can now launch
	the debugger via the command line now.

2006-08-01  Dodji Seketeli <dodji@src.gnome.org>

	* src/main.cc,src/common/nmv-ustring.cc,h,src/DBGPerspective/nmv-dbg-perspective.h,cc:
	more work on the command line handling.

2006-07-31  Dodji Seketeli <dodji@src.gnome.org>


2006-07-31  Dodji Seketeli <dodji@src.gnome.org>


2006-07-31  Dodji Seketeli <dodji@src.gnome.org>

	* src/main.cc: started to work on command line options to launch the
	debugger

2006-07-30  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: fix handling of
	breakpoint listing.
	* src/DBGPerspective/nmv-source-editor.cc: don't set breakpoint
	markers more than once per line.
	* src/common/nmv-ustring.cc: fix the UString::chomp() function.

2006-07-28  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: added
	GDBEngine::delete_breakpoint() to delete breakpoints by bkpoint number.
	* src/DBGPerspective/nmv-dbg-perspective.cc: started to work on breakpoint
	deletion capabilities, via the contextual menu.

2006-07-25  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc:
	Build contextual menu when right clicking in a sourceview.
	I still have to code the unset break point action handler.
	* src/DBGPerspective/nmv-source-editor.cc:  override the
	on_button_press_event() virtual method so that we can work around
	the hard coded contextual menu of gtksourceview.

2006-07-25  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::Priv::parse_breakpoint): parse full file name and breakpoint
	line.
	* src/DBGPerspective/nmv-dbg-perspective.cc: set breakpoints, visually.

2006-07-25  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: better
	handling of commands flow control. IDebugger::queue_command()
	won't issue a command until the preceding command triggers
	a result record back from gdb. IDebugger::execute_command() is
	now just a wrapper around Idebugger::queue_command. Everybody
	now has to use IDebugger::queue_comand().
	* src/DBGPerspective/nmv-dbg-perspective.cc: started to
	cache a list of breakpoints. The list gets updated gradually.
	I can now use this list to display the breakpoints visually.
	* src/common/nmv-ustring.cc,h: Added UString::chomp() to trim
	white spaces at the begining and at the end of the strings.

2006-07-11  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: added the step out
	action.
	* src/DBGPerspective/dbgengine/nmv-i-debugger.h: added the step out
	method.
	* src/common/*.(cc|h): seded some copyright information

2006-07-11  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-dbg-perspective.cc: wire the menu actions
	with what they have to do, make sure the command, prog outpout and
	error view scroll to end properly.

2006-07-10  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc:
	add IDebugger::queue_command( . It basically queues a command
	that will be executed only after the previous command has been
	executed.
	To execute a command directly (without waiting for any other command),
	use IDebugger::execute_command().
	* src/DBGPerspective/nmv-dbg-perspective.cc:
	(DBGPerspective::execute_program): by default, break in main and
	run the program. In a near future, one should be able to deactivate
	this by a checkbox in the "execute program" dialog.

2006-07-09  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: add more parsing
	function error logs.
	* src/DBGPerspective/nmv-dbg-perspective.cc: first version to
	move the "where" marker when the debugger sends 'stopped' out of band
	record. This works somehow, but I think the Gtk::TextView::scroll_to()
	should be called in a g_idle_add(). This only works when typing
	gdb/mi commands by hands in the command view.
	* src/DBGPerspective/nmv-source-editor.cc: first version of the
	infrastructure to show the "where" marker in the source.

2006-07-07  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: better handling of the
	debugger answer.

2006-07-06  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::Priv::on_gdb_stdout_has_data_signal): fix the condition to
	detect that a gdb output chunk is complete. This should be more robust
	now.
	* src/DBGPerspective/nmv-dbg-perspective.cc:
	(DBGPerspective::on_insert_in_command_view_signal): added this method
	to detect that a user typed a gdb command in the command view and send
	the command to gdb.

2006-07-06  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/nmv-source-editor.cc:
	(SourceEditor::Priv::get_absolute_resource_path): fix this
	(SourceEditor::init): load the breakpoint marker pixbuf

2006-07-06  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::load_program): fixed loading a program after
	gdb has been launched
	* src/DBGPerspective/nmv-source-editor.cc: get the path to
	the resources at instanciation time so that we can load things
	like breakpoint marker pixbufs and the like.
	* src/DBGPerspective/icons/breakpoint-marker.png: added this to
	repository

2006-07-03  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::Priv::launch_gdb): the target arguments have to be
	set using the "set args" command.
	(GDBEngine::Priv::on_gdb_master_pty_has_data_signal),
	(GDBEngine::Priv::on_gdb_stdout_has_data_signal): advertise a
	a gdb output record only if the "(gdb)" string is found in the
	buffer we get from gdb. Otherwise, wait for the next string chunk
	Also, add debugging to lot of the parsing routines.
	* src/DBGPerspective/nmv-dbg-perspective.cc:
	add a "debugger_ready_signal() and use it to set the debugger
	ready dependant actions (un)sensitive.

2006-07-02  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-i-debugger.h: fixed some doc
	* src/DBGPerspective/nmv-dbg-perspective.cc: start throwing the
	the debugger stream record at the different text views of the status
	window
	* src/DBGPerspective/glade/bodycontainer.glade: update the status
	window

2006-07-01  Dodji Seketeli <dodji@src.gnome.org>

	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc: made various fixes
	to make this work with the main loop. Do not necessarily run the
	main loop each time a command is issued.
	* src/DBGPerspective/dbgengine/nmv-i-debugger.h: make it optional
	to run the event loop after issuing a command
	* src/DBGPerspective/nmv-dbg-perspective.cc: started to wire the
	'execute program' action.
	* src/DBGPerspective/nmv-run-program-dialog.cc,h: started to code
	the run program dialog.
	* src/common/nmv-ustring.cc,h: added the UString::split() method.

2006-06-22  Dodji Seketeli <dodji@src.gnome.org>

	* */Makefile.in: remove these files from svn.
	* configure: removed this file from svn:
	* src/dbgengine: moved this in src/DBGPerspective . The dbgengine
	is now part of the DBGPerspective plugin.
	* src/DBGPerspective/dbgengine/nmv-gdb-engine.cc:
	(GDBEngine::Priv::on_gdb_stdout_signal): fixed a crash due to
	a bad usage of iterators.
	* tests/test-breakpoint.cc: updated this to reflect the move
	of the dbgenginein the DBGPerspective.

2006-06-22  Dodji Seketeli <dodji@src.gnome.org>

	* remove some the useless autom4te.cache dir from svn.

2006-06-22  Dodji Seketeli <dodji@src.gnome.org>

	* initial import

